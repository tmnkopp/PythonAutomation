06/05/2023 02:42:59 PM init
06/05/2023 02:43:00 PM usecache: True cache_file: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\\cache\\8433.html
06/05/2023 02:43:00 PM ^\s*(\d[\d\.a-z]+)\s[A-Z][\s|a-z]?:ISSUE: The form for Section 7 of the SAOP Data Call needs to be created WHERE: FY19 Annual SAOP Data Call DETAILS: These metrics are placeholders until the final metrics are received Section 7: Digital Services Conditional Metrics
06/05/2023 02:43:00 PM ^\s*(\d[\d\.a-z]+)\s[A-Z][\s|a-z]?:7a. Does the agency maintain an inventory of the following? (Select all that apply or indicate N/A if the agency does not maintained an inventory of any digital services.)
06/05/2023 02:43:00 PM PK_QuestionType: 43
06/05/2023 02:43:00 PM Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
06/05/2023 02:43:00 PM NumExpr defaulting to 8 threads.
06/05/2023 02:43:00 PM ^\s*(\d[\d\.a-z]+)\s[A-Z][\s|a-z]?:7b. In accordance with the E-Government Act of 2002 and OMB guidance, does the agency maintain and post privacy policies on the following? (Select all that apply or indicate N/A if the agency does not maintained any of the following.) 
06/05/2023 02:43:00 PM PK_QuestionType: 43
06/05/2023 02:43:00 PM ^\s*(\d[\d\.a-z]+)\s[A-Z][\s|a-z]?:7c. Does the agency have a process to regularly review and update the privacy policies for each of the following? (Select all that apply or indicate N/A if the agency does not maintained any of the following.)
06/05/2023 02:43:00 PM PK_QuestionType: 43
06/05/2023 02:43:00 PM ^\s*(\d[\d\.a-z]+)\s[A-Z][\s|a-z]?:7d. Has the agency developed and implemented a written policy for the agencys use of social media? (Indicate N/A if the agency does not use social media.)
06/05/2023 02:43:00 PM PK_QuestionType: 1
06/05/2023 02:43:00 PM ^\s*(\d[\d\.a-z]+)\s[A-Z][\s|a-z]?:7e. During the reporting period, did the agency use web management and customization technologies on any website or mobile application?
06/05/2023 02:43:00 PM PK_QuestionType: 1
06/05/2023 02:43:00 PM ^\s*(\d[\d\.a-z]+)\s[A-Z][\s|a-z]?:7f. During the reporting period, did the agency review the use of web management and customization technologies to ensure compliance with all laws, regulations, and OMB guidance? (Indicate N/A if the agency does not use web management and customization technologies.)
06/05/2023 02:43:00 PM PK_QuestionType: 1
06/05/2023 02:43:00 PM ^\s*(\d[\d\.a-z]+)\s[A-Z][\s|a-z]?: DEVELOPER'S NOTES: Developers, please enter what files were changed and what was fixed in this sectioin
06/05/2023 02:43:32 PM init
06/05/2023 02:43:34 PM usecache: True cache_file: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\\cache\\8433.html
06/05/2023 02:43:34 PM ^\s*(\d[\d\.a-z]+)\s{1,9}[A-Z][\s|a-z]?:ISSUE: The form for Section 7 of the SAOP Data Call needs to be created WHERE: FY19 Annual SAOP Data Call DETAILS: These metrics are placeholders until the final metrics are received Section 7: Digital Services Conditional Metrics
06/05/2023 02:43:34 PM ^\s*(\d[\d\.a-z]+)\s{1,9}[A-Z][\s|a-z]?:7a. Does the agency maintain an inventory of the following? (Select all that apply or indicate N/A if the agency does not maintained an inventory of any digital services.)
06/05/2023 02:43:34 PM PK_QuestionType: 43
06/05/2023 02:43:34 PM Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
06/05/2023 02:43:34 PM NumExpr defaulting to 8 threads.
06/05/2023 02:43:34 PM ^\s*(\d[\d\.a-z]+)\s{1,9}[A-Z][\s|a-z]?:7b. In accordance with the E-Government Act of 2002 and OMB guidance, does the agency maintain and post privacy policies on the following? (Select all that apply or indicate N/A if the agency does not maintained any of the following.) 
06/05/2023 02:43:34 PM PK_QuestionType: 43
06/05/2023 02:43:34 PM ^\s*(\d[\d\.a-z]+)\s{1,9}[A-Z][\s|a-z]?:7c. Does the agency have a process to regularly review and update the privacy policies for each of the following? (Select all that apply or indicate N/A if the agency does not maintained any of the following.)
06/05/2023 02:43:34 PM PK_QuestionType: 43
06/05/2023 02:43:34 PM ^\s*(\d[\d\.a-z]+)\s{1,9}[A-Z][\s|a-z]?:7d. Has the agency developed and implemented a written policy for the agencys use of social media? (Indicate N/A if the agency does not use social media.)
06/05/2023 02:43:34 PM PK_QuestionType: 1
06/05/2023 02:43:34 PM ^\s*(\d[\d\.a-z]+)\s{1,9}[A-Z][\s|a-z]?:7e. During the reporting period, did the agency use web management and customization technologies on any website or mobile application?
06/05/2023 02:43:34 PM PK_QuestionType: 1
06/05/2023 02:43:34 PM ^\s*(\d[\d\.a-z]+)\s{1,9}[A-Z][\s|a-z]?:7f. During the reporting period, did the agency review the use of web management and customization technologies to ensure compliance with all laws, regulations, and OMB guidance? (Indicate N/A if the agency does not use web management and customization technologies.)
06/05/2023 02:43:34 PM PK_QuestionType: 1
06/05/2023 02:43:34 PM ^\s*(\d[\d\.a-z]+)\s{1,9}[A-Z][\s|a-z]?: DEVELOPER'S NOTES: Developers, please enter what files were changed and what was fixed in this sectioin
06/05/2023 03:58:55 PM init
06/05/2023 03:59:08 PM init
06/05/2023 04:00:13 PM Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
06/05/2023 04:00:13 PM NumExpr defaulting to 8 threads.
06/05/2023 06:16:51 PM init
06/05/2023 06:16:52 PM Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
06/05/2023 06:16:52 PM NumExpr defaulting to 8 threads.
06/06/2023 03:36:45 PM init
06/06/2023 03:36:46 PM usecache: False cache_file: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\\cache\\9687.html
06/06/2023 03:36:46 PM 

06/06/2023 03:36:46 PM ====== WebDriver manager ======
06/06/2023 03:36:47 PM Current google-chrome version is 114.0.5735
06/06/2023 03:36:47 PM Get LATEST driver version for 114.0.5735
06/06/2023 03:36:47 PM Starting new HTTPS connection (1): chromedriver.storage.googleapis.com:443
06/06/2023 03:36:47 PM https://chromedriver.storage.googleapis.com:443 "GET /LATEST_RELEASE_114.0.5735 HTTP/1.1" 200 13
06/06/2023 03:36:47 PM Get LATEST driver version for 114.0.5735
06/06/2023 03:36:47 PM Starting new HTTPS connection (1): chromedriver.storage.googleapis.com:443
06/06/2023 03:36:47 PM https://chromedriver.storage.googleapis.com:443 "GET /LATEST_RELEASE_114.0.5735 HTTP/1.1" 200 13
06/06/2023 03:36:47 PM Trying to download new driver from https://chromedriver.storage.googleapis.com/114.0.5735.90/chromedriver_win32.zip
06/06/2023 03:36:47 PM Starting new HTTPS connection (1): chromedriver.storage.googleapis.com:443
06/06/2023 03:36:47 PM https://chromedriver.storage.googleapis.com:443 "GET /114.0.5735.90/chromedriver_win32.zip HTTP/1.1" 200 6603303
06/06/2023 03:36:48 PM Driver has been saved in cache [C:\Users\timko\.wdm\drivers\chromedriver\win32\114.0.5735.90]
06/06/2023 03:36:49 PM POST http://127.0.0.1:51323/session {"capabilities": {"firstMatch": [{}], "alwaysMatch": {"browserName": "chrome", "platformName": "any", "goog:chromeOptions": {"extensions": [], "args": ["--start-minimized", "--window-size=1220,980"]}}}, "desiredCapabilities": {"browserName": "chrome", "version": "", "platform": "ANY", "goog:chromeOptions": {"extensions": [], "args": ["--start-minimized", "--window-size=1220,980"]}}}
06/06/2023 03:36:49 PM Starting new HTTP connection (1): 127.0.0.1:51323
06/06/2023 03:36:50 PM http://127.0.0.1:51323 "POST /session HTTP/1.1" 200 859
06/06/2023 03:36:50 PM Finished Request
06/06/2023 03:36:50 PM POST http://127.0.0.1:51323/session/b843118c8d34851a2670506c5ffda95a/url {"url": "https://dayman.cyber-balance.com/jira/login.jsp"}
06/06/2023 03:36:51 PM http://127.0.0.1:51323 "POST /session/b843118c8d34851a2670506c5ffda95a/url HTTP/1.1" 200 14
06/06/2023 03:36:51 PM Finished Request
06/06/2023 03:36:51 PM POST http://127.0.0.1:51323/session/b843118c8d34851a2670506c5ffda95a/element {"using": "xpath", "value": "//input[contains(@id, \"user\")]"}
06/06/2023 03:36:51 PM http://127.0.0.1:51323 "POST /session/b843118c8d34851a2670506c5ffda95a/element HTTP/1.1" 200 94
06/06/2023 03:36:51 PM Finished Request
06/06/2023 03:36:51 PM POST http://127.0.0.1:51323/session/b843118c8d34851a2670506c5ffda95a/element/B43F147D931AD1DDE7CE423F41D2A47A_element_6/value {"text": "tim.kopp", "value": ["t", "i", "m", ".", "k", "o", "p", "p"], "id": "B43F147D931AD1DDE7CE423F41D2A47A_element_6"}
06/06/2023 03:36:51 PM http://127.0.0.1:51323 "POST /session/b843118c8d34851a2670506c5ffda95a/element/B43F147D931AD1DDE7CE423F41D2A47A_element_6/value HTTP/1.1" 200 14
06/06/2023 03:36:51 PM Finished Request
06/06/2023 03:36:51 PM POST http://127.0.0.1:51323/session/b843118c8d34851a2670506c5ffda95a/element {"using": "xpath", "value": "//input[contains(@id, \"pass\")]"}
06/06/2023 03:36:51 PM http://127.0.0.1:51323 "POST /session/b843118c8d34851a2670506c5ffda95a/element HTTP/1.1" 200 94
06/06/2023 03:36:51 PM Finished Request
06/06/2023 03:36:51 PM POST http://127.0.0.1:51323/session/b843118c8d34851a2670506c5ffda95a/element/B43F147D931AD1DDE7CE423F41D2A47A_element_5/value {"text": "MUhhZ7ZMuBU3", "value": ["M", "U", "h", "h", "Z", "7", "Z", "M", "u", "B", "U", "3"], "id": "B43F147D931AD1DDE7CE423F41D2A47A_element_5"}
06/06/2023 03:36:51 PM http://127.0.0.1:51323 "POST /session/b843118c8d34851a2670506c5ffda95a/element/B43F147D931AD1DDE7CE423F41D2A47A_element_5/value HTTP/1.1" 200 14
06/06/2023 03:36:51 PM Finished Request
06/06/2023 03:36:51 PM POST http://127.0.0.1:51323/session/b843118c8d34851a2670506c5ffda95a/element {"using": "xpath", "value": "//input[contains(@id, \"submit\")]"}
06/06/2023 03:36:51 PM http://127.0.0.1:51323 "POST /session/b843118c8d34851a2670506c5ffda95a/element HTTP/1.1" 200 94
06/06/2023 03:36:51 PM Finished Request
06/06/2023 03:36:51 PM POST http://127.0.0.1:51323/session/b843118c8d34851a2670506c5ffda95a/element/B43F147D931AD1DDE7CE423F41D2A47A_element_9/click {"id": "B43F147D931AD1DDE7CE423F41D2A47A_element_9"}
06/06/2023 03:36:54 PM http://127.0.0.1:51323 "POST /session/b843118c8d34851a2670506c5ffda95a/element/B43F147D931AD1DDE7CE423F41D2A47A_element_9/click HTTP/1.1" 200 14
06/06/2023 03:36:54 PM Finished Request
06/06/2023 03:36:54 PM GET http://127.0.0.1:51323/session/b843118c8d34851a2670506c5ffda95a/source {}
06/06/2023 03:36:54 PM http://127.0.0.1:51323 "GET /session/b843118c8d34851a2670506c5ffda95a/source HTTP/1.1" 200 156065
06/06/2023 03:36:54 PM Finished Request
06/06/2023 03:36:54 PM Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
06/06/2023 03:36:54 PM NumExpr defaulting to 8 threads.
06/06/2023 03:36:54 PM POST http://127.0.0.1:51323/session/b843118c8d34851a2670506c5ffda95a/url {"url": "https://dayman.cyber-balance.com/jira/si/jira.issueviews:issue-html/CS-9687/CS-9687.html"}
06/06/2023 03:36:55 PM http://127.0.0.1:51323 "POST /session/b843118c8d34851a2670506c5ffda95a/url HTTP/1.1" 200 14
06/06/2023 03:36:55 PM Finished Request
06/06/2023 03:36:55 PM POST http://127.0.0.1:51323/session/b843118c8d34851a2670506c5ffda95a/element {"using": "css selector", "value": "td#descriptionArea"}
06/06/2023 03:36:55 PM http://127.0.0.1:51323 "POST /session/b843118c8d34851a2670506c5ffda95a/element HTTP/1.1" 200 95
06/06/2023 03:36:55 PM Finished Request
06/06/2023 03:36:55 PM POST http://127.0.0.1:51323/session/b843118c8d34851a2670506c5ffda95a/execute/sync {"script": "return (function(){return function(){var d=this;function f(a){return\"string\"==typeof a};function h(a,b){this.code=a;this.a=l[a]||m;this.message=b||\"\";a=this.a.replace(/((?:^|\\s+)[a-z])/g,function(a){return a.toUpperCase().replace(/^[\\s\\xa0]+/g,\"\")});b=a.length-5;if(0>b||a.indexOf(\"Error\",b)!=b)a+=\"Error\";this.name=a;a=Error(this.message);a.name=this.name;this.stack=a.stack||\"\"}\n(function(){var a=Error;function b(){}b.prototype=a.prototype;h.b=a.prototype;h.prototype=new b;h.prototype.constructor=h;h.a=function(b,c,g){for(var e=Array(arguments.length-2),k=2;k<arguments.length;k++)e[k-2]=arguments[k];return a.prototype[c].apply(b,e)}})();var m=\"unknown error\",l={15:\"element not selectable\",11:\"element not visible\"};l[31]=m;l[30]=m;l[24]=\"invalid cookie domain\";l[29]=\"invalid element coordinates\";l[12]=\"invalid element state\";l[32]=\"invalid selector\";l[51]=\"invalid selector\";\nl[52]=\"invalid selector\";l[17]=\"javascript error\";l[405]=\"unsupported operation\";l[34]=\"move target out of bounds\";l[27]=\"no such alert\";l[7]=\"no such element\";l[8]=\"no such frame\";l[23]=\"no such window\";l[28]=\"script timeout\";l[33]=\"session not created\";l[10]=\"stale element reference\";l[21]=\"timeout\";l[25]=\"unable to set cookie\";l[26]=\"unexpected alert open\";l[13]=m;l[9]=\"unknown command\";h.prototype.toString=function(){return this.name+\": \"+this.message};var n;a:{var p=d.navigator;if(p){var q=p.userAgent;if(q){n=q;break a}}n=\"\"}function r(a){return-1!=n.indexOf(a)};function t(a,b){for(var e=a.length,c=f(a)?a.split(\"\"):a,g=0;g<e;g++)g in c&&b.call(void 0,c[g],g,a)};function v(){return r(\"iPhone\")&&!r(\"iPod\")&&!r(\"iPad\")};function w(){return(r(\"Chrome\")||r(\"CriOS\"))&&!r(\"Edge\")};var x=r(\"Opera\"),y=r(\"Trident\")||r(\"MSIE\"),z=r(\"Edge\"),A=r(\"Gecko\")&&!(-1!=n.toLowerCase().indexOf(\"webkit\")&&!r(\"Edge\"))&&!(r(\"Trident\")||r(\"MSIE\"))&&!r(\"Edge\"),aa=-1!=n.toLowerCase().indexOf(\"webkit\")&&!r(\"Edge\");function B(){var a=d.document;return a?a.documentMode:void 0}var C;\na:{var D=\"\",E=function(){var a=n;if(A)return/rv\\:([^\\);]+)(\\)|;)/.exec(a);if(z)return/Edge\\/([\\d\\.]+)/.exec(a);if(y)return/\\b(?:MSIE|rv)[: ]([^\\);]+)(\\)|;)/.exec(a);if(aa)return/WebKit\\/(\\S+)/.exec(a);if(x)return/(?:Version)[ \\/]?(\\S+)/.exec(a)}();E&&(D=E?E[1]:\"\");if(y){var F=B();if(null!=F&&F>parseFloat(D)){C=String(F);break a}}C=D}var G;var H=d.document;G=H&&y?B()||(\"CSS1Compat\"==H.compatMode?parseInt(C,10):5):void 0;var ba=r(\"Firefox\"),ca=v()||r(\"iPod\"),da=r(\"iPad\"),I=r(\"Android\")&&!(w()||r(\"Firefox\")||r(\"Opera\")||r(\"Silk\")),ea=w(),J=r(\"Safari\")&&!(w()||r(\"Coast\")||r(\"Opera\")||r(\"Edge\")||r(\"Silk\")||r(\"Android\"))&&!(v()||r(\"iPad\")||r(\"iPod\"));function K(a){return(a=a.exec(n))?a[1]:\"\"}(function(){if(ba)return K(/Firefox\\/([0-9.]+)/);if(y||z||x)return C;if(ea)return v()||r(\"iPad\")||r(\"iPod\")?K(/CriOS\\/([0-9.]+)/):K(/Chrome\\/([0-9.]+)/);if(J&&!(v()||r(\"iPad\")||r(\"iPod\")))return K(/Version\\/([0-9.]+)/);if(ca||da){var a=/Version\\/(\\S+).*Mobile\\/(\\S+)/.exec(n);if(a)return a[1]+\".\"+a[2]}else if(I)return(a=K(/Android\\s+([0-9.]+)/))?a:K(/Version\\/([0-9.]+)/);return\"\"})();var L,M=function(){if(!A)return!1;var a=d.Components;if(!a)return!1;try{if(!a.classes)return!1}catch(g){return!1}var b=a.classes,a=a.interfaces,e=b[\"@mozilla.org/xpcom/version-comparator;1\"].getService(a.nsIVersionComparator),c=b[\"@mozilla.org/xre/app-info;1\"].getService(a.nsIXULAppInfo).version;L=function(a){e.compare(c,\"\"+a)};return!0}(),N=y&&!(8<=Number(G)),fa=y&&!(9<=Number(G));I&&M&&L(2.3);I&&M&&L(4);J&&M&&L(6);var ga={SCRIPT:1,STYLE:1,HEAD:1,IFRAME:1,OBJECT:1},O={IMG:\" \",BR:\"\\n\"};function P(a,b,e){if(!(a.nodeName in ga))if(3==a.nodeType)e?b.push(String(a.nodeValue).replace(/(\\r\\n|\\r|\\n)/g,\"\")):b.push(a.nodeValue);else if(a.nodeName in O)b.push(O[a.nodeName]);else for(a=a.firstChild;a;)P(a,b,e),a=a.nextSibling};function Q(a,b){b=b.toLowerCase();return\"style\"==b?ha(a.style.cssText):N&&\"value\"==b&&R(a,\"INPUT\")?a.value:fa&&!0===a[b]?String(a.getAttribute(b)):(a=a.getAttributeNode(b))&&a.specified?a.value:null}var ia=/[;]+(?=(?:(?:[^\"]*\"){2})*[^\"]*$)(?=(?:(?:[^']*'){2})*[^']*$)(?=(?:[^()]*\\([^()]*\\))*[^()]*$)/;\nfunction ha(a){var b=[];t(a.split(ia),function(a){var c=a.indexOf(\":\");0<c&&(a=[a.slice(0,c),a.slice(c+1)],2==a.length&&b.push(a[0].toLowerCase(),\":\",a[1],\";\"))});b=b.join(\"\");return b=\";\"==b.charAt(b.length-1)?b:b+\";\"}function S(a,b){N&&\"value\"==b&&R(a,\"OPTION\")&&null===Q(a,\"value\")?(b=[],P(a,b,!1),a=b.join(\"\")):a=a[b];return a}function R(a,b){b&&\"string\"!==typeof b&&(b=b.toString());return!!a&&1==a.nodeType&&(!b||a.tagName.toUpperCase()==b)}\nfunction T(a){return R(a,\"OPTION\")?!0:R(a,\"INPUT\")?(a=a.type.toLowerCase(),\"checkbox\"==a||\"radio\"==a):!1};var ja={\"class\":\"className\",readonly:\"readOnly\"},U=\"allowfullscreen allowpaymentrequest allowusermedia async autofocus autoplay checked compact complete controls declare default defaultchecked defaultselected defer disabled ended formnovalidate hidden indeterminate iscontenteditable ismap itemscope loop multiple muted nohref nomodule noresize noshade novalidate nowrap open paused playsinline pubdate readonly required reversed scoped seamless seeking selected truespeed typemustmatch willvalidate\".split(\" \");function V(a,b){var e=null,c=b.toLowerCase();if(\"style\"==c)return(e=a.style)&&!f(e)&&(e=e.cssText),e;if((\"selected\"==c||\"checked\"==c)&&T(a)){if(!T(a))throw new h(15,\"Element is not selectable\");b=\"selected\";e=a.type&&a.type.toLowerCase();if(\"checkbox\"==e||\"radio\"==e)b=\"checked\";return S(a,b)?\"true\":null}var g=R(a,\"A\");if(R(a,\"IMG\")&&\"src\"==c||g&&\"href\"==c)return(e=Q(a,c))&&(e=S(a,c)),e;if(\"spellcheck\"==c){e=Q(a,c);if(null!==e){if(\"false\"==e.toLowerCase())return\"false\";if(\"true\"==e.toLowerCase())return\"true\"}return S(a,\nc)+\"\"}g=ja[b]||b;a:if(f(U))c=f(c)&&1==c.length?U.indexOf(c,0):-1;else{for(var u=0;u<U.length;u++)if(u in U&&U[u]===c){c=u;break a}c=-1}if(0<=c)return(e=null!==Q(a,b)||S(a,g))?\"true\":null;try{var k=S(a,g)}catch(ka){}(c=null==k)||(c=typeof k,c=\"object\"==c&&null!=k||\"function\"==c);c?e=Q(a,b):e=k;return null!=e?e.toString():null}var W=[\"_\"],X=d;W[0]in X||!X.execScript||X.execScript(\"var \"+W[0]);\nfor(var Y;W.length&&(Y=W.shift());){var Z;if(Z=!W.length)Z=void 0!==V;Z?X[Y]=V:X[Y]&&X[Y]!==Object.prototype[Y]?X=X[Y]:X=X[Y]={}};; return this._.apply(null,arguments);}.apply({navigator:typeof window!='undefined'?window.navigator:null,document:typeof window!='undefined'?window.document:null}, arguments);}\n).apply(null, arguments);", "args": [{"ELEMENT": "8E3F9462875C8CB9541142E3C51F5F2B_element_56", "element-6066-11e4-a52e-4f735466cecf": "8E3F9462875C8CB9541142E3C51F5F2B_element_56"}, "innerHTML"]}
06/06/2023 03:36:55 PM http://127.0.0.1:51323 "POST /session/b843118c8d34851a2670506c5ffda95a/execute/sync HTTP/1.1" 200 1598
06/06/2023 03:36:55 PM Finished Request
06/06/2023 03:36:55 PM ^\s*(\d[\d\.a-z]+)\s{1,9}[A-Z][\s|a-z]?:ISSUE:
06/06/2023 03:36:55 PM ^\s*(\d[\d\.a-z]+)\s{1,9}[A-Z][\s|a-z]?:A validation needs to be created for Section 2A to ensure that the user enters data for each row
06/06/2023 03:36:55 PM ^\s*(\d[\d\.a-z]+)\s{1,9}[A-Z][\s|a-z]?:WHERE:
06/06/2023 03:36:55 PM ^\s*(\d[\d\.a-z]+)\s{1,9}[A-Z][\s|a-z]?:FY23 CIO Q3: Section 2A (CFO Act Agencies Only) 
06/06/2023 03:36:55 PM ^\s*(\d[\d\.a-z]+)\s{1,9}[A-Z][\s|a-z]?:DETAILS:
06/06/2023 03:36:55 PM ^\s*(\d[\d\.a-z]+)\s{1,9}[A-Z][\s|a-z]?:Similar to the validations for Section 1A, there needs to be validations for Section 2A to ensure that data is entered for each row. To ensure that the table is complete
06/06/2023 03:36:55 PM ^\s*(\d[\d\.a-z]+)\s{1,9}[A-Z][\s|a-z]?:These validations should appear on the Validate and Approve page.
06/06/2023 03:36:55 PM ^\s*(\d[\d\.a-z]+)\s{1,9}[A-Z][\s|a-z]?:Validation Message:
06/06/2023 03:36:55 PM ^\s*(\d[\d\.a-z]+)\s{1,9}[A-Z][\s|a-z]?:The row must be completely filled out, please enter 0 (zero) if there is no data for: (Bureau Name) 
06/06/2023 03:36:55 PM ^\s*(\d[\d\.a-z]+)\s{1,9}[A-Z][\s|a-z]?:A validation message should appear for each Bureau/Component
06/06/2023 03:36:55 PM ^\s*(\d[\d\.a-z]+)\s{1,9}[A-Z][\s|a-z]?:Once the row is completely filled out, then the validation for that Bureau should disappear
06/06/2023 03:36:55 PM ^\s*(\d[\d\.a-z]+)\s{1,9}[A-Z][\s|a-z]?:REQUIREMENT SOURCE:
06/06/2023 03:36:55 PM ^\s*(\d[\d\.a-z]+)\s{1,9}[A-Z][\s|a-z]?:Internal Testing 
06/06/2023 03:36:55 PM ^\s*(\d[\d\.a-z]+)\s{1,9}[A-Z][\s|a-z]?:DEVELOPER'S NOTES:
06/06/2023 03:36:55 PM ^\s*(\d[\d\.a-z]+)\s{1,9}[A-Z][\s|a-z]?:Developers, please enter what files were changed and what was fixed in this section
06/07/2023 08:51:58 AM init
06/07/2023 06:53:06 PM init
06/07/2023 06:53:26 PM Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
06/07/2023 06:53:26 PM NumExpr defaulting to 8 threads.
06/08/2023 08:27:35 AM init
06/08/2023 08:28:52 AM init
06/08/2023 10:11:30 AM init
06/08/2023 10:12:37 AM usecache: False cache_file: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\\cache\\8787.html
06/08/2023 10:12:37 AM 

06/08/2023 10:12:37 AM ====== WebDriver manager ======
06/08/2023 10:12:37 AM Current google-chrome version is 114.0.5735
06/08/2023 10:12:37 AM Get LATEST driver version for 114.0.5735
06/08/2023 10:12:37 AM Starting new HTTPS connection (1): chromedriver.storage.googleapis.com:443
06/08/2023 10:12:37 AM https://chromedriver.storage.googleapis.com:443 "GET /LATEST_RELEASE_114.0.5735 HTTP/1.1" 200 13
06/08/2023 10:12:37 AM Get LATEST driver version for 114.0.5735
06/08/2023 10:12:37 AM Starting new HTTPS connection (1): chromedriver.storage.googleapis.com:443
06/08/2023 10:12:37 AM https://chromedriver.storage.googleapis.com:443 "GET /LATEST_RELEASE_114.0.5735 HTTP/1.1" 200 13
06/08/2023 10:12:37 AM Trying to download new driver from https://chromedriver.storage.googleapis.com/114.0.5735.90/chromedriver_win32.zip
06/08/2023 10:12:37 AM Starting new HTTPS connection (1): chromedriver.storage.googleapis.com:443
06/08/2023 10:12:38 AM https://chromedriver.storage.googleapis.com:443 "GET /114.0.5735.90/chromedriver_win32.zip HTTP/1.1" 200 6603303
06/08/2023 10:12:38 AM Driver has been saved in cache [C:\Users\timko\.wdm\drivers\chromedriver\win32\114.0.5735.90]
06/08/2023 10:12:40 AM POST http://127.0.0.1:64504/session {"capabilities": {"firstMatch": [{}], "alwaysMatch": {"browserName": "chrome", "platformName": "any", "goog:chromeOptions": {"extensions": [], "args": ["--start-minimized", "--window-size=1020,1080"]}}}, "desiredCapabilities": {"browserName": "chrome", "version": "", "platform": "ANY", "goog:chromeOptions": {"extensions": [], "args": ["--start-minimized", "--window-size=1020,1080"]}}}
06/08/2023 10:12:40 AM Starting new HTTP connection (1): 127.0.0.1:64504
06/08/2023 10:12:42 AM http://127.0.0.1:64504 "POST /session HTTP/1.1" 200 861
06/08/2023 10:12:42 AM Finished Request
06/08/2023 10:12:42 AM POST http://127.0.0.1:64504/session/eaa27b53a1de2503ade9fbf810c55518/url {"url": "https://dayman.cyber-balance.com/jira/login.jsp"}
06/08/2023 10:12:44 AM http://127.0.0.1:64504 "POST /session/eaa27b53a1de2503ade9fbf810c55518/url HTTP/1.1" 200 14
06/08/2023 10:12:44 AM Finished Request
06/08/2023 10:12:44 AM POST http://127.0.0.1:64504/session/eaa27b53a1de2503ade9fbf810c55518/element {"using": "xpath", "value": "//input[contains(@id, \"user\")]"}
06/08/2023 10:12:44 AM http://127.0.0.1:64504 "POST /session/eaa27b53a1de2503ade9fbf810c55518/element HTTP/1.1" 200 94
06/08/2023 10:12:44 AM Finished Request
06/08/2023 10:12:44 AM POST http://127.0.0.1:64504/session/eaa27b53a1de2503ade9fbf810c55518/element/127A267C103BC19D007960DF819FA0FD_element_6/value {"text": "tim.kopp", "value": ["t", "i", "m", ".", "k", "o", "p", "p"], "id": "127A267C103BC19D007960DF819FA0FD_element_6"}
06/08/2023 10:12:44 AM http://127.0.0.1:64504 "POST /session/eaa27b53a1de2503ade9fbf810c55518/element/127A267C103BC19D007960DF819FA0FD_element_6/value HTTP/1.1" 200 14
06/08/2023 10:12:44 AM Finished Request
06/08/2023 10:12:44 AM POST http://127.0.0.1:64504/session/eaa27b53a1de2503ade9fbf810c55518/element {"using": "xpath", "value": "//input[contains(@id, \"pass\")]"}
06/08/2023 10:12:44 AM http://127.0.0.1:64504 "POST /session/eaa27b53a1de2503ade9fbf810c55518/element HTTP/1.1" 200 94
06/08/2023 10:12:44 AM Finished Request
06/08/2023 10:13:11 AM init
06/08/2023 10:13:12 AM usecache: False cache_file: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\\cache\\8787.html
06/08/2023 10:13:12 AM 

06/08/2023 10:13:12 AM ====== WebDriver manager ======
06/08/2023 10:13:12 AM Current google-chrome version is 114.0.5735
06/08/2023 10:13:12 AM Get LATEST driver version for 114.0.5735
06/08/2023 10:13:12 AM Starting new HTTPS connection (1): chromedriver.storage.googleapis.com:443
06/08/2023 10:13:12 AM https://chromedriver.storage.googleapis.com:443 "GET /LATEST_RELEASE_114.0.5735 HTTP/1.1" 200 13
06/08/2023 10:13:12 AM Driver [C:\Users\timko\.wdm\drivers\chromedriver\win32\114.0.5735.90\chromedriver.exe] found in cache
06/08/2023 10:13:13 AM POST http://127.0.0.1:64586/session {"capabilities": {"firstMatch": [{}], "alwaysMatch": {"browserName": "chrome", "platformName": "any", "goog:chromeOptions": {"extensions": [], "args": ["--start-minimized", "--window-size=1020,1080"]}}}, "desiredCapabilities": {"browserName": "chrome", "version": "", "platform": "ANY", "goog:chromeOptions": {"extensions": [], "args": ["--start-minimized", "--window-size=1020,1080"]}}}
06/08/2023 10:13:13 AM Starting new HTTP connection (1): 127.0.0.1:64586
06/08/2023 10:13:14 AM http://127.0.0.1:64586 "POST /session HTTP/1.1" 200 859
06/08/2023 10:13:14 AM Finished Request
06/08/2023 10:13:14 AM POST http://127.0.0.1:64586/session/66dd6c728550106e0b4f8cdb6603b0d3/url {"url": "https://dayman.cyber-balance.com/jira/login.jsp"}
06/08/2023 10:13:15 AM http://127.0.0.1:64586 "POST /session/66dd6c728550106e0b4f8cdb6603b0d3/url HTTP/1.1" 200 14
06/08/2023 10:13:15 AM Finished Request
06/08/2023 10:13:15 AM POST http://127.0.0.1:64586/session/66dd6c728550106e0b4f8cdb6603b0d3/element {"using": "xpath", "value": "//input[contains(@id, \"user\")]"}
06/08/2023 10:13:15 AM http://127.0.0.1:64586 "POST /session/66dd6c728550106e0b4f8cdb6603b0d3/element HTTP/1.1" 200 94
06/08/2023 10:13:15 AM Finished Request
06/08/2023 10:13:15 AM POST http://127.0.0.1:64586/session/66dd6c728550106e0b4f8cdb6603b0d3/element/39EB25E2B8C574C6C715D1E995304A9F_element_6/value {"text": "tim.kopp", "value": ["t", "i", "m", ".", "k", "o", "p", "p"], "id": "39EB25E2B8C574C6C715D1E995304A9F_element_6"}
06/08/2023 10:13:15 AM http://127.0.0.1:64586 "POST /session/66dd6c728550106e0b4f8cdb6603b0d3/element/39EB25E2B8C574C6C715D1E995304A9F_element_6/value HTTP/1.1" 200 14
06/08/2023 10:13:15 AM Finished Request
06/08/2023 10:13:15 AM POST http://127.0.0.1:64586/session/66dd6c728550106e0b4f8cdb6603b0d3/element {"using": "xpath", "value": "//input[contains(@id, \"pass\")]"}
06/08/2023 10:13:15 AM http://127.0.0.1:64586 "POST /session/66dd6c728550106e0b4f8cdb6603b0d3/element HTTP/1.1" 200 94
06/08/2023 10:13:15 AM Finished Request
06/08/2023 10:13:15 AM POST http://127.0.0.1:64586/session/66dd6c728550106e0b4f8cdb6603b0d3/element/39EB25E2B8C574C6C715D1E995304A9F_element_5/value {"text": "MUhhZ7ZMuBU", "value": ["M", "U", "h", "h", "Z", "7", "Z", "M", "u", "B", "U"], "id": "39EB25E2B8C574C6C715D1E995304A9F_element_5"}
06/08/2023 10:13:15 AM http://127.0.0.1:64586 "POST /session/66dd6c728550106e0b4f8cdb6603b0d3/element/39EB25E2B8C574C6C715D1E995304A9F_element_5/value HTTP/1.1" 200 14
06/08/2023 10:13:15 AM Finished Request
06/08/2023 10:13:15 AM POST http://127.0.0.1:64586/session/66dd6c728550106e0b4f8cdb6603b0d3/element {"using": "xpath", "value": "//input[contains(@id, \"submit\")]"}
06/08/2023 10:13:15 AM http://127.0.0.1:64586 "POST /session/66dd6c728550106e0b4f8cdb6603b0d3/element HTTP/1.1" 200 94
06/08/2023 10:13:15 AM Finished Request
06/08/2023 10:13:15 AM POST http://127.0.0.1:64586/session/66dd6c728550106e0b4f8cdb6603b0d3/element/39EB25E2B8C574C6C715D1E995304A9F_element_9/click {"id": "39EB25E2B8C574C6C715D1E995304A9F_element_9"}
06/08/2023 10:13:35 AM http://127.0.0.1:64586 "POST /session/66dd6c728550106e0b4f8cdb6603b0d3/element/39EB25E2B8C574C6C715D1E995304A9F_element_9/click HTTP/1.1" 200 14
06/08/2023 10:13:35 AM Finished Request
06/08/2023 10:13:35 AM GET http://127.0.0.1:64586/session/66dd6c728550106e0b4f8cdb6603b0d3/source {}
06/08/2023 10:13:35 AM http://127.0.0.1:64586 "GET /session/66dd6c728550106e0b4f8cdb6603b0d3/source HTTP/1.1" 200 162707
06/08/2023 10:13:35 AM Finished Request
06/08/2023 10:13:36 AM Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
06/08/2023 10:13:36 AM NumExpr defaulting to 8 threads.
06/08/2023 10:13:36 AM POST http://127.0.0.1:64586/session/66dd6c728550106e0b4f8cdb6603b0d3/url {"url": "https://dayman.cyber-balance.com/jira/si/jira.issueviews:issue-html/CS-8787/CS-8787.html"}
06/08/2023 10:13:36 AM http://127.0.0.1:64586 "POST /session/66dd6c728550106e0b4f8cdb6603b0d3/url HTTP/1.1" 200 14
06/08/2023 10:13:36 AM Finished Request
06/08/2023 10:13:36 AM POST http://127.0.0.1:64586/session/66dd6c728550106e0b4f8cdb6603b0d3/element {"using": "css selector", "value": "td#descriptionArea"}
06/08/2023 10:13:36 AM http://127.0.0.1:64586 "POST /session/66dd6c728550106e0b4f8cdb6603b0d3/element HTTP/1.1" 200 95
06/08/2023 10:13:36 AM Finished Request
06/08/2023 10:13:36 AM POST http://127.0.0.1:64586/session/66dd6c728550106e0b4f8cdb6603b0d3/execute/sync {"script": "return (function(){return function(){var d=this;function f(a){return\"string\"==typeof a};function h(a,b){this.code=a;this.a=l[a]||m;this.message=b||\"\";a=this.a.replace(/((?:^|\\s+)[a-z])/g,function(a){return a.toUpperCase().replace(/^[\\s\\xa0]+/g,\"\")});b=a.length-5;if(0>b||a.indexOf(\"Error\",b)!=b)a+=\"Error\";this.name=a;a=Error(this.message);a.name=this.name;this.stack=a.stack||\"\"}\n(function(){var a=Error;function b(){}b.prototype=a.prototype;h.b=a.prototype;h.prototype=new b;h.prototype.constructor=h;h.a=function(b,c,g){for(var e=Array(arguments.length-2),k=2;k<arguments.length;k++)e[k-2]=arguments[k];return a.prototype[c].apply(b,e)}})();var m=\"unknown error\",l={15:\"element not selectable\",11:\"element not visible\"};l[31]=m;l[30]=m;l[24]=\"invalid cookie domain\";l[29]=\"invalid element coordinates\";l[12]=\"invalid element state\";l[32]=\"invalid selector\";l[51]=\"invalid selector\";\nl[52]=\"invalid selector\";l[17]=\"javascript error\";l[405]=\"unsupported operation\";l[34]=\"move target out of bounds\";l[27]=\"no such alert\";l[7]=\"no such element\";l[8]=\"no such frame\";l[23]=\"no such window\";l[28]=\"script timeout\";l[33]=\"session not created\";l[10]=\"stale element reference\";l[21]=\"timeout\";l[25]=\"unable to set cookie\";l[26]=\"unexpected alert open\";l[13]=m;l[9]=\"unknown command\";h.prototype.toString=function(){return this.name+\": \"+this.message};var n;a:{var p=d.navigator;if(p){var q=p.userAgent;if(q){n=q;break a}}n=\"\"}function r(a){return-1!=n.indexOf(a)};function t(a,b){for(var e=a.length,c=f(a)?a.split(\"\"):a,g=0;g<e;g++)g in c&&b.call(void 0,c[g],g,a)};function v(){return r(\"iPhone\")&&!r(\"iPod\")&&!r(\"iPad\")};function w(){return(r(\"Chrome\")||r(\"CriOS\"))&&!r(\"Edge\")};var x=r(\"Opera\"),y=r(\"Trident\")||r(\"MSIE\"),z=r(\"Edge\"),A=r(\"Gecko\")&&!(-1!=n.toLowerCase().indexOf(\"webkit\")&&!r(\"Edge\"))&&!(r(\"Trident\")||r(\"MSIE\"))&&!r(\"Edge\"),aa=-1!=n.toLowerCase().indexOf(\"webkit\")&&!r(\"Edge\");function B(){var a=d.document;return a?a.documentMode:void 0}var C;\na:{var D=\"\",E=function(){var a=n;if(A)return/rv\\:([^\\);]+)(\\)|;)/.exec(a);if(z)return/Edge\\/([\\d\\.]+)/.exec(a);if(y)return/\\b(?:MSIE|rv)[: ]([^\\);]+)(\\)|;)/.exec(a);if(aa)return/WebKit\\/(\\S+)/.exec(a);if(x)return/(?:Version)[ \\/]?(\\S+)/.exec(a)}();E&&(D=E?E[1]:\"\");if(y){var F=B();if(null!=F&&F>parseFloat(D)){C=String(F);break a}}C=D}var G;var H=d.document;G=H&&y?B()||(\"CSS1Compat\"==H.compatMode?parseInt(C,10):5):void 0;var ba=r(\"Firefox\"),ca=v()||r(\"iPod\"),da=r(\"iPad\"),I=r(\"Android\")&&!(w()||r(\"Firefox\")||r(\"Opera\")||r(\"Silk\")),ea=w(),J=r(\"Safari\")&&!(w()||r(\"Coast\")||r(\"Opera\")||r(\"Edge\")||r(\"Silk\")||r(\"Android\"))&&!(v()||r(\"iPad\")||r(\"iPod\"));function K(a){return(a=a.exec(n))?a[1]:\"\"}(function(){if(ba)return K(/Firefox\\/([0-9.]+)/);if(y||z||x)return C;if(ea)return v()||r(\"iPad\")||r(\"iPod\")?K(/CriOS\\/([0-9.]+)/):K(/Chrome\\/([0-9.]+)/);if(J&&!(v()||r(\"iPad\")||r(\"iPod\")))return K(/Version\\/([0-9.]+)/);if(ca||da){var a=/Version\\/(\\S+).*Mobile\\/(\\S+)/.exec(n);if(a)return a[1]+\".\"+a[2]}else if(I)return(a=K(/Android\\s+([0-9.]+)/))?a:K(/Version\\/([0-9.]+)/);return\"\"})();var L,M=function(){if(!A)return!1;var a=d.Components;if(!a)return!1;try{if(!a.classes)return!1}catch(g){return!1}var b=a.classes,a=a.interfaces,e=b[\"@mozilla.org/xpcom/version-comparator;1\"].getService(a.nsIVersionComparator),c=b[\"@mozilla.org/xre/app-info;1\"].getService(a.nsIXULAppInfo).version;L=function(a){e.compare(c,\"\"+a)};return!0}(),N=y&&!(8<=Number(G)),fa=y&&!(9<=Number(G));I&&M&&L(2.3);I&&M&&L(4);J&&M&&L(6);var ga={SCRIPT:1,STYLE:1,HEAD:1,IFRAME:1,OBJECT:1},O={IMG:\" \",BR:\"\\n\"};function P(a,b,e){if(!(a.nodeName in ga))if(3==a.nodeType)e?b.push(String(a.nodeValue).replace(/(\\r\\n|\\r|\\n)/g,\"\")):b.push(a.nodeValue);else if(a.nodeName in O)b.push(O[a.nodeName]);else for(a=a.firstChild;a;)P(a,b,e),a=a.nextSibling};function Q(a,b){b=b.toLowerCase();return\"style\"==b?ha(a.style.cssText):N&&\"value\"==b&&R(a,\"INPUT\")?a.value:fa&&!0===a[b]?String(a.getAttribute(b)):(a=a.getAttributeNode(b))&&a.specified?a.value:null}var ia=/[;]+(?=(?:(?:[^\"]*\"){2})*[^\"]*$)(?=(?:(?:[^']*'){2})*[^']*$)(?=(?:[^()]*\\([^()]*\\))*[^()]*$)/;\nfunction ha(a){var b=[];t(a.split(ia),function(a){var c=a.indexOf(\":\");0<c&&(a=[a.slice(0,c),a.slice(c+1)],2==a.length&&b.push(a[0].toLowerCase(),\":\",a[1],\";\"))});b=b.join(\"\");return b=\";\"==b.charAt(b.length-1)?b:b+\";\"}function S(a,b){N&&\"value\"==b&&R(a,\"OPTION\")&&null===Q(a,\"value\")?(b=[],P(a,b,!1),a=b.join(\"\")):a=a[b];return a}function R(a,b){b&&\"string\"!==typeof b&&(b=b.toString());return!!a&&1==a.nodeType&&(!b||a.tagName.toUpperCase()==b)}\nfunction T(a){return R(a,\"OPTION\")?!0:R(a,\"INPUT\")?(a=a.type.toLowerCase(),\"checkbox\"==a||\"radio\"==a):!1};var ja={\"class\":\"className\",readonly:\"readOnly\"},U=\"allowfullscreen allowpaymentrequest allowusermedia async autofocus autoplay checked compact complete controls declare default defaultchecked defaultselected defer disabled ended formnovalidate hidden indeterminate iscontenteditable ismap itemscope loop multiple muted nohref nomodule noresize noshade novalidate nowrap open paused playsinline pubdate readonly required reversed scoped seamless seeking selected truespeed typemustmatch willvalidate\".split(\" \");function V(a,b){var e=null,c=b.toLowerCase();if(\"style\"==c)return(e=a.style)&&!f(e)&&(e=e.cssText),e;if((\"selected\"==c||\"checked\"==c)&&T(a)){if(!T(a))throw new h(15,\"Element is not selectable\");b=\"selected\";e=a.type&&a.type.toLowerCase();if(\"checkbox\"==e||\"radio\"==e)b=\"checked\";return S(a,b)?\"true\":null}var g=R(a,\"A\");if(R(a,\"IMG\")&&\"src\"==c||g&&\"href\"==c)return(e=Q(a,c))&&(e=S(a,c)),e;if(\"spellcheck\"==c){e=Q(a,c);if(null!==e){if(\"false\"==e.toLowerCase())return\"false\";if(\"true\"==e.toLowerCase())return\"true\"}return S(a,\nc)+\"\"}g=ja[b]||b;a:if(f(U))c=f(c)&&1==c.length?U.indexOf(c,0):-1;else{for(var u=0;u<U.length;u++)if(u in U&&U[u]===c){c=u;break a}c=-1}if(0<=c)return(e=null!==Q(a,b)||S(a,g))?\"true\":null;try{var k=S(a,g)}catch(ka){}(c=null==k)||(c=typeof k,c=\"object\"==c&&null!=k||\"function\"==c);c?e=Q(a,b):e=k;return null!=e?e.toString():null}var W=[\"_\"],X=d;W[0]in X||!X.execScript||X.execScript(\"var \"+W[0]);\nfor(var Y;W.length&&(Y=W.shift());){var Z;if(Z=!W.length)Z=void 0!==V;Z?X[Y]=V:X[Y]&&X[Y]!==Object.prototype[Y]?X=X[Y]:X=X[Y]={}};; return this._.apply(null,arguments);}.apply({navigator:typeof window!='undefined'?window.navigator:null,document:typeof window!='undefined'?window.document:null}, arguments);}\n).apply(null, arguments);", "args": [{"ELEMENT": "868332CEE2786B1A82F26C3377932071_element_56", "element-6066-11e4-a52e-4f735466cecf": "868332CEE2786B1A82F26C3377932071_element_56"}, "innerHTML"]}
06/08/2023 10:13:36 AM http://127.0.0.1:64586 "POST /session/66dd6c728550106e0b4f8cdb6603b0d3/execute/sync HTTP/1.1" 200 7606
06/08/2023 10:13:36 AM Finished Request
06/09/2023 09:08:15 AM init
06/09/2023 09:08:15 AM Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
06/09/2023 09:08:15 AM NumExpr defaulting to 8 threads.
06/09/2023 09:08:16 AM code_template_path: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql
06/09/2023 09:08:16 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 09:08:16 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 09:08:16 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 09:08:16 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 09:08:16 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 09:08:16 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 09:08:16 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 09:08:16 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 09:08:16 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 09:08:16 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 09:08:16 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 09:08:16 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 09:08:16 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 09:08:16 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 09:08:16 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 09:08:16 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 09:08:16 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 09:08:16 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 09:08:16 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 09:08:16 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 09:08:16 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 09:08:16 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 09:08:16 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 09:08:16 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 09:08:16 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 09:08:16 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 09:08:16 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 09:08:16 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 09:08:16 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 09:08:16 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 09:08:16 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 09:08:16 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 09:08:16 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 09:08:16 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 09:08:16 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 09:08:16 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 09:08:16 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 09:08:16 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 09:08:16 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 09:08:16 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 09:08:16 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 09:08:16 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 09:08:16 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 09:08:16 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 09:08:16 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 09:08:16 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 09:08:16 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 09:08:16 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 09:08:16 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 09:08:16 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 09:08:16 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 09:08:16 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 09:08:16 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 09:08:16 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 09:08:16 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 09:08:16 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 09:08:16 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 09:08:16 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 09:08:16 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 09:08:16 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 09:08:16 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 09:08:16 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 09:08:16 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 09:08:16 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 09:08:16 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 09:08:16 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 09:08:16 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 09:08:16 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 09:08:16 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 09:08:16 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 09:08:16 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 09:23:59 AM init
06/09/2023 09:24:31 AM 
            SELECT DISTINCT
            QID [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4450,4451,4452,4453,4454,4455,4456,4457,4458,4459) ORDER BY SortPos; 
06/09/2023 09:26:01 AM init
06/09/2023 09:26:02 AM 
            SELECT DISTINCT
            QID [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4450,4451,4452,4453,4454,4455,4456,4457,4458,4459) ORDER BY SortPos; 
06/09/2023 09:31:46 AM 
            SELECT DISTINCT
            QID [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4450,4451,4452,4453,4454,4455,4456,4457,4458,4459) ORDER BY SortPos; 
06/09/2023 09:31:52 AM 
            SELECT DISTINCT
            QID [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4450,4451,4452,4453,4454,4455,4456,4457,4458,4459) ORDER BY SortPos; 
06/09/2023 09:33:46 AM 
            SELECT DISTINCT
            QID [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4450,4451,4452,4453,4454,4455,4456,4457,4458,4459) ORDER BY SortPos; 
06/09/2023 09:34:12 AM 
            SELECT DISTINCT
            QID [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4450,4451,4452,4453,4454,4455,4456,4457,4458,4459) ORDER BY SortPos; 
06/09/2023 09:36:34 AM 
            SELECT DISTINCT
            QID [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4450,4451,4452,4453,4454,4455,4456,4457,4458,4459) ORDER BY SortPos; 
06/09/2023 09:36:48 AM 
            SELECT DISTINCT
            QID [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4450,4451,4452,4453,4454,4455,4456,4457,4458,4459) ORDER BY SortPos; 
06/09/2023 09:37:01 AM 
            SELECT DISTINCT
            QID [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4450,4451,4452,4453,4454,4455,4456,4457,4458,4459) ORDER BY SortPos; 
06/09/2023 09:37:20 AM 
            SELECT DISTINCT
            QID [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4450,4451,4452,4453,4454,4455,4456,4457,4458,4459) ORDER BY SortPos; 
06/09/2023 09:38:43 AM 
            SELECT DISTINCT
            QID [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4450,4451,4452,4453,4454,4455,4456,4457,4458,4459) ORDER BY SortPos; 
06/09/2023 09:40:02 AM 
            SELECT DISTINCT
            QID [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4450,4451,4452,4453,4454,4455,4456,4457,4458,4459) ORDER BY SortPos; 
06/09/2023 09:45:14 AM 
            SELECT DISTINCT
            QID [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4450,4451,4452,4453,4454,4455,4456,4457,4458,4459) ORDER BY SortPos; 
06/09/2023 09:45:14 AM Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
06/09/2023 09:45:14 AM NumExpr defaulting to 8 threads.
06/09/2023 09:45:29 AM 
            SELECT DISTINCT
            QID [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4450,4451,4452,4453,4454,4455,4456,4457,4458,4459) ORDER BY SortPos; 
06/09/2023 09:46:27 AM 
            SELECT DISTINCT
            QID [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4450,4451,4452,4453,4454,4455,4456,4457,4458,4459) ORDER BY SortPos; 
06/09/2023 09:46:35 AM init
06/09/2023 09:46:36 AM 
            SELECT DISTINCT
            QID [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4450,4451,4452,4453,4454,4455,4456,4457,4458,4459) ORDER BY SortPos; 
06/09/2023 09:47:09 AM 
            SELECT DISTINCT
            QID [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4450,4451,4452,4453,4454,4455,4456,4457,4458,4459) ORDER BY SortPos; 
06/09/2023 09:47:13 AM 
            SELECT DISTINCT
            QID [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4450,4451,4452,4453,4454,4455,4456,4457,4458,4459) ORDER BY SortPos; 
06/09/2023 09:47:15 AM 
            SELECT DISTINCT
            QID [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4450,4451,4452,4453,4454,4455,4456,4457,4458,4459) ORDER BY SortPos; 
06/09/2023 09:47:22 AM 
            SELECT DISTINCT
            QID [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4450,4451,4452,4453,4454,4455,4456,4457,4458,4459) ORDER BY SortPos; 
06/09/2023 09:47:34 AM 
            SELECT DISTINCT
            QID [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4450,4451,4452,4453,4454,4455,4456,4457,4458,4459) ORDER BY SortPos; 
06/09/2023 09:47:41 AM 
            SELECT DISTINCT
            QID [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4450,4451,4452,4453,4454,4455,4456,4457,4458,4459) ORDER BY SortPos; 
06/09/2023 09:48:03 AM 
            SELECT DISTINCT
            QID [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4450,4451,4452,4453,4454,4455,4456,4457,4458,4459) ORDER BY SortPos; 
06/09/2023 09:48:27 AM 
            SELECT DISTINCT
            QID [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4450,4451,4452,4453,4454,4455,4456,4457,4458,4459) ORDER BY SortPos; 
06/09/2023 09:48:42 AM 
            SELECT DISTINCT
            QID [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4450,4451,4452,4453,4454,4455,4456,4457,4458,4459) ORDER BY SortPos; 
06/09/2023 09:48:57 AM 
            SELECT DISTINCT
            QID [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4450,4451,4452,4453,4454,4455,4456,4457,4458,4459) ORDER BY SortPos; 
06/09/2023 09:49:09 AM 
            SELECT DISTINCT
            QID [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4450,4451,4452,4453,4454,4455,4456,4457,4458,4459) ORDER BY SortPos; 
06/09/2023 09:49:23 AM 
            SELECT DISTINCT
            QID [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4450,4451,4452,4453,4454,4455,4456,4457,4458,4459) ORDER BY SortPos; 
06/09/2023 09:49:30 AM 
            SELECT DISTINCT
            QID [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4450,4451,4452,4453,4454,4455,4456,4457,4458,4459) ORDER BY SortPos; 
06/09/2023 09:50:16 AM 
            SELECT DISTINCT
            QID [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4450,4451,4452,4453,4454,4455,4456,4457,4458,4459) ORDER BY SortPos; 
06/09/2023 09:50:27 AM 
            SELECT DISTINCT
            QID [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4450,4451,4452,4453,4454,4455,4456,4457,4458,4459) ORDER BY SortPos; 
06/09/2023 10:19:47 AM code_template_path: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql
06/09/2023 10:19:47 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:19:47 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:19:47 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:19:47 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:19:47 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:19:47 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:19:47 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:19:47 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:19:47 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:19:47 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:19:47 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:19:47 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:19:47 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:19:47 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:19:47 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:19:47 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:19:47 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:19:47 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:19:47 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:19:47 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:19:47 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:19:47 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:19:47 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:19:47 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:19:47 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:19:47 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:19:47 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:19:47 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:19:47 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:19:47 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:19:47 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:19:47 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:19:47 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:19:47 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:19:47 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:19:47 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:19:47 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:19:47 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:19:47 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:19:47 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:19:47 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:19:47 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:19:47 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:19:47 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:19:47 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:19:47 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:19:47 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:19:47 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:19:47 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:19:47 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:19:47 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:19:47 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:19:47 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:19:47 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:19:47 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:19:47 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:19:47 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:19:47 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:19:47 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:19:47 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:19:47 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:19:47 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:19:47 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:19:47 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:19:47 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:19:47 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:19:47 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:19:47 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:19:47 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:19:47 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:19:47 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:22:41 AM code_template_path: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql
06/09/2023 10:22:41 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:22:41 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:22:41 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:22:41 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:22:41 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:22:41 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:22:41 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:22:41 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:22:41 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:22:41 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:22:41 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:22:41 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:22:41 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:22:41 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:22:41 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:22:41 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:22:41 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:22:41 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:22:41 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:22:41 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:22:41 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:22:41 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:22:41 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:22:41 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:22:41 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:22:41 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:22:41 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:22:41 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:22:41 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:22:41 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:22:41 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:22:41 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:22:41 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:22:41 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:22:41 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:22:41 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:22:41 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:22:41 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:22:41 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:22:41 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:22:41 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:22:41 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:22:41 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:22:41 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:22:41 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:22:41 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:22:41 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:22:41 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:22:41 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:22:41 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:22:41 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:22:41 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:22:41 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:22:41 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:22:41 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:22:41 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:22:41 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:22:41 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:22:41 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:22:41 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:22:41 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:22:41 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:22:41 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:22:41 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:22:41 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:22:41 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:22:41 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:22:41 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:22:41 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:22:41 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:22:41 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:13 AM code_template_path: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql
06/09/2023 10:25:13 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:13 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:13 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:13 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:13 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:13 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:13 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:13 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:13 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:13 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:13 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:13 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:13 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:13 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:13 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:13 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:13 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:13 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:13 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:13 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:13 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:13 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:13 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:13 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:13 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:13 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:13 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:13 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:13 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:13 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:13 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:13 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:13 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:13 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:13 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:13 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:13 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:13 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:13 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:13 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:13 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:13 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:13 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:13 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:13 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:13 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:13 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:13 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:13 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:13 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:13 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:13 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:13 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:13 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:13 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:13 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:13 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:13 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:13 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:13 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:13 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:13 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:13 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:13 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:13 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:13 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:13 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:13 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:13 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:13 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:13 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:33 AM code_template_path: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql
06/09/2023 10:25:33 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:33 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:33 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:33 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:33 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:33 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:33 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:33 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:33 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:33 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:33 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:33 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:33 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:33 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:33 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:33 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:33 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:33 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:33 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:33 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:33 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:33 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:33 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:33 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:33 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:33 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:33 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:33 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:33 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:33 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:33 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:33 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:33 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:33 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:33 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:33 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:33 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:33 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:33 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:33 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:33 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:33 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:33 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:33 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:33 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:33 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:33 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:33 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:33 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:33 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:33 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:33 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:33 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:33 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:33 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:33 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:33 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:33 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:33 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:33 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:33 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:33 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:33 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:33 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:33 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:33 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:33 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:33 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:33 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:33 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:33 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:42 AM code_template_path: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql
06/09/2023 10:25:42 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:42 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:42 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:42 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:42 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:42 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:42 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:42 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:42 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:42 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:42 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:42 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:42 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:42 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:42 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:42 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:42 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:42 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:42 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:42 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:42 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:42 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:42 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:42 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:42 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:42 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:42 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:42 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:42 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:42 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:42 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:42 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:42 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:42 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:42 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:42 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:42 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:42 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:42 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:42 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:42 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:42 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:42 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:42 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:42 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:42 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:42 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:42 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:42 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:42 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:42 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:42 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:42 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:42 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:42 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:42 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:42 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:42 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:42 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:42 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:42 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:42 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:42 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:42 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:42 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:42 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:42 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:42 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:42 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:42 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:25:42 AM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/09/2023 10:30:29 AM 
            SELECT DISTINCT
            QID [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4450,4451,4452,4453,4454,4455,4456,4457,4458,4459) ORDER BY SortPos; 
06/12/2023 09:21:46 AM init
06/12/2023 09:25:18 AM STREAM b'IHDR' 16 13
06/12/2023 09:25:18 AM STREAM b'sRGB' 41 1
06/12/2023 09:25:18 AM STREAM b'gAMA' 54 4
06/12/2023 09:25:18 AM STREAM b'pHYs' 70 9
06/12/2023 09:25:18 AM STREAM b'IDAT' 91 18915
06/12/2023 09:25:18 AM STREAM b'IHDR' 16 13
06/12/2023 09:25:18 AM STREAM b'sRGB' 41 1
06/12/2023 09:25:18 AM STREAM b'gAMA' 54 4
06/12/2023 09:25:18 AM STREAM b'pHYs' 70 9
06/12/2023 09:25:18 AM STREAM b'IDAT' 91 18915
06/12/2023 09:25:56 AM STREAM b'IHDR' 16 13
06/12/2023 09:25:56 AM STREAM b'sRGB' 41 1
06/12/2023 09:25:56 AM STREAM b'gAMA' 54 4
06/12/2023 09:25:56 AM STREAM b'pHYs' 70 9
06/12/2023 09:25:56 AM STREAM b'IDAT' 91 18915
06/12/2023 09:26:02 AM STREAM b'IHDR' 16 13
06/12/2023 09:26:02 AM STREAM b'sRGB' 41 1
06/12/2023 09:26:02 AM STREAM b'gAMA' 54 4
06/12/2023 09:26:02 AM STREAM b'pHYs' 70 9
06/12/2023 09:26:02 AM STREAM b'IDAT' 91 18915
06/12/2023 09:27:08 AM STREAM b'IHDR' 16 13
06/12/2023 09:27:08 AM STREAM b'sRGB' 41 1
06/12/2023 09:27:08 AM STREAM b'gAMA' 54 4
06/12/2023 09:27:08 AM STREAM b'pHYs' 70 9
06/12/2023 09:27:08 AM STREAM b'IDAT' 91 18915
06/12/2023 09:27:08 AM STREAM b'IHDR' 16 13
06/12/2023 09:27:08 AM STREAM b'sRGB' 41 1
06/12/2023 09:27:08 AM STREAM b'gAMA' 54 4
06/12/2023 09:27:08 AM STREAM b'pHYs' 70 9
06/12/2023 09:27:08 AM STREAM b'IDAT' 91 18915
06/12/2023 09:29:37 AM STREAM b'IHDR' 16 13
06/12/2023 09:29:37 AM STREAM b'sRGB' 41 1
06/12/2023 09:29:37 AM STREAM b'gAMA' 54 4
06/12/2023 09:29:37 AM STREAM b'pHYs' 70 9
06/12/2023 09:29:37 AM STREAM b'IDAT' 91 18915
06/12/2023 09:29:45 AM STREAM b'IHDR' 16 13
06/12/2023 09:29:45 AM STREAM b'sRGB' 41 1
06/12/2023 09:29:45 AM STREAM b'gAMA' 54 4
06/12/2023 09:29:45 AM STREAM b'pHYs' 70 9
06/12/2023 09:29:45 AM STREAM b'IDAT' 91 18915
06/12/2023 09:29:45 AM STREAM b'IHDR' 16 13
06/12/2023 09:29:45 AM STREAM b'sRGB' 41 1
06/12/2023 09:29:45 AM STREAM b'gAMA' 54 4
06/12/2023 09:29:45 AM STREAM b'pHYs' 70 9
06/12/2023 09:29:45 AM STREAM b'IDAT' 91 18915
06/12/2023 09:34:38 AM STREAM b'IHDR' 16 13
06/12/2023 09:34:38 AM STREAM b'sRGB' 41 1
06/12/2023 09:34:38 AM STREAM b'gAMA' 54 4
06/12/2023 09:34:38 AM STREAM b'pHYs' 70 9
06/12/2023 09:34:38 AM STREAM b'IDAT' 91 18915
06/12/2023 09:34:55 AM STREAM b'IHDR' 16 13
06/12/2023 09:34:55 AM STREAM b'sRGB' 41 1
06/12/2023 09:34:55 AM STREAM b'gAMA' 54 4
06/12/2023 09:34:55 AM STREAM b'pHYs' 70 9
06/12/2023 09:34:55 AM STREAM b'IDAT' 91 18915
06/12/2023 09:34:55 AM STREAM b'IHDR' 16 13
06/12/2023 09:34:55 AM STREAM b'sRGB' 41 1
06/12/2023 09:34:55 AM STREAM b'gAMA' 54 4
06/12/2023 09:34:55 AM STREAM b'pHYs' 70 9
06/12/2023 09:34:55 AM STREAM b'IDAT' 91 18915
06/12/2023 09:42:18 AM STREAM b'IHDR' 16 13
06/12/2023 09:42:18 AM STREAM b'sRGB' 41 1
06/12/2023 09:42:18 AM STREAM b'gAMA' 54 4
06/12/2023 09:42:18 AM STREAM b'pHYs' 70 9
06/12/2023 09:42:18 AM STREAM b'IDAT' 91 18915
06/12/2023 09:42:18 AM STREAM b'IHDR' 16 13
06/12/2023 09:42:18 AM STREAM b'sRGB' 41 1
06/12/2023 09:42:18 AM STREAM b'gAMA' 54 4
06/12/2023 09:42:18 AM STREAM b'pHYs' 70 9
06/12/2023 09:42:18 AM STREAM b'IDAT' 91 18915
06/12/2023 01:56:49 PM init
06/12/2023 02:20:19 PM init
06/12/2023 03:03:25 PM init
06/12/2023 03:06:48 PM init
06/12/2023 03:14:29 PM init
06/12/2023 03:18:10 PM init
06/12/2023 03:20:00 PM init
06/12/2023 03:25:15 PM init
06/12/2023 03:25:24 PM init
06/12/2023 03:44:40 PM Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
06/12/2023 03:44:40 PM NumExpr defaulting to 8 threads.
06/12/2023 03:51:16 PM init
06/12/2023 03:52:11 PM init
06/12/2023 03:52:57 PM init
06/12/2023 03:56:02 PM init
06/12/2023 03:56:50 PM Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
06/12/2023 03:56:50 PM NumExpr defaulting to 8 threads.
06/12/2023 05:37:11 PM init
06/12/2023 05:37:52 PM Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
06/12/2023 05:37:52 PM NumExpr defaulting to 8 threads.
06/12/2023 05:44:59 PM init
06/12/2023 05:46:42 PM Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
06/12/2023 05:46:42 PM NumExpr defaulting to 8 threads.
06/12/2023 08:26:09 PM 
            SELECT DISTINCT
            QID [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (3400,3401,3402,3403,3404,3405,3406,3407,3408,3409,3410,3411,3412,3413,3414,3415,3416,3417,3418,3419,3420,3421,3422,3423,3424,3425,3426,3427,3428,3429,3430,3431,3432,3433,3434,3435,3436,3437,3438,3439,3440,3441,3442,3443,3444,3445,3446,3447,3448,3449,3450,3451,3452,3453,3454,3455,3456,3457,3458,3459,3460,3461,3462,3463,3464,3465,3466,3467,3468,3469,3470,3471,3472,3473,3474,3475,3476,3477,3478,3479,3480,3481,3482,3483,3484,3485,3486,3487,3488,3489,3490,3491,3492,3493,3494,3495,3496,3497,3498,3499,3500,3501,3502,3503,3504,3505,3506,3507,3508,3509,3510,3511,3512,3513,3514,3515,3516,3517,3518,3519,3520,3521,3522,3523,3524,3525,3526,3527,3528,3529,3530,3531,3532,3533,3534,3535,3536,3537,3538,3539,3540,3541,3542,3543,3544,3545,3546,3547,3548,3549,3550,3551,3552,3553,3554,3555,3556,3557,3558,3559,3560,3561,3562,3563,3564,3565,3566,3567,3568,3569,3570,3571,3572,3573,3574,3575,3576,3577,3578,3579,3580,3581,3582,3583,3584,3585,3586,3587,3588,3589,3590,3591,3592,3593,3594,3595,3596,3597,3598,3599,3600,3601,3602,3603,3604,3605,3606,3607,3608,3609,3610,3611,3612,3613,3614,3615,3616,3617,3618,3619,3620,3621,3622,3623,3624,3625,3626,3627,3628,3629,3630,3631,3632,3633,3634,3635,3636,3637,3638,3639,3640,3641,3642,3643,3644,3645,3646,3647,3648,3649,3650,3651,3652,3653,3654,3655,3656,3657,3658,3659,3660,3661,3662,3663,3664,3665,3666,3667,3668,3669,3670,3671,3672,3673,3674,3675,3676,3677,3678,3679,3680,3681,3682,3683,3684,3685,3686,3687,3688,3689,3690,3691,3692,3693,3694,3695,3696,3697,3698,3699,3700,3701,3702,3703,3704,3705,3706,3707,3708,3709,3710,3711,3712,3713,3714,3715,3716,3717,3718,3719,3720,3721,3722,3723,3724,3725,3726,3727,3728,3729,3730,3731,3732,3733,3734,3735,3736,3737,3738,3739,3740,3741,3742,3743,3744,3745,3746,3747,3748,3749,3750,3751,3752,3753,3754,3755,3756,3757,3758,3759,3760,3761,3762,3763,3764,3765,3766,3767,3768,3769,3770,3771,3772,3773,3774,3775,3776,3777,3778,3779,3780,3781,3782,3783,3784,3785,3786,3787,3788,3789,3790,3791,3792,3793,3794,3795,3796,3797,3798,3799,3800,3801,3802,3803,3804,3805,3806,3807,3808,3809,3810,3811,3812,3813,3814,3815,3816,3817,3818,3819,3820,3821,3822,3823,3824,3825,3826,3827,3828,3829,3830,3831,3832,3833,3834,3835,3836,3837,3838,3839,3840,3841,3842,3843,3844,3845,3846,3847,3848,3849,3850,3851,3852,3853,3854,3855,3856,3857,3858,3859,3860,3861,3862,3863,3864,3865,3866,3867,3868,3869,3870,3871,3872,3873,3874,3875,3876,3877,3878,3879,3880,3881,3882,3883,3884,3885,3886,3887,3888,3889,3890,3891,3892,3893,3894,3895,3896,3897,3898,3899,3900,3901,3902,3903,3904,3905,3906,3907,3908,3909,3910,3911,3912,3913,3914,3915,3916,3917,3918,3919,3920,3921,3922,3923,3924,3925,3926,3927,3928,3929,3930,3931,3932,3933,3934,3935,3936,3937,3938,3939,3940,3941,3942,3943,3944,3945,3946,3947,3948,3949,3950,3951,3952,3953,3954,3955,3956,3957,3958,3959,3960,3961,3962,3963,3964,3965,3966,3967,3968,3969,3970,3971,3972,3973,3974,3975,3976,3977,3978,3979,3980,3981,3982,3983,3984,3985,3986,3987,3988,3989,3990,3991,3992,3993,3994,3995,3996,3997,3998,3999,4000,4001,4002,4003,4004,4005,4006,4007,4008,4009,4010,4011,4012,4013,4014,4015,4016,4017,4018,4019,4020,4021,4022,4023,4024,4025,4026,4027,4028,4029,4030,4031,4032,4033,4034,4035,4036,4037,4038,4039,4040,4041,4042,4043,4044,4045,4046,4047,4048,4049,4050,4051,4052,4053,4054,4055,4056,4057,4058,4059,4060,4061,4062,4063,4064,4065,4066,4067,4068,4069,4070,4071,4072,4073,4074,4075,4076,4077,4078,4079,4080,4081,4082,4083,4084,4085,4086,4087,4088,4089,4090,4091,4092,4093,4094,4095,4096,4097,4098,4099,4100,4101,4102,4103,4104,4105,4106,4107,4108,4109,4110,4111,4112,4113,4114,4115,4116,4117,4118,4119,4120,4121,4122,4123,4124,4125,4126,4127,4128,4129,4130,4131,4132,4133,4134,4135,4136,4137,4138,4139,4140,4141,4142,4143,4144,4145,4146,4147,4148,4149,4150,4151,4152,4153,4154,4155,4156,4157,4158,4159,4160,4161,4162,4163,4164,4165,4166,4167,4168,4169,4170,4171,4172,4173,4174,4175,4176,4177,4178,4179,4180,4181,4182,4183,4184,4185,4186,4187,4188,4189,4190,4191,4192,4193,4194,4195,4196,4197,4198,4199,4200,4201,4202,4203,4204,4205,4206,4207,4208,4209,4210,4211,4212,4213,4214,4215,4216,4217,4218,4219,4220,4221,4222,4223,4224,4225,4226,4227,4228,4229,4230,4231,4232,4233,4234,4235,4236,4237,4238,4239,4240,4241,4242,4243,4244,4245,4246,4247,4248,4249,4250,4251,4252,4253,4254,4255,4256,4257) ORDER BY SortPos; 
06/12/2023 08:27:01 PM 
            SELECT DISTINCT
            QID [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (3400,3401,3402,3403,3404,3405,3406,3407,3408,3409,3410,3411,3412,3413,3414,3415,3416,3417,3418,3419,3420,3421,3422,3423,3424,3425,3426,3427,3428,3429,3430,3431,3432,3433,3434,3435,3436,3437,3438,3439,3440,3441,3442,3443,3444,3445,3446,3447,3448,3449,3450,3451,3452,3453,3454,3455,3456,3457,3458,3459,3460,3461,3462,3463,3464,3465,3466,3467,3468,3469,3470,3471,3472,3473,3474,3475,3476,3477,3478,3479,3480,3481,3482,3483,3484,3485,3486,3487,3488,3489,3490,3491,3492,3493,3494,3495,3496,3497,3498,3499,3500,3501,3502,3503,3504,3505,3506,3507,3508,3509,3510,3511,3512,3513,3514,3515,3516,3517,3518,3519,3520,3521,3522,3523,3524,3525,3526,3527,3528,3529,3530,3531,3532,3533,3534,3535,3536,3537,3538,3539,3540,3541,3542,3543,3544,3545,3546,3547,3548,3549,3550,3551,3552,3553,3554,3555,3556,3557,3558,3559,3560,3561,3562,3563,3564,3565,3566,3567,3568,3569,3570,3571,3572,3573,3574,3575,3576,3577,3578,3579,3580,3581,3582,3583,3584,3585,3586,3587,3588,3589,3590,3591,3592,3593,3594,3595,3596,3597,3598,3599,3600,3601,3602,3603,3604,3605,3606,3607,3608,3609,3610,3611,3612,3613,3614,3615,3616,3617,3618,3619,3620,3621,3622,3623,3624,3625,3626,3627,3628,3629,3630,3631,3632,3633,3634,3635,3636,3637,3638,3639,3640,3641,3642,3643,3644,3645,3646,3647,3648,3649,3650,3651,3652,3653,3654,3655,3656,3657,3658,3659,3660,3661,3662,3663,3664,3665,3666,3667,3668,3669,3670,3671,3672,3673,3674,3675,3676,3677,3678,3679,3680,3681,3682,3683,3684,3685,3686,3687,3688,3689,3690,3691,3692,3693,3694,3695,3696,3697,3698,3699,3700,3701,3702,3703,3704,3705,3706,3707,3708,3709,3710,3711,3712,3713,3714,3715,3716,3717,3718,3719,3720,3721,3722,3723,3724,3725,3726,3727,3728,3729,3730,3731,3732,3733,3734,3735,3736,3737,3738,3739,3740,3741,3742,3743,3744,3745,3746,3747,3748,3749,3750,3751,3752,3753,3754,3755,3756,3757,3758,3759,3760,3761,3762,3763,3764,3765,3766,3767,3768,3769,3770,3771,3772,3773,3774,3775,3776,3777,3778,3779,3780,3781,3782,3783,3784,3785,3786,3787,3788,3789,3790,3791,3792,3793,3794,3795,3796,3797,3798,3799,3800,3801,3802,3803,3804,3805,3806,3807,3808,3809,3810,3811,3812,3813,3814,3815,3816,3817,3818,3819,3820,3821,3822,3823,3824,3825,3826,3827,3828,3829,3830,3831,3832,3833,3834,3835,3836,3837,3838,3839,3840,3841,3842,3843,3844,3845,3846,3847,3848,3849,3850,3851,3852,3853,3854,3855,3856,3857,3858,3859,3860,3861,3862,3863,3864,3865,3866,3867,3868,3869,3870,3871,3872,3873,3874,3875,3876,3877,3878,3879,3880,3881,3882,3883,3884,3885,3886,3887,3888,3889,3890,3891,3892,3893,3894,3895,3896,3897,3898,3899,3900,3901,3902,3903,3904,3905,3906,3907,3908,3909,3910,3911,3912,3913,3914,3915,3916,3917,3918,3919,3920,3921,3922,3923,3924,3925,3926,3927,3928,3929,3930,3931,3932,3933,3934,3935,3936,3937,3938,3939,3940,3941,3942,3943,3944,3945,3946,3947,3948,3949,3950,3951,3952,3953,3954,3955,3956,3957,3958,3959,3960,3961,3962,3963,3964,3965,3966,3967,3968,3969,3970,3971,3972,3973,3974,3975,3976,3977,3978,3979,3980,3981,3982,3983,3984,3985,3986,3987,3988,3989,3990,3991,3992,3993,3994,3995,3996,3997,3998,3999,4000,4001,4002,4003,4004,4005,4006,4007,4008,4009,4010,4011,4012,4013,4014,4015,4016,4017,4018,4019,4020,4021,4022,4023,4024,4025,4026,4027,4028,4029,4030,4031,4032,4033,4034,4035,4036,4037,4038,4039,4040,4041,4042,4043,4044,4045,4046,4047,4048,4049,4050,4051,4052,4053,4054,4055,4056,4057,4058,4059,4060,4061,4062,4063,4064,4065,4066,4067,4068,4069,4070,4071,4072,4073,4074,4075,4076,4077,4078,4079,4080,4081,4082,4083,4084,4085,4086,4087,4088,4089,4090,4091,4092,4093,4094,4095,4096,4097,4098,4099,4100,4101,4102,4103,4104,4105,4106,4107,4108,4109,4110,4111,4112,4113,4114,4115,4116,4117,4118,4119,4120,4121,4122,4123,4124,4125,4126,4127,4128,4129,4130,4131,4132,4133,4134,4135,4136,4137,4138,4139,4140,4141,4142,4143,4144,4145,4146,4147,4148,4149,4150,4151,4152,4153,4154,4155,4156,4157,4158,4159,4160,4161,4162,4163,4164,4165,4166,4167,4168,4169,4170,4171,4172,4173,4174,4175,4176,4177,4178,4179,4180,4181,4182,4183,4184,4185,4186,4187,4188,4189,4190,4191,4192,4193,4194,4195,4196,4197,4198,4199,4200,4201,4202,4203,4204,4205,4206,4207,4208,4209,4210,4211,4212,4213,4214,4215,4216,4217,4218,4219,4220,4221,4222,4223,4224,4225,4226,4227,4228,4229,4230,4231,4232,4233,4234,4235,4236,4237,4238,4239,4240,4241,4242,4243,4244,4245,4246,4247,4248,4249,4250,4251,4252,4253,4254,4255,4256,4257) ORDER BY SortPos; 
06/12/2023 08:28:34 PM 
            SELECT DISTINCT
            QID [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (3400,3401,3402,3403,3404) ORDER BY SortPos; 
06/12/2023 08:28:54 PM 
            SELECT DISTINCT
            QID [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4028,4029,4030,4031,4032,4033,4034,4035,4036,4037,4038,4039,4040,4041,4042,4043,4044,4045,4046,4047,4048,4049,4050,4051,4052,4053,4054,4055,4056,4057,4058,4059,4060,4061,4062,4063,4064,4065,4066,4067,4068,4069,4070,4071,4072,4073,4074,4075,4076,4077,4078,4079,4080,4081,4082,4083,4084,4085,4086,4087,4088,4089,4090,4091,4092,4093,4094,4095,4096,4097,4098,4099,4100,4101,4102,4103,4104,4105,4106,4107,4108,4109,4110,4111,4112,4113,4114,4115,4116,4117,4118,4119,4120,4121,4122,4123,4124,4125,4126,4127,4128,4129,4130,4131,4132,4133,4134,4135,4136,4137,4138,4139,4140,4141,4142,4143,4144,4145,4146,4147,4148,4149,4150,4151,4152,4153,4154,4155,4156,4157,4158,4159,4160,4161,4162,4163,4164,4165,4166,4167,4168,4169,4170,4171,4172,4173,4174,4175,4176,4177,4178,4179,4180,4181,4182,4183,4184,4185,4186,4187,4188,4189,4190,4191,4192,4193,4194,4195,4196,4197,4198,4199,4200,4201,4202,4203,4204,4205,4206,4207,4208,4209,4210,4211,4212,4213,4214,4215,4216,4217,4218,4219,4220,4221,4222,4223,4224,4225,4226,4227,4228,4229,4230,4231,4232,4233,4234,4235,4236,4237,4238,4239,4240,4241,4242,4243,4244,4245,4246,4247,4248,4249,4250,4251,4252,4253,4254,4255,4256,4257) ORDER BY SortPos; 
06/12/2023 08:29:34 PM 
            SELECT DISTINCT
            QID [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4028,4029,4030,4031,4032,4033,4034,4035,4036,4037,4038,4039,4040,4041,4042,4043,4044,4045,4046,4047,4048,4049,4050,4051,4052,4053,4054,4055,4056,4057,4058,4059,4060,4061,4062,4063,4064,4065,4066,4067,4068,4069,4070,4071,4072,4073,4074,4075,4076,4077,4078,4079,4080,4081,4082,4083,4084,4085,4086,4087,4088,4089,4090,4091,4092,4093,4094,4095,4096,4097,4098,4099,4100,4101,4102,4103,4104,4105,4106,4107,4108,4109,4110,4111,4112,4113,4114,4115,4116,4117,4118,4119,4120,4121,4122,4123,4124,4125,4126,4127,4128,4129,4130,4131,4132,4133,4134,4135,4136,4137,4138,4139,4140,4141,4142,4143,4144,4145,4146,4147,4148,4149,4150,4151,4152,4153,4154,4155,4156,4157,4158,4159,4160,4161,4162,4163,4164,4165,4166,4167,4168,4169,4170,4171,4172,4173,4174,4175,4176,4177,4178,4179,4180,4181,4182,4183,4184,4185,4186,4187,4188,4189,4190,4191,4192,4193,4194,4195,4196,4197,4198,4199,4200,4201,4202,4203,4204,4205,4206,4207,4208,4209,4210,4211,4212,4213,4214,4215,4216,4217,4218,4219,4220,4221,4222,4223,4224,4225,4226,4227,4228,4229,4230,4231,4232,4233,4234,4235,4236,4237,4238,4239,4240,4241,4242,4243,4244,4245,4246,4247,4248,4249,4250,4251,4252,4253,4254,4255,4256,4257) ORDER BY SortPos; 
06/12/2023 08:30:12 PM 
            SELECT DISTINCT
            QID [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4028,4029,4030,4031,4032,4033,4034,4035,4036,4037,4038,4039,4040,4041,4042,4043,4044,4045,4046,4047,4048,4049,4050,4051,4052,4053,4054,4055,4056,4057,4058,4059,4060,4061,4062,4063,4064,4065,4066,4067,4068,4069,4070,4071,4072,4073,4074,4075,4076,4077,4078,4079,4080,4081,4082,4083,4084,4085,4086,4087,4088,4089,4090,4091,4092,4093,4094,4095,4096,4097,4098,4099,4100,4101,4102,4103,4104,4105,4106,4107,4108,4109,4110,4111,4112,4113,4114,4115,4116,4117,4118,4119,4120,4121,4122,4123,4124,4125,4126,4127,4128,4129,4130,4131,4132,4133,4134,4135,4136,4137,4138,4139,4140,4141,4142,4143,4144,4145,4146,4147,4148,4149,4150,4151,4152,4153,4154,4155,4156,4157,4158,4159,4160,4161,4162,4163,4164,4165,4166,4167,4168,4169,4170,4171,4172,4173,4174,4175,4176,4177,4178,4179,4180,4181,4182,4183,4184,4185,4186,4187,4188,4189,4190,4191,4192,4193,4194,4195,4196,4197,4198,4199,4200,4201,4202,4203,4204,4205,4206,4207,4208,4209,4210,4211,4212,4213,4214,4215,4216,4217,4218,4219,4220,4221,4222,4223,4224,4225,4226,4227,4228,4229,4230,4231,4232,4233,4234,4235,4236,4237,4238,4239,4240,4241,4242,4243,4244,4245,4246,4247,4248,4249,4250,4251,4252,4253,4254,4255,4256,4257) ORDER BY SortPos; 
06/12/2023 08:30:58 PM 
            SELECT DISTINCT
            QID [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4028,4029,4030,4031,4032,4033,4034,4035,4036,4037,4038,4039,4040,4041,4042,4043,4044,4045,4046,4047,4048,4049,4050,4051,4052,4053,4054,4055,4056,4057,4058,4059,4060,4061,4062,4063,4064,4065,4066,4067,4068,4069,4070,4071,4072,4073,4074,4075,4076,4077,4078,4079,4080,4081,4082,4083,4084,4085,4086,4087,4088,4089,4090,4091,4092,4093,4094,4095,4096,4097,4098,4099,4100,4101,4102,4103,4104,4105,4106,4107,4108,4109,4110,4111,4112,4113,4114,4115,4116,4117,4118,4119,4120,4121,4122,4123,4124,4125,4126,4127,4128,4129,4130,4131,4132,4133,4134,4135,4136,4137,4138,4139,4140,4141,4142,4143,4144,4145,4146,4147,4148,4149,4150,4151,4152,4153,4154,4155,4156,4157,4158,4159,4160,4161,4162,4163,4164,4165,4166,4167,4168,4169,4170,4171,4172,4173,4174,4175,4176,4177,4178,4179,4180,4181,4182,4183,4184,4185,4186,4187,4188,4189,4190,4191,4192,4193,4194,4195,4196,4197,4198,4199,4200,4201,4202,4203,4204,4205,4206,4207,4208,4209,4210,4211,4212,4213,4214,4215,4216,4217,4218,4219,4220,4221,4222,4223,4224,4225,4226,4227,4228,4229,4230,4231,4232,4233,4234,4235,4236,4237,4238,4239,4240,4241,4242,4243,4244,4245,4246,4247,4248,4249,4250,4251,4252,4253,4254,4255,4256,4257) ORDER BY SortPos; 
06/12/2023 09:07:04 PM 
            SELECT DISTINCT
            QID [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4028,4029,4030,4031,4032,4033,4034,4035,4036,4037,4038,4039,4040,4041,4042,4043,4044,4045,4046,4047,4048,4049,4050,4051,4052,4053,4054,4055,4056,4057,4058,4059,4060,4061,4062,4063,4064,4065,4066,4067,4068,4069,4070,4071,4072,4073,4074,4075,4076,4077,4078,4079,4080,4081,4082,4083,4084,4085,4086,4087,4088,4089,4090,4091,4092,4093,4094,4095,4096,4097,4098,4099,4100,4101,4102,4103,4104,4105,4106,4107,4108,4109,4110,4111,4112,4113,4114,4115,4116,4117,4118,4119,4120,4121,4122,4123,4124,4125,4126,4127,4128,4129,4130,4131,4132,4133,4134,4135,4136,4137,4138,4139,4140,4141,4142,4143,4144,4145,4146,4147,4148,4149,4150,4151,4152,4153,4154,4155,4156,4157,4158,4159,4160,4161,4162,4163,4164,4165,4166,4167,4168,4169,4170,4171,4172,4173,4174,4175,4176,4177,4178,4179,4180,4181,4182,4183,4184,4185,4186,4187,4188,4189,4190,4191,4192,4193,4194,4195,4196,4197,4198,4199,4200,4201,4202,4203,4204,4205,4206,4207,4208,4209,4210,4211,4212,4213,4214,4215,4216,4217,4218,4219,4220,4221,4222,4223,4224,4225,4226,4227,4228,4229,4230,4231,4232,4233,4234,4235,4236,4237,4238,4239,4240,4241,4242,4243,4244,4245,4246,4247,4248,4249,4250,4251,4252,4253,4254,4255,4256,4257) ORDER BY SortPos; 
06/12/2023 09:07:36 PM 
            SELECT DISTINCT
            QID [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4028,4029,4030,4031,4032,4033,4034,4035,4036,4037,4038,4039,4040,4041,4042,4043,4044,4045,4046,4047,4048,4049,4050,4051,4052,4053,4054,4055,4056,4057,4058,4059,4060,4061,4062,4063,4064,4065,4066,4067,4068,4069,4070,4071,4072,4073,4074,4075,4076,4077,4078,4079,4080,4081,4082,4083,4084,4085,4086,4087,4088,4089,4090,4091,4092,4093,4094,4095,4096,4097,4098,4099,4100,4101,4102,4103,4104,4105,4106,4107,4108,4109,4110,4111,4112,4113,4114,4115,4116,4117,4118,4119,4120,4121,4122,4123,4124,4125,4126,4127,4128,4129,4130,4131,4132,4133,4134,4135,4136,4137,4138,4139,4140,4141,4142,4143,4144,4145,4146,4147,4148,4149,4150,4151,4152,4153,4154,4155,4156,4157,4158,4159,4160,4161,4162,4163,4164,4165,4166,4167,4168,4169,4170,4171,4172,4173,4174,4175,4176,4177,4178,4179,4180,4181,4182,4183,4184,4185,4186,4187,4188,4189,4190,4191,4192,4193,4194,4195,4196,4197,4198,4199,4200,4201,4202,4203,4204,4205,4206,4207,4208,4209,4210,4211,4212,4213,4214,4215,4216,4217,4218,4219,4220,4221,4222,4223,4224,4225,4226,4227,4228,4229,4230,4231,4232,4233,4234,4235,4236,4237,4238,4239,4240,4241,4242,4243,4244,4245,4246,4247,4248,4249,4250,4251,4252,4253,4254,4255,4256,4257) ORDER BY SortPos; 
06/12/2023 09:07:55 PM 
            SELECT DISTINCT
            QID [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4028,4029,4030,4031,4032,4033,4034,4035,4036,4037,4038,4039,4040,4041,4042,4043,4044,4045,4046,4047,4048,4049,4050,4051,4052,4053,4054,4055,4056,4057,4058,4059,4060,4061,4062,4063,4064,4065,4066,4067,4068,4069,4070,4071,4072,4073,4074,4075,4076,4077,4078,4079,4080,4081,4082,4083,4084,4085,4086,4087,4088,4089,4090,4091,4092,4093,4094,4095,4096,4097,4098,4099,4100,4101,4102,4103,4104,4105,4106,4107,4108,4109,4110,4111,4112,4113,4114,4115,4116,4117,4118,4119,4120,4121,4122,4123,4124,4125,4126,4127,4128,4129,4130,4131,4132,4133,4134,4135,4136,4137,4138,4139,4140,4141,4142,4143,4144,4145,4146,4147,4148,4149,4150,4151,4152,4153,4154,4155,4156,4157,4158,4159,4160,4161,4162,4163,4164,4165,4166,4167,4168,4169,4170,4171,4172,4173,4174,4175,4176,4177,4178,4179,4180,4181,4182,4183,4184,4185,4186,4187,4188,4189,4190,4191,4192,4193,4194,4195,4196,4197,4198,4199,4200,4201,4202,4203,4204,4205,4206,4207,4208,4209,4210,4211,4212,4213,4214,4215,4216,4217,4218,4219,4220,4221,4222,4223,4224,4225,4226,4227,4228,4229,4230,4231,4232,4233,4234,4235,4236,4237,4238,4239,4240,4241,4242,4243,4244,4245,4246,4247,4248,4249,4250,4251,4252,4253,4254,4255,4256,4257) ORDER BY SortPos; 
06/12/2023 09:08:08 PM 
            SELECT DISTINCT
            QID [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4028,4029,4030,4031,4032,4033,4034,4035,4036,4037,4038,4039,4040,4041,4042,4043,4044,4045,4046,4047,4048,4049,4050,4051,4052,4053,4054,4055,4056,4057,4058,4059,4060,4061,4062,4063,4064,4065,4066,4067,4068,4069,4070,4071,4072,4073,4074,4075,4076,4077,4078,4079,4080,4081,4082,4083,4084,4085,4086,4087,4088,4089,4090,4091,4092,4093,4094,4095,4096,4097,4098,4099,4100,4101,4102,4103,4104,4105,4106,4107,4108,4109,4110,4111,4112,4113,4114,4115,4116,4117,4118,4119,4120,4121,4122,4123,4124,4125,4126,4127,4128,4129,4130,4131,4132,4133,4134,4135,4136,4137,4138,4139,4140,4141,4142,4143,4144,4145,4146,4147,4148,4149,4150,4151,4152,4153,4154,4155,4156,4157,4158,4159,4160,4161,4162,4163,4164,4165,4166,4167,4168,4169,4170,4171,4172,4173,4174,4175,4176,4177,4178,4179,4180,4181,4182,4183,4184,4185,4186,4187,4188,4189,4190,4191,4192,4193,4194,4195,4196,4197,4198,4199,4200,4201,4202,4203,4204,4205,4206,4207,4208,4209,4210,4211,4212,4213,4214,4215,4216,4217,4218,4219,4220,4221,4222,4223,4224,4225,4226,4227,4228,4229,4230,4231,4232,4233,4234,4235,4236,4237,4238,4239,4240,4241,4242,4243,4244,4245,4246,4247,4248,4249,4250,4251,4252,4253,4254,4255,4256,4257) ORDER BY SortPos; 
06/12/2023 09:08:24 PM 
            SELECT DISTINCT
            QID [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4028,4029,4030,4031,4032,4033,4034,4035,4036,4037,4038,4039,4040,4041,4042,4043,4044,4045,4046,4047,4048,4049,4050,4051,4052,4053,4054,4055,4056,4057,4058,4059,4060,4061,4062,4063,4064,4065,4066,4067,4068,4069,4070,4071,4072,4073,4074,4075,4076,4077,4078,4079,4080,4081,4082,4083,4084,4085,4086,4087,4088,4089,4090,4091,4092,4093,4094,4095,4096,4097,4098,4099,4100,4101,4102,4103,4104,4105,4106,4107,4108,4109,4110,4111,4112,4113,4114,4115,4116,4117,4118,4119,4120,4121,4122,4123,4124,4125,4126,4127,4128,4129,4130,4131,4132,4133,4134,4135,4136,4137,4138,4139,4140,4141,4142,4143,4144,4145,4146,4147,4148,4149,4150,4151,4152,4153,4154,4155,4156,4157,4158,4159,4160,4161,4162,4163,4164,4165,4166,4167,4168,4169,4170,4171,4172,4173,4174,4175,4176,4177,4178,4179,4180,4181,4182,4183,4184,4185,4186,4187,4188,4189,4190,4191,4192,4193,4194,4195,4196,4197,4198,4199,4200,4201,4202,4203,4204,4205,4206,4207,4208,4209,4210,4211,4212,4213,4214,4215,4216,4217,4218,4219,4220,4221,4222,4223,4224,4225,4226,4227,4228,4229,4230,4231,4232,4233,4234,4235,4236,4237,4238,4239,4240,4241,4242,4243,4244,4245,4246,4247,4248,4249,4250,4251,4252,4253,4254,4255,4256,4257) ORDER BY SortPos; 
06/12/2023 09:09:43 PM 
            SELECT DISTINCT
            QID [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4028,4029,4030,4031,4032,4033,4034,4035,4036,4037,4038,4039,4040,4041,4042,4043,4044,4045,4046,4047,4048,4049,4050,4051,4052,4053,4054,4055,4056,4057,4058,4059,4060,4061,4062,4063,4064,4065,4066,4067,4068,4069,4070,4071,4072,4073,4074,4075,4076,4077,4078,4079,4080,4081,4082,4083,4084,4085,4086,4087,4088,4089,4090,4091,4092,4093,4094,4095,4096,4097,4098,4099,4100,4101,4102,4103,4104,4105,4106,4107,4108,4109,4110,4111,4112,4113,4114,4115,4116,4117,4118,4119,4120,4121,4122,4123,4124,4125,4126,4127,4128,4129,4130,4131,4132,4133,4134,4135,4136,4137,4138,4139,4140,4141,4142,4143,4144,4145,4146,4147,4148,4149,4150,4151,4152,4153,4154,4155,4156,4157,4158,4159,4160,4161,4162,4163,4164,4165,4166,4167,4168,4169,4170,4171,4172,4173,4174,4175,4176,4177,4178,4179,4180,4181,4182,4183,4184,4185,4186,4187,4188,4189,4190,4191,4192,4193,4194,4195,4196,4197,4198,4199,4200,4201,4202,4203,4204,4205,4206,4207,4208,4209,4210,4211,4212,4213,4214,4215,4216,4217,4218,4219,4220,4221,4222,4223,4224,4225,4226,4227,4228,4229,4230,4231,4232,4233,4234,4235,4236,4237,4238,4239,4240,4241,4242,4243,4244,4245,4246,4247,4248,4249,4250,4251,4252,4253,4254,4255,4256,4257) ORDER BY SortPos; 
06/12/2023 09:09:55 PM 
            SELECT DISTINCT
            QID [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4028,4029,4030,4031,4032,4033,4034,4035,4036,4037,4038,4039,4040,4041,4042,4043,4044,4045,4046,4047,4048,4049,4050,4051,4052,4053,4054,4055,4056,4057,4058,4059,4060,4061,4062,4063,4064,4065,4066,4067,4068,4069,4070,4071,4072,4073,4074,4075,4076,4077,4078,4079,4080,4081,4082,4083,4084,4085,4086,4087,4088,4089,4090,4091,4092,4093,4094,4095,4096,4097,4098,4099,4100,4101,4102,4103,4104,4105,4106,4107,4108,4109,4110,4111,4112,4113,4114,4115,4116,4117,4118,4119,4120,4121,4122,4123,4124,4125,4126,4127,4128,4129,4130,4131,4132,4133,4134,4135,4136,4137,4138,4139,4140,4141,4142,4143,4144,4145,4146,4147,4148,4149,4150,4151,4152,4153,4154,4155,4156,4157,4158,4159,4160,4161,4162,4163,4164,4165,4166,4167,4168,4169,4170,4171,4172,4173,4174,4175,4176,4177,4178,4179,4180,4181,4182,4183,4184,4185,4186,4187,4188,4189,4190,4191,4192,4193,4194,4195,4196,4197,4198,4199,4200,4201,4202,4203,4204,4205,4206,4207,4208,4209,4210,4211,4212,4213,4214,4215,4216,4217,4218,4219,4220,4221,4222,4223,4224,4225,4226,4227,4228,4229,4230,4231,4232,4233,4234,4235,4236,4237,4238,4239,4240,4241,4242,4243,4244,4245,4246,4247,4248,4249,4250,4251,4252,4253,4254,4255,4256,4257) ORDER BY SortPos; 
06/12/2023 09:10:07 PM 
            SELECT DISTINCT
            QID [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4028,4029,4030,4031,4032,4033,4034,4035,4036,4037,4038,4039,4040,4041,4042,4043,4044,4045,4046,4047,4048,4049,4050,4051,4052,4053,4054,4055,4056,4057,4058,4059,4060,4061,4062,4063,4064,4065,4066,4067,4068,4069,4070,4071,4072,4073,4074,4075,4076,4077,4078,4079,4080,4081,4082,4083,4084,4085,4086,4087,4088,4089,4090,4091,4092,4093,4094,4095,4096,4097,4098,4099,4100,4101,4102,4103,4104,4105,4106,4107,4108,4109,4110,4111,4112,4113,4114,4115,4116,4117,4118,4119,4120,4121,4122,4123,4124,4125,4126,4127,4128,4129,4130,4131,4132,4133,4134,4135,4136,4137,4138,4139,4140,4141,4142,4143,4144,4145,4146,4147,4148,4149,4150,4151,4152,4153,4154,4155,4156,4157,4158,4159,4160,4161,4162,4163,4164,4165,4166,4167,4168,4169,4170,4171,4172,4173,4174,4175,4176,4177,4178,4179,4180,4181,4182,4183,4184,4185,4186,4187,4188,4189,4190,4191,4192,4193,4194,4195,4196,4197,4198,4199,4200,4201,4202,4203,4204,4205,4206,4207,4208,4209,4210,4211,4212,4213,4214,4215,4216,4217,4218,4219,4220,4221,4222,4223,4224,4225,4226,4227,4228,4229,4230,4231,4232,4233,4234,4235,4236,4237,4238,4239,4240,4241,4242,4243,4244,4245,4246,4247,4248,4249,4250,4251,4252,4253,4254,4255,4256,4257) ORDER BY SortPos; 
06/12/2023 09:13:01 PM 
            SELECT DISTINCT
            QID [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4028,4029,4030,4031,4032,4033,4034,4035,4036,4037,4038,4039,4040,4041,4042,4043,4044,4045,4046,4047,4048,4049,4050,4051,4052,4053,4054,4055,4056,4057,4058,4059,4060,4061,4062,4063,4064,4065,4066,4067,4068,4069,4070,4071,4072,4073,4074,4075,4076,4077,4078,4079,4080,4081,4082,4083,4084,4085,4086,4087,4088,4089,4090,4091,4092,4093,4094,4095,4096,4097,4098,4099,4100,4101,4102,4103,4104,4105,4106,4107,4108,4109,4110,4111,4112,4113,4114,4115,4116,4117,4118,4119,4120,4121,4122,4123,4124,4125,4126,4127,4128,4129,4130,4131,4132,4133,4134,4135,4136,4137,4138,4139,4140,4141,4142,4143,4144,4145,4146,4147,4148,4149,4150,4151,4152,4153,4154,4155,4156,4157,4158,4159,4160,4161,4162,4163,4164,4165,4166,4167,4168,4169,4170,4171,4172,4173,4174,4175,4176,4177,4178,4179,4180,4181,4182,4183,4184,4185,4186,4187,4188,4189,4190,4191,4192,4193,4194,4195,4196,4197,4198,4199,4200,4201,4202,4203,4204,4205,4206,4207,4208,4209,4210,4211,4212,4213,4214,4215,4216,4217,4218,4219,4220,4221,4222,4223,4224,4225,4226,4227,4228,4229,4230,4231,4232,4233,4234,4235,4236,4237,4238,4239,4240,4241,4242,4243,4244,4245,4246,4247,4248,4249,4250,4251,4252,4253,4254,4255,4256,4257) ORDER BY SortPos; 
06/13/2023 07:10:32 AM init
06/13/2023 07:35:52 AM init
06/13/2023 07:36:24 AM Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
06/13/2023 07:36:24 AM NumExpr defaulting to 8 threads.
06/13/2023 07:59:10 AM init
06/13/2023 08:08:11 AM init
06/13/2023 08:10:02 AM init
06/13/2023 08:14:08 AM init
06/13/2023 08:19:28 AM init
06/13/2023 08:27:45 AM init
06/13/2023 08:32:19 AM init
06/13/2023 08:35:02 AM init
06/13/2023 08:36:58 AM init
06/13/2023 08:46:45 AM init
06/13/2023 09:04:47 AM init
06/13/2023 09:07:54 AM init
06/13/2023 09:20:23 AM init
06/13/2023 09:25:34 AM 
            SELECT DISTINCT
            ISNULL(QID, '') [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4028,4029,4030,4031,4032,4033,4034,4035,4036,4037,4038,4039,4040,4041,4042,4043,4044,4045,4046,4047,4048,4049,4050,4051,4052,4053,4054,4055,4056,4057,4058,4059,4060,4061,4062,4063,4064,4065,4066,4067,4068,4069,4070,4071,4072,4073,4074,4075,4076,4077,4078,4079,4080,4081,4082,4083,4084,4085,4086,4087,4088,4089,4090,4091,4092,4093,4094,4095,4096,4097,4098,4099,4100,4101,4102,4103,4104,4105,4106,4107,4108,4109,4110,4111,4112,4113,4114,4115,4116,4117,4118,4119,4120,4121,4122,4123,4124,4125,4126,4127,4128,4129,4130,4131,4132,4133,4134,4135,4136,4137,4138,4139,4140,4141,4142,4143,4144,4145,4146,4147,4148,4149,4150,4151,4152,4153,4154,4155,4156,4157,4158,4159,4160,4161,4162,4163,4164,4165,4166,4167,4168,4169,4170,4171,4172,4173,4174,4175,4176,4177,4178,4179,4180,4181,4182,4183,4184,4185,4186,4187,4188,4189,4190,4191,4192,4193,4194,4195,4196,4197,4198,4199,4200,4201,4202,4203,4204,4205,4206,4207,4208,4209,4210,4211,4212,4213,4214,4215,4216,4217,4218,4219,4220,4221,4222,4223,4224,4225,4226,4227,4228,4229,4230,4231,4232,4233,4234,4235,4236,4237,4238,4239,4240,4241,4242,4243,4244,4245,4246,4247,4248,4249,4250,4251,4252,4253,4254,4255,4256,4257) ORDER BY SortPos; 
06/13/2023 09:26:10 AM 
            SELECT DISTINCT
            ISNULL(QID, '') [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4028,4029,4030,4031,4032,4033,4034,4035,4036,4037,4038,4039,4040,4041,4042,4043,4044,4045,4046,4047,4048,4049,4050,4051,4052,4053,4054,4055,4056,4057,4058,4059,4060,4061,4062,4063,4064,4065,4066,4067,4068,4069,4070,4071,4072,4073,4074,4075,4076,4077,4078,4079,4080,4081,4082,4083,4084,4085,4086,4087,4088,4089,4090,4091,4092,4093,4094,4095,4096,4097,4098,4099,4100,4101,4102,4103,4104,4105,4106,4107,4108,4109,4110,4111,4112,4113,4114,4115,4116,4117,4118,4119,4120,4121,4122,4123,4124,4125,4126,4127,4128,4129,4130,4131,4132,4133,4134,4135,4136,4137,4138,4139,4140,4141,4142,4143,4144,4145,4146,4147,4148,4149,4150,4151,4152,4153,4154,4155,4156,4157,4158,4159,4160,4161,4162,4163,4164,4165,4166,4167,4168,4169,4170,4171,4172,4173,4174,4175,4176,4177,4178,4179,4180,4181,4182,4183,4184,4185,4186,4187,4188,4189,4190,4191,4192,4193,4194,4195,4196,4197,4198,4199,4200,4201,4202,4203,4204,4205,4206,4207,4208,4209,4210,4211,4212,4213,4214,4215,4216,4217,4218,4219,4220,4221,4222,4223,4224,4225,4226,4227,4228,4229,4230,4231,4232,4233,4234,4235,4236,4237,4238,4239,4240,4241,4242,4243,4244,4245,4246,4247,4248,4249,4250,4251,4252,4253,4254,4255,4256,4257) ORDER BY SortPos; 
06/13/2023 10:04:13 AM init
06/13/2023 10:04:23 AM PK_QuestionType: 2
06/13/2023 10:04:23 AM Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
06/13/2023 10:04:23 AM NumExpr defaulting to 8 threads.
06/13/2023 10:04:34 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 43
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 43
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 43
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 43
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 43
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 43
06/13/2023 10:07:30 AM PK_QuestionType: 43
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 43
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 43
06/13/2023 10:07:30 AM PK_QuestionType: 43
06/13/2023 10:07:30 AM PK_QuestionType: 2
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 2
06/13/2023 10:07:30 AM PK_QuestionType: 43
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 43
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 43
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:07:30 AM PK_QuestionType: 17
06/13/2023 10:08:20 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 43
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 43
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 43
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 43
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 43
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 43
06/13/2023 10:11:38 AM PK_QuestionType: 43
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 43
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 43
06/13/2023 10:11:38 AM PK_QuestionType: 43
06/13/2023 10:11:38 AM PK_QuestionType: 2
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 2
06/13/2023 10:11:38 AM PK_QuestionType: 43
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 43
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 43
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:11:38 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 2
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 2
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:12:54 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 2
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 2
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:13:57 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 2
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 2
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:08 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 2
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 2
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:09 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 2
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 2
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:15:28 AM PK_QuestionType: 17
06/13/2023 10:16:02 AM PK_QuestionType: 17
06/13/2023 10:16:02 AM PK_QuestionType: 17
06/13/2023 10:16:02 AM PK_QuestionType: 17
06/13/2023 10:16:02 AM PK_QuestionType: 17
06/13/2023 10:16:02 AM PK_QuestionType: 17
06/13/2023 10:16:02 AM PK_QuestionType: 17
06/13/2023 10:16:02 AM PK_QuestionType: 43
06/13/2023 10:16:02 AM PK_QuestionType: 17
06/13/2023 10:16:02 AM PK_QuestionType: 43
06/13/2023 10:16:02 AM PK_QuestionType: 17
06/13/2023 10:16:02 AM PK_QuestionType: 17
06/13/2023 10:16:02 AM PK_QuestionType: 17
06/13/2023 10:16:02 AM PK_QuestionType: 17
06/13/2023 10:16:02 AM PK_QuestionType: 17
06/13/2023 10:16:02 AM PK_QuestionType: 17
06/13/2023 10:16:02 AM PK_QuestionType: 17
06/13/2023 10:16:02 AM PK_QuestionType: 17
06/13/2023 10:16:02 AM PK_QuestionType: 17
06/13/2023 10:16:02 AM PK_QuestionType: 17
06/13/2023 10:16:02 AM PK_QuestionType: 17
06/13/2023 10:16:02 AM PK_QuestionType: 17
06/13/2023 10:16:02 AM PK_QuestionType: 17
06/13/2023 10:16:02 AM PK_QuestionType: 17
06/13/2023 10:16:02 AM PK_QuestionType: 17
06/13/2023 10:16:02 AM PK_QuestionType: 17
06/13/2023 10:16:02 AM PK_QuestionType: 17
06/13/2023 10:16:02 AM PK_QuestionType: 17
06/13/2023 10:16:02 AM PK_QuestionType: 17
06/13/2023 10:16:02 AM PK_QuestionType: 17
06/13/2023 10:16:02 AM PK_QuestionType: 17
06/13/2023 10:16:02 AM PK_QuestionType: 17
06/13/2023 10:16:02 AM PK_QuestionType: 17
06/13/2023 10:16:02 AM PK_QuestionType: 17
06/13/2023 10:16:02 AM PK_QuestionType: 17
06/13/2023 10:16:02 AM PK_QuestionType: 17
06/13/2023 10:16:02 AM PK_QuestionType: 17
06/13/2023 10:16:02 AM PK_QuestionType: 17
06/13/2023 10:16:02 AM PK_QuestionType: 17
06/13/2023 10:16:02 AM PK_QuestionType: 17
06/13/2023 10:16:02 AM PK_QuestionType: 17
06/13/2023 10:16:02 AM PK_QuestionType: 17
06/13/2023 10:16:02 AM PK_QuestionType: 17
06/13/2023 10:16:02 AM PK_QuestionType: 17
06/13/2023 10:16:02 AM PK_QuestionType: 17
06/13/2023 10:16:02 AM PK_QuestionType: 17
06/13/2023 10:16:02 AM PK_QuestionType: 17
06/13/2023 10:16:02 AM PK_QuestionType: 17
06/13/2023 10:16:02 AM PK_QuestionType: 17
06/13/2023 10:16:02 AM PK_QuestionType: 17
06/13/2023 10:16:02 AM PK_QuestionType: 17
06/13/2023 10:16:02 AM PK_QuestionType: 17
06/13/2023 10:16:02 AM PK_QuestionType: 17
06/13/2023 10:16:02 AM PK_QuestionType: 17
06/13/2023 10:16:02 AM PK_QuestionType: 17
06/13/2023 10:16:02 AM PK_QuestionType: 17
06/13/2023 10:16:02 AM PK_QuestionType: 17
06/13/2023 10:16:02 AM PK_QuestionType: 17
06/13/2023 10:16:02 AM PK_QuestionType: 17
06/13/2023 10:16:02 AM PK_QuestionType: 17
06/13/2023 10:16:02 AM PK_QuestionType: 17
06/13/2023 10:16:02 AM PK_QuestionType: 17
06/13/2023 10:16:02 AM PK_QuestionType: 17
06/13/2023 10:16:02 AM PK_QuestionType: 17
06/13/2023 10:16:02 AM PK_QuestionType: 17
06/13/2023 10:16:02 AM PK_QuestionType: 17
06/13/2023 10:16:02 AM PK_QuestionType: 17
06/13/2023 10:16:02 AM PK_QuestionType: 17
06/13/2023 10:16:02 AM PK_QuestionType: 17
06/13/2023 10:16:02 AM PK_QuestionType: 17
06/13/2023 10:16:02 AM PK_QuestionType: 17
06/13/2023 10:16:02 AM PK_QuestionType: 17
06/13/2023 10:16:02 AM PK_QuestionType: 43
06/13/2023 10:16:02 AM PK_QuestionType: 17
06/13/2023 10:16:02 AM PK_QuestionType: 17
06/13/2023 10:16:02 AM PK_QuestionType: 17
06/13/2023 10:16:02 AM PK_QuestionType: 43
06/13/2023 10:16:02 AM PK_QuestionType: 17
06/13/2023 10:16:02 AM PK_QuestionType: 17
06/13/2023 10:16:02 AM PK_QuestionType: 17
06/13/2023 10:16:02 AM PK_QuestionType: 17
06/13/2023 10:16:02 AM PK_QuestionType: 17
06/13/2023 10:16:02 AM PK_QuestionType: 43
06/13/2023 10:16:02 AM PK_QuestionType: 17
06/13/2023 10:16:02 AM PK_QuestionType: 17
06/13/2023 10:16:02 AM PK_QuestionType: 17
06/13/2023 10:16:03 AM PK_QuestionType: 17
06/13/2023 10:16:03 AM PK_QuestionType: 17
06/13/2023 10:16:03 AM PK_QuestionType: 17
06/13/2023 10:16:03 AM PK_QuestionType: 17
06/13/2023 10:16:03 AM PK_QuestionType: 43
06/13/2023 10:16:03 AM PK_QuestionType: 43
06/13/2023 10:16:03 AM PK_QuestionType: 17
06/13/2023 10:16:03 AM PK_QuestionType: 17
06/13/2023 10:16:03 AM PK_QuestionType: 17
06/13/2023 10:16:03 AM PK_QuestionType: 17
06/13/2023 10:16:03 AM PK_QuestionType: 17
06/13/2023 10:16:03 AM PK_QuestionType: 17
06/13/2023 10:16:03 AM PK_QuestionType: 17
06/13/2023 10:16:03 AM PK_QuestionType: 17
06/13/2023 10:16:03 AM PK_QuestionType: 17
06/13/2023 10:16:03 AM PK_QuestionType: 17
06/13/2023 10:16:03 AM PK_QuestionType: 17
06/13/2023 10:16:03 AM PK_QuestionType: 17
06/13/2023 10:16:03 AM PK_QuestionType: 17
06/13/2023 10:16:03 AM PK_QuestionType: 17
06/13/2023 10:16:03 AM PK_QuestionType: 17
06/13/2023 10:16:03 AM PK_QuestionType: 43
06/13/2023 10:16:03 AM PK_QuestionType: 17
06/13/2023 10:16:03 AM PK_QuestionType: 17
06/13/2023 10:16:03 AM PK_QuestionType: 43
06/13/2023 10:16:03 AM PK_QuestionType: 43
06/13/2023 10:16:03 AM PK_QuestionType: 2
06/13/2023 10:16:03 AM PK_QuestionType: 17
06/13/2023 10:16:03 AM PK_QuestionType: 17
06/13/2023 10:16:03 AM PK_QuestionType: 2
06/13/2023 10:16:03 AM PK_QuestionType: 43
06/13/2023 10:16:03 AM PK_QuestionType: 17
06/13/2023 10:16:03 AM PK_QuestionType: 17
06/13/2023 10:16:03 AM PK_QuestionType: 17
06/13/2023 10:16:03 AM PK_QuestionType: 17
06/13/2023 10:16:03 AM PK_QuestionType: 17
06/13/2023 10:16:03 AM PK_QuestionType: 17
06/13/2023 10:16:03 AM PK_QuestionType: 17
06/13/2023 10:16:03 AM PK_QuestionType: 17
06/13/2023 10:16:03 AM PK_QuestionType: 17
06/13/2023 10:16:03 AM PK_QuestionType: 17
06/13/2023 10:16:03 AM PK_QuestionType: 43
06/13/2023 10:16:03 AM PK_QuestionType: 17
06/13/2023 10:16:03 AM PK_QuestionType: 17
06/13/2023 10:16:03 AM PK_QuestionType: 17
06/13/2023 10:16:03 AM PK_QuestionType: 17
06/13/2023 10:16:03 AM PK_QuestionType: 17
06/13/2023 10:16:03 AM PK_QuestionType: 17
06/13/2023 10:16:03 AM PK_QuestionType: 17
06/13/2023 10:16:03 AM PK_QuestionType: 17
06/13/2023 10:16:03 AM PK_QuestionType: 17
06/13/2023 10:16:03 AM PK_QuestionType: 17
06/13/2023 10:16:03 AM PK_QuestionType: 17
06/13/2023 10:16:03 AM PK_QuestionType: 17
06/13/2023 10:16:03 AM PK_QuestionType: 17
06/13/2023 10:16:03 AM PK_QuestionType: 17
06/13/2023 10:16:03 AM PK_QuestionType: 17
06/13/2023 10:16:03 AM PK_QuestionType: 17
06/13/2023 10:16:03 AM PK_QuestionType: 17
06/13/2023 10:16:03 AM PK_QuestionType: 17
06/13/2023 10:16:03 AM PK_QuestionType: 17
06/13/2023 10:16:03 AM PK_QuestionType: 17
06/13/2023 10:16:03 AM PK_QuestionType: 17
06/13/2023 10:16:03 AM PK_QuestionType: 17
06/13/2023 10:16:03 AM PK_QuestionType: 17
06/13/2023 10:16:03 AM PK_QuestionType: 17
06/13/2023 10:16:03 AM PK_QuestionType: 17
06/13/2023 10:16:03 AM PK_QuestionType: 17
06/13/2023 10:16:03 AM PK_QuestionType: 17
06/13/2023 10:16:03 AM PK_QuestionType: 43
06/13/2023 10:16:03 AM PK_QuestionType: 17
06/13/2023 10:16:03 AM PK_QuestionType: 17
06/13/2023 10:16:03 AM PK_QuestionType: 17
06/13/2023 10:16:03 AM PK_QuestionType: 17
06/13/2023 10:16:03 AM PK_QuestionType: 17
06/13/2023 10:16:03 AM PK_QuestionType: 17
06/13/2023 10:16:03 AM PK_QuestionType: 17
06/13/2023 10:16:03 AM PK_QuestionType: 17
06/13/2023 10:16:03 AM PK_QuestionType: 17
06/13/2023 10:16:03 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 2
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 2
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:18 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 2
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 2
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:20 AM PK_QuestionType: 17
06/13/2023 10:16:45 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 2
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 2
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:16:54 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 2
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 2
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:17:26 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 2
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 2
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:18:04 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 2
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 2
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:20:10 AM PK_QuestionType: 17
06/13/2023 10:21:08 AM PK_QuestionType: 17
06/13/2023 10:21:08 AM PK_QuestionType: 17
06/13/2023 10:21:08 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 2
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 2
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:09 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 2
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 2
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:21:23 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 2
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 2
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:22:01 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 2
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 2
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 10:23:47 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM 
            SELECT DISTINCT
            ISNULL(QID, '') [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4028,4029,4030,4031,4032,4033,4034,4035,4036,4037,4038,4039,4040,4041,4042,4043,4044,4045,4046,4047,4048,4049,4050,4051,4052,4053,4054,4055,4056,4057,4058,4059,4060,4061,4062,4063,4064,4065,4066,4067,4068,4069,4070,4071,4072,4073,4074,4075,4076,4077,4078,4079,4080,4081,4082,4083,4084,4085,4086,4087,4088,4089,4090,4091,4092,4093,4094,4095,4096,4097,4098,4099,4100,4101,4102,4103,4104,4105,4106,4107,4108,4109,4110,4111,4112,4113,4114,4115,4116,4117,4118,4119,4120,4121,4122,4123,4124,4125,4126,4127,4128,4129,4130,4131,4132,4133,4134,4135,4136,4137,4138,4139,4140,4141,4142,4143,4144,4145,4146,4147,4148,4149,4150,4151,4152,4153,4154,4155,4156,4157,4158,4159,4160,4161,4162,4163,4164,4165,4166,4167,4168,4169,4170,4171,4172,4173,4174,4175,4176,4177,4178,4179,4180,4181,4182,4183,4184,4185,4186,4187,4188,4189,4190,4191,4192,4193,4194,4195,4196,4197,4198,4199,4200,4201,4202,4203,4204,4205,4206,4207,4208,4209,4210,4211,4212,4213,4214,4215,4216,4217,4218,4219,4220,4221,4222,4223,4224,4225,4226,4227,4228,4229,4230,4231,4232,4233,4234,4235,4236,4237,4238,4239,4240,4241,4242,4243,4244,4245,4246,4247,4248,4249,4250,4251,4252,4253,4254,4255,4256,4257) ORDER BY SortPos; 
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 2
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 2
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 11:51:26 AM PK_QuestionType: 17
06/13/2023 01:41:10 PM init
06/13/2023 01:48:36 PM init
06/13/2023 01:53:38 PM init
06/13/2023 01:54:37 PM init
06/13/2023 01:56:24 PM init
06/13/2023 01:56:47 PM init
06/13/2023 02:05:47 PM init
06/13/2023 02:10:20 PM init
06/13/2023 02:12:39 PM init
06/13/2023 02:14:10 PM init
06/13/2023 02:16:33 PM init
06/13/2023 02:17:36 PM init
06/13/2023 02:23:33 PM init
06/13/2023 02:27:09 PM init
06/13/2023 04:19:07 PM init
06/13/2023 04:21:20 PM init
06/13/2023 06:46:58 PM init
06/13/2023 06:47:16 PM init
06/13/2023 06:54:35 PM init
06/13/2023 06:54:43 PM 
            SELECT DISTINCT
            ISNULL(QID, '') [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4028,4029,4030,4031,4032,4033,4034,4035,4036,4037,4038,4039,4040,4041,4042,4043,4044,4045,4046,4047,4048,4049,4050,4051,4052,4053,4054,4055,4056,4057,4058,4059,4060,4061,4062,4063,4064,4065,4066,4067,4068,4069,4070,4071,4072,4073,4074,4075,4076,4077,4078,4079,4080,4081,4082,4083,4084,4085,4086,4087,4088,4089,4090,4091,4092,4093,4094,4095,4096,4097,4098,4099,4100,4101,4102,4103,4104,4105,4106,4107,4108,4109,4110,4111,4112,4113,4114,4115,4116,4117,4118,4119,4120,4121,4122,4123,4124,4125,4126,4127,4128,4129,4130,4131,4132,4133,4134,4135,4136,4137,4138,4139,4140,4141,4142,4143,4144,4145,4146,4147,4148,4149,4150,4151,4152,4153,4154,4155,4156,4157,4158,4159,4160,4161,4162,4163,4164,4165,4166,4167,4168,4169,4170,4171,4172,4173,4174,4175,4176,4177,4178,4179,4180,4181,4182,4183,4184,4185,4186,4187,4188,4189,4190,4191,4192,4193,4194,4195,4196,4197,4198,4199,4200,4201,4202,4203,4204,4205,4206,4207,4208,4209,4210,4211,4212,4213,4214,4215,4216,4217,4218,4219,4220,4221,4222,4223,4224,4225,4226,4227,4228,4229,4230,4231,4232,4233,4234,4235,4236,4237,4238,4239,4240,4241,4242,4243,4244,4245,4246,4247,4248,4249,4250,4251,4252,4253,4254,4255,4256,4257) ORDER BY SortPos; 
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 2
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 2
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 06:54:44 PM PK_QuestionType: 17
06/13/2023 07:02:14 PM PK_QuestionType: 17
06/13/2023 07:02:37 PM PK_QuestionType: 43
06/13/2023 07:03:21 PM PK_QuestionType: 43
06/13/2023 07:07:37 PM init
06/13/2023 07:08:02 PM 
            SELECT DISTINCT
            ISNULL(QID, '') [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4028,4029,4030,4031,4032,4033,4034,4035,4036,4037,4038,4039,4040,4041,4042,4043,4044,4045,4046,4047,4048,4049,4050,4051,4052,4053,4054,4055,4056,4057,4058,4059,4060,4061,4062,4063,4064,4065,4066,4067,4068,4069,4070,4071,4072,4073,4074,4075,4076,4077,4078,4079,4080,4081,4082,4083,4084,4085,4086,4087,4088,4089,4090,4091,4092,4093,4094,4095,4096,4097,4098,4099,4100,4101,4102,4103,4104,4105,4106,4107,4108,4109,4110,4111,4112,4113,4114,4115,4116,4117,4118,4119,4120,4121,4122,4123,4124,4125,4126,4127,4128,4129,4130,4131,4132,4133,4134,4135,4136,4137,4138,4139,4140,4141,4142,4143,4144,4145,4146,4147,4148,4149,4150,4151,4152,4153,4154,4155,4156,4157,4158,4159,4160,4161,4162,4163,4164,4165,4166,4167,4168,4169,4170,4171,4172,4173,4174,4175,4176,4177,4178,4179,4180,4181,4182,4183,4184,4185,4186,4187,4188,4189,4190,4191,4192,4193,4194,4195,4196,4197,4198,4199,4200,4201,4202,4203,4204,4205,4206,4207,4208,4209,4210,4211,4212,4213,4214,4215,4216,4217,4218,4219,4220,4221,4222,4223,4224,4225,4226,4227,4228,4229,4230,4231,4232,4233,4234,4235,4236,4237,4238,4239,4240,4241,4242,4243,4244,4245,4246,4247,4248,4249,4250,4251,4252,4253,4254,4255,4256,4257) ORDER BY SortPos; 
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 43
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 43
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 43
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 43
06/13/2023 07:08:03 PM PK_QuestionType: 43
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 43
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 43
06/13/2023 07:08:03 PM PK_QuestionType: 43
06/13/2023 07:08:03 PM PK_QuestionType: 43
06/13/2023 07:08:03 PM PK_QuestionType: 43
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 43
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 43
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 43
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 43
06/13/2023 07:08:03 PM PK_QuestionType: 43
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 43
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 43
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 43
06/13/2023 07:08:03 PM PK_QuestionType: 43
06/13/2023 07:08:03 PM PK_QuestionType: 2
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 2
06/13/2023 07:08:03 PM PK_QuestionType: 43
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 43
06/13/2023 07:08:03 PM PK_QuestionType: 43
06/13/2023 07:08:03 PM PK_QuestionType: 43
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 43
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:03 PM PK_QuestionType: 17
06/13/2023 07:08:31 PM PK_QuestionType: 43
06/13/2023 07:11:15 PM 
            SELECT DISTINCT
            ISNULL(QID, '') [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4028,4029,4030,4031,4032,4033,4034,4035,4036,4037,4038,4039,4040,4041,4042,4043,4044,4045,4046,4047,4048,4049,4050,4051,4052,4053,4054,4055,4056,4057,4058,4059,4060,4061,4062,4063,4064,4065,4066,4067,4068,4069,4070,4071,4072,4073,4074,4075,4076,4077,4078,4079,4080,4081,4082,4083,4084,4085,4086,4087,4088,4089,4090,4091,4092,4093,4094,4095,4096,4097,4098,4099,4100,4101,4102,4103,4104,4105,4106,4107,4108,4109,4110,4111,4112,4113,4114,4115,4116,4117,4118,4119,4120,4121,4122,4123,4124,4125,4126,4127,4128,4129,4130,4131,4132,4133,4134,4135,4136,4137,4138,4139,4140,4141,4142,4143,4144,4145,4146,4147,4148,4149,4150,4151,4152,4153,4154,4155,4156,4157,4158,4159,4160,4161,4162,4163,4164,4165,4166,4167,4168,4169,4170,4171,4172,4173,4174,4175,4176,4177,4178,4179,4180,4181,4182,4183,4184,4185,4186,4187,4188,4189,4190,4191,4192,4193,4194,4195,4196,4197,4198,4199,4200,4201,4202,4203,4204,4205,4206,4207,4208,4209,4210,4211,4212,4213,4214,4215,4216,4217,4218,4219,4220,4221,4222,4223,4224,4225,4226,4227,4228,4229,4230,4231,4232,4233,4234,4235,4236,4237,4238,4239,4240,4241,4242,4243,4244,4245,4246,4247,4248,4249,4250,4251,4252,4253,4254,4255,4256,4257) ORDER BY SortPos; 
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 43
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 43
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 43
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 43
06/13/2023 07:11:15 PM PK_QuestionType: 43
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 43
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 43
06/13/2023 07:11:15 PM PK_QuestionType: 43
06/13/2023 07:11:15 PM PK_QuestionType: 43
06/13/2023 07:11:15 PM PK_QuestionType: 43
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 43
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 43
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 43
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 43
06/13/2023 07:11:15 PM PK_QuestionType: 43
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 43
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 43
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 43
06/13/2023 07:11:15 PM PK_QuestionType: 43
06/13/2023 07:11:15 PM PK_QuestionType: 2
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 2
06/13/2023 07:11:15 PM PK_QuestionType: 43
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 43
06/13/2023 07:11:15 PM PK_QuestionType: 43
06/13/2023 07:11:15 PM PK_QuestionType: 43
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 43
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:15 PM PK_QuestionType: 17
06/13/2023 07:11:33 PM 
            SELECT DISTINCT
            ISNULL(QID, '') [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4028,4029,4030,4031,4032,4033,4034,4035,4036,4037,4038,4039,4040,4041,4042,4043,4044,4045,4046,4047,4048,4049,4050,4051,4052,4053,4054,4055,4056,4057,4058,4059,4060,4061,4062,4063,4064,4065,4066,4067,4068,4069,4070,4071,4072,4073,4074,4075,4076,4077,4078,4079,4080,4081,4082,4083,4084,4085,4086,4087,4088,4089,4090,4091,4092,4093,4094,4095,4096,4097,4098,4099,4100,4101,4102,4103,4104,4105,4106,4107,4108,4109,4110,4111,4112,4113,4114,4115,4116,4117,4118,4119,4120,4121,4122,4123,4124,4125,4126,4127,4128,4129,4130,4131,4132,4133,4134,4135,4136,4137,4138,4139,4140,4141,4142,4143,4144,4145,4146,4147,4148,4149,4150,4151,4152,4153,4154,4155,4156,4157,4158,4159,4160,4161,4162,4163,4164,4165,4166,4167,4168,4169,4170,4171,4172,4173,4174,4175,4176,4177,4178,4179,4180,4181,4182,4183,4184,4185,4186,4187,4188,4189,4190,4191,4192,4193,4194,4195,4196,4197,4198,4199,4200,4201,4202,4203,4204,4205,4206,4207,4208,4209,4210,4211,4212,4213,4214,4215,4216,4217,4218,4219,4220,4221,4222,4223,4224,4225,4226,4227,4228,4229,4230,4231,4232,4233,4234,4235,4236,4237,4238,4239,4240,4241,4242,4243,4244,4245,4246,4247,4248,4249,4250,4251,4252,4253,4254,4255,4256,4257) ORDER BY SortPos; 
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 43
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 43
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 43
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 43
06/13/2023 07:11:34 PM PK_QuestionType: 43
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 43
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 43
06/13/2023 07:11:34 PM PK_QuestionType: 43
06/13/2023 07:11:34 PM PK_QuestionType: 43
06/13/2023 07:11:34 PM PK_QuestionType: 43
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 43
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 43
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 43
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 43
06/13/2023 07:11:34 PM PK_QuestionType: 43
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 43
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 43
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 43
06/13/2023 07:11:34 PM PK_QuestionType: 43
06/13/2023 07:11:34 PM PK_QuestionType: 2
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 2
06/13/2023 07:11:34 PM PK_QuestionType: 43
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 43
06/13/2023 07:11:34 PM PK_QuestionType: 43
06/13/2023 07:11:34 PM PK_QuestionType: 43
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 43
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:34 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM 
            SELECT DISTINCT
            ISNULL(QID, '') [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4028,4029,4030,4031,4032,4033,4034,4035,4036,4037,4038,4039,4040,4041,4042,4043,4044,4045,4046,4047,4048,4049,4050,4051,4052,4053,4054,4055,4056,4057,4058,4059,4060,4061,4062,4063,4064,4065,4066,4067,4068,4069,4070,4071,4072,4073,4074,4075,4076,4077,4078,4079,4080,4081,4082,4083,4084,4085,4086,4087,4088,4089,4090,4091,4092,4093,4094,4095,4096,4097,4098,4099,4100,4101,4102,4103,4104,4105,4106,4107,4108,4109,4110,4111,4112,4113,4114,4115,4116,4117,4118,4119,4120,4121,4122,4123,4124,4125,4126,4127,4128,4129,4130,4131,4132,4133,4134,4135,4136,4137,4138,4139,4140,4141,4142,4143,4144,4145,4146,4147,4148,4149,4150,4151,4152,4153,4154,4155,4156,4157,4158,4159,4160,4161,4162,4163,4164,4165,4166,4167,4168,4169,4170,4171,4172,4173,4174,4175,4176,4177,4178,4179,4180,4181,4182,4183,4184,4185,4186,4187,4188,4189,4190,4191,4192,4193,4194,4195,4196,4197,4198,4199,4200,4201,4202,4203,4204,4205,4206,4207,4208,4209,4210,4211,4212,4213,4214,4215,4216,4217,4218,4219,4220,4221,4222,4223,4224,4225,4226,4227,4228,4229,4230,4231,4232,4233,4234,4235,4236,4237,4238,4239,4240,4241,4242,4243,4244,4245,4246,4247,4248,4249,4250,4251,4252,4253,4254,4255,4256,4257) ORDER BY SortPos; 
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 43
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 43
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 43
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 43
06/13/2023 07:11:52 PM PK_QuestionType: 43
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 43
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 43
06/13/2023 07:11:52 PM PK_QuestionType: 43
06/13/2023 07:11:52 PM PK_QuestionType: 43
06/13/2023 07:11:52 PM PK_QuestionType: 43
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 43
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 43
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 43
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 43
06/13/2023 07:11:52 PM PK_QuestionType: 43
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 43
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 43
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 43
06/13/2023 07:11:52 PM PK_QuestionType: 43
06/13/2023 07:11:52 PM PK_QuestionType: 2
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 2
06/13/2023 07:11:52 PM PK_QuestionType: 43
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 43
06/13/2023 07:11:52 PM PK_QuestionType: 43
06/13/2023 07:11:52 PM PK_QuestionType: 43
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 43
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:11:52 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM 
            SELECT DISTINCT
            ISNULL(QID, '') [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4028,4029,4030,4031,4032,4033,4034,4035,4036,4037,4038,4039,4040,4041,4042,4043,4044,4045,4046,4047,4048,4049,4050,4051,4052,4053,4054,4055,4056,4057,4058,4059,4060,4061,4062,4063,4064,4065,4066,4067,4068,4069,4070,4071,4072,4073,4074,4075,4076,4077,4078,4079,4080,4081,4082,4083,4084,4085,4086,4087,4088,4089,4090,4091,4092,4093,4094,4095,4096,4097,4098,4099,4100,4101,4102,4103,4104,4105,4106,4107,4108,4109,4110,4111,4112,4113,4114,4115,4116,4117,4118,4119,4120,4121,4122,4123,4124,4125,4126,4127,4128,4129,4130,4131,4132,4133,4134,4135,4136,4137,4138,4139,4140,4141,4142,4143,4144,4145,4146,4147,4148,4149,4150,4151,4152,4153,4154,4155,4156,4157,4158,4159,4160,4161,4162,4163,4164,4165,4166,4167,4168,4169,4170,4171,4172,4173,4174,4175,4176,4177,4178,4179,4180,4181,4182,4183,4184,4185,4186,4187,4188,4189,4190,4191,4192,4193,4194,4195,4196,4197,4198,4199,4200,4201,4202,4203,4204,4205,4206,4207,4208,4209,4210,4211,4212,4213,4214,4215,4216,4217,4218,4219,4220,4221,4222,4223,4224,4225,4226,4227,4228,4229,4230,4231,4232,4233,4234,4235,4236,4237,4238,4239,4240,4241,4242,4243,4244,4245,4246,4247,4248,4249,4250,4251,4252,4253,4254,4255,4256,4257) ORDER BY SortPos; 
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 43
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 43
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 43
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 43
06/13/2023 07:12:44 PM PK_QuestionType: 43
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 43
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 43
06/13/2023 07:12:44 PM PK_QuestionType: 43
06/13/2023 07:12:44 PM PK_QuestionType: 43
06/13/2023 07:12:44 PM PK_QuestionType: 43
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 43
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 43
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 43
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 43
06/13/2023 07:12:44 PM PK_QuestionType: 43
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 43
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 43
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 43
06/13/2023 07:12:44 PM PK_QuestionType: 43
06/13/2023 07:12:44 PM PK_QuestionType: 2
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 2
06/13/2023 07:12:44 PM PK_QuestionType: 43
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 43
06/13/2023 07:12:44 PM PK_QuestionType: 43
06/13/2023 07:12:44 PM PK_QuestionType: 43
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 43
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:12:44 PM PK_QuestionType: 17
06/13/2023 07:13:38 PM 
            SELECT DISTINCT
            ISNULL(QID, '') [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4028,4029,4030,4031,4032,4033,4034,4035,4036,4037,4038,4039,4040,4041,4042,4043,4044,4045,4046,4047,4048,4049,4050,4051,4052,4053,4054,4055,4056,4057,4058,4059,4060,4061,4062,4063,4064,4065,4066,4067,4068,4069,4070,4071,4072,4073,4074,4075,4076,4077,4078,4079,4080,4081,4082,4083,4084,4085,4086,4087,4088,4089,4090,4091,4092,4093,4094,4095,4096,4097,4098,4099,4100,4101,4102,4103,4104,4105,4106,4107,4108,4109,4110,4111,4112,4113,4114,4115,4116,4117,4118,4119,4120,4121,4122,4123,4124,4125,4126,4127,4128,4129,4130,4131,4132,4133,4134,4135,4136,4137,4138,4139,4140,4141,4142,4143,4144,4145,4146,4147,4148,4149,4150,4151,4152,4153,4154,4155,4156,4157,4158,4159,4160,4161,4162,4163,4164,4165,4166,4167,4168,4169,4170,4171,4172,4173,4174,4175,4176,4177,4178,4179,4180,4181,4182,4183,4184,4185,4186,4187,4188,4189,4190,4191,4192,4193,4194,4195,4196,4197,4198,4199,4200,4201,4202,4203,4204,4205,4206,4207,4208,4209,4210,4211,4212,4213,4214,4215,4216,4217,4218,4219,4220,4221,4222,4223,4224,4225,4226,4227,4228,4229,4230,4231,4232,4233,4234,4235,4236,4237,4238,4239,4240,4241,4242,4243,4244,4245,4246,4247,4248,4249,4250,4251,4252,4253,4254,4255,4256,4257) ORDER BY SortPos; 
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 43
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 43
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 43
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 43
06/13/2023 07:13:39 PM PK_QuestionType: 43
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 43
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 43
06/13/2023 07:13:39 PM PK_QuestionType: 43
06/13/2023 07:13:39 PM PK_QuestionType: 43
06/13/2023 07:13:39 PM PK_QuestionType: 43
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 43
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 43
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 43
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 43
06/13/2023 07:13:39 PM PK_QuestionType: 43
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 43
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 43
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 43
06/13/2023 07:13:39 PM PK_QuestionType: 43
06/13/2023 07:13:39 PM PK_QuestionType: 2
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 2
06/13/2023 07:13:39 PM PK_QuestionType: 43
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 43
06/13/2023 07:13:39 PM PK_QuestionType: 43
06/13/2023 07:13:39 PM PK_QuestionType: 43
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 43
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:13:39 PM PK_QuestionType: 17
06/13/2023 07:18:36 PM 
            SELECT DISTINCT
            ISNULL(QID, '') [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4028,4029,4030,4031,4032,4033,4034,4035,4036,4037,4038,4039,4040,4041,4042,4043,4044,4045,4046,4047,4048,4049,4050,4051,4052,4053,4054,4055,4056,4057,4058,4059,4060,4061,4062,4063,4064,4065,4066,4067,4068,4069,4070,4071,4072,4073,4074,4075,4076,4077,4078,4079,4080,4081,4082,4083,4084,4085,4086,4087,4088,4089,4090,4091,4092,4093,4094,4095,4096,4097,4098,4099,4100,4101,4102,4103,4104,4105,4106,4107,4108,4109,4110,4111,4112,4113,4114,4115,4116,4117,4118,4119,4120,4121,4122,4123,4124,4125,4126,4127,4128,4129,4130,4131,4132,4133,4134,4135,4136,4137,4138,4139,4140,4141,4142,4143,4144,4145,4146,4147,4148,4149,4150,4151,4152,4153,4154,4155,4156,4157,4158,4159,4160,4161,4162,4163,4164,4165,4166,4167,4168,4169,4170,4171,4172,4173,4174,4175,4176,4177,4178,4179,4180,4181,4182,4183,4184,4185,4186,4187,4188,4189,4190,4191,4192,4193,4194,4195,4196,4197,4198,4199,4200,4201,4202,4203,4204,4205,4206,4207,4208,4209,4210,4211,4212,4213,4214,4215,4216,4217,4218,4219,4220,4221,4222,4223,4224,4225,4226,4227,4228,4229,4230,4231,4232,4233,4234,4235,4236,4237,4238,4239,4240,4241,4242,4243,4244,4245,4246,4247,4248,4249,4250,4251,4252,4253,4254,4255,4256,4257) ORDER BY SortPos; 
06/13/2023 07:18:36 PM PK_QuestionType: 17
06/13/2023 07:18:36 PM PK_QuestionType: 17
06/13/2023 07:18:36 PM PK_QuestionType: 43
06/13/2023 07:18:36 PM PK_QuestionType: 17
06/13/2023 07:18:36 PM PK_QuestionType: 17
06/13/2023 07:18:36 PM PK_QuestionType: 17
06/13/2023 07:18:36 PM PK_QuestionType: 17
06/13/2023 07:18:36 PM PK_QuestionType: 43
06/13/2023 07:18:36 PM PK_QuestionType: 17
06/13/2023 07:18:36 PM PK_QuestionType: 43
06/13/2023 07:18:36 PM PK_QuestionType: 17
06/13/2023 07:18:36 PM PK_QuestionType: 17
06/13/2023 07:18:36 PM PK_QuestionType: 17
06/13/2023 07:18:36 PM PK_QuestionType: 17
06/13/2023 07:18:36 PM PK_QuestionType: 17
06/13/2023 07:18:36 PM PK_QuestionType: 17
06/13/2023 07:18:36 PM PK_QuestionType: 17
06/13/2023 07:18:36 PM PK_QuestionType: 17
06/13/2023 07:18:36 PM PK_QuestionType: 17
06/13/2023 07:18:36 PM PK_QuestionType: 17
06/13/2023 07:18:36 PM PK_QuestionType: 17
06/13/2023 07:18:36 PM PK_QuestionType: 17
06/13/2023 07:18:36 PM PK_QuestionType: 17
06/13/2023 07:18:36 PM PK_QuestionType: 17
06/13/2023 07:18:36 PM PK_QuestionType: 17
06/13/2023 07:18:36 PM PK_QuestionType: 17
06/13/2023 07:18:36 PM PK_QuestionType: 17
06/13/2023 07:18:36 PM PK_QuestionType: 17
06/13/2023 07:18:36 PM PK_QuestionType: 17
06/13/2023 07:18:36 PM PK_QuestionType: 17
06/13/2023 07:18:36 PM PK_QuestionType: 17
06/13/2023 07:18:36 PM PK_QuestionType: 17
06/13/2023 07:18:36 PM PK_QuestionType: 17
06/13/2023 07:18:36 PM PK_QuestionType: 17
06/13/2023 07:18:36 PM PK_QuestionType: 17
06/13/2023 07:18:36 PM PK_QuestionType: 17
06/13/2023 07:18:36 PM PK_QuestionType: 17
06/13/2023 07:18:36 PM PK_QuestionType: 17
06/13/2023 07:18:36 PM PK_QuestionType: 17
06/13/2023 07:18:36 PM PK_QuestionType: 17
06/13/2023 07:18:36 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 43
06/13/2023 07:18:37 PM PK_QuestionType: 43
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 43
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 43
06/13/2023 07:18:37 PM PK_QuestionType: 43
06/13/2023 07:18:37 PM PK_QuestionType: 43
06/13/2023 07:18:37 PM PK_QuestionType: 43
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 43
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 43
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 43
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 43
06/13/2023 07:18:37 PM PK_QuestionType: 43
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 43
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 43
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 43
06/13/2023 07:18:37 PM PK_QuestionType: 43
06/13/2023 07:18:37 PM PK_QuestionType: 2
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 2
06/13/2023 07:18:37 PM PK_QuestionType: 43
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 43
06/13/2023 07:18:37 PM PK_QuestionType: 43
06/13/2023 07:18:37 PM PK_QuestionType: 43
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 43
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:18:37 PM PK_QuestionType: 17
06/13/2023 07:19:42 PM 
            SELECT DISTINCT
            ISNULL(QID, '') [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4028,4029,4030,4031,4032,4033,4034,4035,4036,4037,4038,4039,4040,4041,4042,4043,4044,4045,4046,4047,4048,4049,4050,4051,4052,4053,4054,4055,4056,4057,4058,4059,4060,4061,4062,4063,4064,4065,4066,4067,4068,4069,4070,4071,4072,4073,4074,4075,4076,4077,4078,4079,4080,4081,4082,4083,4084,4085,4086,4087,4088,4089,4090,4091,4092,4093,4094,4095,4096,4097,4098,4099,4100,4101,4102,4103,4104,4105,4106,4107,4108,4109,4110,4111,4112,4113,4114,4115,4116,4117,4118,4119,4120,4121,4122,4123,4124,4125,4126,4127,4128,4129,4130,4131,4132,4133,4134,4135,4136,4137,4138,4139,4140,4141,4142,4143,4144,4145,4146,4147,4148,4149,4150,4151,4152,4153,4154,4155,4156,4157,4158,4159,4160,4161,4162,4163,4164,4165,4166,4167,4168,4169,4170,4171,4172,4173,4174,4175,4176,4177,4178,4179,4180,4181,4182,4183,4184,4185,4186,4187,4188,4189,4190,4191,4192,4193,4194,4195,4196,4197,4198,4199,4200,4201,4202,4203,4204,4205,4206,4207,4208,4209,4210,4211,4212,4213,4214,4215,4216,4217,4218,4219,4220,4221,4222,4223,4224,4225,4226,4227,4228,4229,4230,4231,4232,4233,4234,4235,4236,4237,4238,4239,4240,4241,4242,4243,4244,4245,4246,4247,4248,4249,4250,4251,4252,4253,4254,4255,4256,4257) ORDER BY SortPos; 
06/13/2023 07:19:42 PM PK_QuestionType: 17
06/13/2023 07:20:15 PM 
            SELECT DISTINCT
            ISNULL(QID, '') [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4028,4029,4030,4031,4032,4033,4034,4035,4036,4037,4038,4039,4040,4041,4042,4043,4044,4045,4046,4047,4048,4049,4050,4051,4052,4053,4054,4055,4056,4057,4058,4059,4060,4061,4062,4063,4064,4065,4066,4067,4068,4069,4070,4071,4072,4073,4074,4075,4076,4077,4078,4079,4080,4081,4082,4083,4084,4085,4086,4087,4088,4089,4090,4091,4092,4093,4094,4095,4096,4097,4098,4099,4100,4101,4102,4103,4104,4105,4106,4107,4108,4109,4110,4111,4112,4113,4114,4115,4116,4117,4118,4119,4120,4121,4122,4123,4124,4125,4126,4127,4128,4129,4130,4131,4132,4133,4134,4135,4136,4137,4138,4139,4140,4141,4142,4143,4144,4145,4146,4147,4148,4149,4150,4151,4152,4153,4154,4155,4156,4157,4158,4159,4160,4161,4162,4163,4164,4165,4166,4167,4168,4169,4170,4171,4172,4173,4174,4175,4176,4177,4178,4179,4180,4181,4182,4183,4184,4185,4186,4187,4188,4189,4190,4191,4192,4193,4194,4195,4196,4197,4198,4199,4200,4201,4202,4203,4204,4205,4206,4207,4208,4209,4210,4211,4212,4213,4214,4215,4216,4217,4218,4219,4220,4221,4222,4223,4224,4225,4226,4227,4228,4229,4230,4231,4232,4233,4234,4235,4236,4237,4238,4239,4240,4241,4242,4243,4244,4245,4246,4247,4248,4249,4250,4251,4252,4253,4254,4255,4256,4257) ORDER BY SortPos; 
06/13/2023 07:20:15 PM PK_QuestionType: 17
06/13/2023 07:20:15 PM PK_QuestionType: 17
06/13/2023 07:20:15 PM PK_QuestionType: 43
06/13/2023 07:20:15 PM PK_QuestionType: 17
06/13/2023 07:20:15 PM PK_QuestionType: 17
06/13/2023 07:20:15 PM PK_QuestionType: 17
06/13/2023 07:20:15 PM PK_QuestionType: 17
06/13/2023 07:20:15 PM PK_QuestionType: 43
06/13/2023 07:20:15 PM PK_QuestionType: 17
06/13/2023 07:20:15 PM PK_QuestionType: 43
06/13/2023 07:20:15 PM PK_QuestionType: 17
06/13/2023 07:20:15 PM PK_QuestionType: 17
06/13/2023 07:20:15 PM PK_QuestionType: 17
06/13/2023 07:20:15 PM PK_QuestionType: 17
06/13/2023 07:20:15 PM PK_QuestionType: 17
06/13/2023 07:20:15 PM PK_QuestionType: 17
06/13/2023 07:20:15 PM PK_QuestionType: 17
06/13/2023 07:20:15 PM PK_QuestionType: 17
06/13/2023 07:20:15 PM PK_QuestionType: 17
06/13/2023 07:20:15 PM PK_QuestionType: 17
06/13/2023 07:20:15 PM PK_QuestionType: 17
06/13/2023 07:20:15 PM PK_QuestionType: 17
06/13/2023 07:20:15 PM PK_QuestionType: 17
06/13/2023 07:20:15 PM PK_QuestionType: 17
06/13/2023 07:20:15 PM PK_QuestionType: 17
06/13/2023 07:20:15 PM PK_QuestionType: 17
06/13/2023 07:20:15 PM PK_QuestionType: 17
06/13/2023 07:20:15 PM PK_QuestionType: 17
06/13/2023 07:20:15 PM PK_QuestionType: 17
06/13/2023 07:20:15 PM PK_QuestionType: 17
06/13/2023 07:20:15 PM PK_QuestionType: 17
06/13/2023 07:20:15 PM PK_QuestionType: 17
06/13/2023 07:20:15 PM PK_QuestionType: 17
06/13/2023 07:20:15 PM PK_QuestionType: 17
06/13/2023 07:20:15 PM PK_QuestionType: 17
06/13/2023 07:20:15 PM PK_QuestionType: 17
06/13/2023 07:20:15 PM PK_QuestionType: 17
06/13/2023 07:20:15 PM PK_QuestionType: 17
06/13/2023 07:20:15 PM PK_QuestionType: 17
06/13/2023 07:20:15 PM PK_QuestionType: 17
06/13/2023 07:20:15 PM PK_QuestionType: 17
06/13/2023 07:20:15 PM PK_QuestionType: 17
06/13/2023 07:20:15 PM PK_QuestionType: 17
06/13/2023 07:20:15 PM PK_QuestionType: 17
06/13/2023 07:20:15 PM PK_QuestionType: 17
06/13/2023 07:20:15 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 43
06/13/2023 07:20:16 PM PK_QuestionType: 43
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 43
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 43
06/13/2023 07:20:16 PM PK_QuestionType: 43
06/13/2023 07:20:16 PM PK_QuestionType: 43
06/13/2023 07:20:16 PM PK_QuestionType: 43
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 43
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 43
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 43
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 43
06/13/2023 07:20:16 PM PK_QuestionType: 43
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 43
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 43
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 43
06/13/2023 07:20:16 PM PK_QuestionType: 43
06/13/2023 07:20:16 PM PK_QuestionType: 2
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 2
06/13/2023 07:20:16 PM PK_QuestionType: 43
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 43
06/13/2023 07:20:16 PM PK_QuestionType: 43
06/13/2023 07:20:16 PM PK_QuestionType: 43
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 43
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:16 PM PK_QuestionType: 17
06/13/2023 07:20:59 PM 
            SELECT DISTINCT
            ISNULL(QID, '') [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4028,4029,4030,4031,4032,4033,4034,4035,4036,4037,4038,4039,4040,4041,4042,4043,4044,4045,4046,4047,4048,4049,4050,4051,4052,4053,4054,4055,4056,4057,4058,4059,4060,4061,4062,4063,4064,4065,4066,4067,4068,4069,4070,4071,4072,4073,4074,4075,4076,4077,4078,4079,4080,4081,4082,4083,4084,4085,4086,4087,4088,4089,4090,4091,4092,4093,4094,4095,4096,4097,4098,4099,4100,4101,4102,4103,4104,4105,4106,4107,4108,4109,4110,4111,4112,4113,4114,4115,4116,4117,4118,4119,4120,4121,4122,4123,4124,4125,4126,4127,4128,4129,4130,4131,4132,4133,4134,4135,4136,4137,4138,4139,4140,4141,4142,4143,4144,4145,4146,4147,4148,4149,4150,4151,4152,4153,4154,4155,4156,4157,4158,4159,4160,4161,4162,4163,4164,4165,4166,4167,4168,4169,4170,4171,4172,4173,4174,4175,4176,4177,4178,4179,4180,4181,4182,4183,4184,4185,4186,4187,4188,4189,4190,4191,4192,4193,4194,4195,4196,4197,4198,4199,4200,4201,4202,4203,4204,4205,4206,4207,4208,4209,4210,4211,4212,4213,4214,4215,4216,4217,4218,4219,4220,4221,4222,4223,4224,4225,4226,4227,4228,4229,4230,4231,4232,4233,4234,4235,4236,4237,4238,4239,4240,4241,4242,4243,4244,4245,4246,4247,4248,4249,4250,4251,4252,4253,4254,4255,4256,4257) ORDER BY SortPos; 
06/13/2023 07:21:00 PM PK_QuestionType: 17
06/13/2023 07:21:13 PM 
            SELECT DISTINCT
            ISNULL(QID, '') [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4028,4029,4030,4031,4032,4033,4034,4035,4036,4037,4038,4039,4040,4041,4042,4043,4044,4045,4046,4047,4048,4049,4050,4051,4052,4053,4054,4055,4056,4057,4058,4059,4060,4061,4062,4063,4064,4065,4066,4067,4068,4069,4070,4071,4072,4073,4074,4075,4076,4077,4078,4079,4080,4081,4082,4083,4084,4085,4086,4087,4088,4089,4090,4091,4092,4093,4094,4095,4096,4097,4098,4099,4100,4101,4102,4103,4104,4105,4106,4107,4108,4109,4110,4111,4112,4113,4114,4115,4116,4117,4118,4119,4120,4121,4122,4123,4124,4125,4126,4127,4128,4129,4130,4131,4132,4133,4134,4135,4136,4137,4138,4139,4140,4141,4142,4143,4144,4145,4146,4147,4148,4149,4150,4151,4152,4153,4154,4155,4156,4157,4158,4159,4160,4161,4162,4163,4164,4165,4166,4167,4168,4169,4170,4171,4172,4173,4174,4175,4176,4177,4178,4179,4180,4181,4182,4183,4184,4185,4186,4187,4188,4189,4190,4191,4192,4193,4194,4195,4196,4197,4198,4199,4200,4201,4202,4203,4204,4205,4206,4207,4208,4209,4210,4211,4212,4213,4214,4215,4216,4217,4218,4219,4220,4221,4222,4223,4224,4225,4226,4227,4228,4229,4230,4231,4232,4233,4234,4235,4236,4237,4238,4239,4240,4241,4242,4243,4244,4245,4246,4247,4248,4249,4250,4251,4252,4253,4254,4255,4256,4257) ORDER BY SortPos; 
06/13/2023 07:21:13 PM PK_QuestionType: 17
06/13/2023 07:21:13 PM PK_QuestionType: 17
06/13/2023 07:21:13 PM PK_QuestionType: 43
06/13/2023 07:21:13 PM PK_QuestionType: 17
06/13/2023 07:21:13 PM PK_QuestionType: 17
06/13/2023 07:21:13 PM PK_QuestionType: 17
06/13/2023 07:21:13 PM PK_QuestionType: 17
06/13/2023 07:21:13 PM PK_QuestionType: 43
06/13/2023 07:21:13 PM PK_QuestionType: 17
06/13/2023 07:21:13 PM PK_QuestionType: 43
06/13/2023 07:21:13 PM PK_QuestionType: 17
06/13/2023 07:21:13 PM PK_QuestionType: 17
06/13/2023 07:21:13 PM PK_QuestionType: 17
06/13/2023 07:21:13 PM PK_QuestionType: 17
06/13/2023 07:21:13 PM PK_QuestionType: 17
06/13/2023 07:21:13 PM PK_QuestionType: 17
06/13/2023 07:21:13 PM PK_QuestionType: 17
06/13/2023 07:21:13 PM PK_QuestionType: 17
06/13/2023 07:21:13 PM PK_QuestionType: 17
06/13/2023 07:21:13 PM PK_QuestionType: 17
06/13/2023 07:21:13 PM PK_QuestionType: 17
06/13/2023 07:21:13 PM PK_QuestionType: 17
06/13/2023 07:21:13 PM PK_QuestionType: 17
06/13/2023 07:21:13 PM PK_QuestionType: 17
06/13/2023 07:21:13 PM PK_QuestionType: 17
06/13/2023 07:21:13 PM PK_QuestionType: 17
06/13/2023 07:21:13 PM PK_QuestionType: 17
06/13/2023 07:21:13 PM PK_QuestionType: 17
06/13/2023 07:21:13 PM PK_QuestionType: 17
06/13/2023 07:21:13 PM PK_QuestionType: 17
06/13/2023 07:21:13 PM PK_QuestionType: 17
06/13/2023 07:21:13 PM PK_QuestionType: 17
06/13/2023 07:21:13 PM PK_QuestionType: 17
06/13/2023 07:21:13 PM PK_QuestionType: 17
06/13/2023 07:21:13 PM PK_QuestionType: 17
06/13/2023 07:21:13 PM PK_QuestionType: 17
06/13/2023 07:21:13 PM PK_QuestionType: 17
06/13/2023 07:21:13 PM PK_QuestionType: 17
06/13/2023 07:21:13 PM PK_QuestionType: 17
06/13/2023 07:21:13 PM PK_QuestionType: 17
06/13/2023 07:21:13 PM PK_QuestionType: 17
06/13/2023 07:21:13 PM PK_QuestionType: 17
06/13/2023 07:21:13 PM PK_QuestionType: 17
06/13/2023 07:21:13 PM PK_QuestionType: 17
06/13/2023 07:21:13 PM PK_QuestionType: 17
06/13/2023 07:21:13 PM PK_QuestionType: 17
06/13/2023 07:21:13 PM PK_QuestionType: 17
06/13/2023 07:21:13 PM PK_QuestionType: 17
06/13/2023 07:21:13 PM PK_QuestionType: 17
06/13/2023 07:21:13 PM PK_QuestionType: 17
06/13/2023 07:21:13 PM PK_QuestionType: 17
06/13/2023 07:21:13 PM PK_QuestionType: 17
06/13/2023 07:21:13 PM PK_QuestionType: 17
06/13/2023 07:21:13 PM PK_QuestionType: 17
06/13/2023 07:21:13 PM PK_QuestionType: 17
06/13/2023 07:21:13 PM PK_QuestionType: 17
06/13/2023 07:21:13 PM PK_QuestionType: 17
06/13/2023 07:21:13 PM PK_QuestionType: 17
06/13/2023 07:21:13 PM PK_QuestionType: 17
06/13/2023 07:21:13 PM PK_QuestionType: 17
06/13/2023 07:21:13 PM PK_QuestionType: 17
06/13/2023 07:21:13 PM PK_QuestionType: 17
06/13/2023 07:21:13 PM PK_QuestionType: 43
06/13/2023 07:21:13 PM PK_QuestionType: 43
06/13/2023 07:21:13 PM PK_QuestionType: 17
06/13/2023 07:21:13 PM PK_QuestionType: 17
06/13/2023 07:21:13 PM PK_QuestionType: 17
06/13/2023 07:21:13 PM PK_QuestionType: 17
06/13/2023 07:21:13 PM PK_QuestionType: 17
06/13/2023 07:21:13 PM PK_QuestionType: 17
06/13/2023 07:21:13 PM PK_QuestionType: 17
06/13/2023 07:21:13 PM PK_QuestionType: 17
06/13/2023 07:21:13 PM PK_QuestionType: 43
06/13/2023 07:21:13 PM PK_QuestionType: 17
06/13/2023 07:21:13 PM PK_QuestionType: 17
06/13/2023 07:21:13 PM PK_QuestionType: 43
06/13/2023 07:21:13 PM PK_QuestionType: 43
06/13/2023 07:21:13 PM PK_QuestionType: 43
06/13/2023 07:21:13 PM PK_QuestionType: 43
06/13/2023 07:21:13 PM PK_QuestionType: 17
06/13/2023 07:21:13 PM PK_QuestionType: 17
06/13/2023 07:21:13 PM PK_QuestionType: 43
06/13/2023 07:21:13 PM PK_QuestionType: 17
06/13/2023 07:21:13 PM PK_QuestionType: 17
06/13/2023 07:21:13 PM PK_QuestionType: 17
06/13/2023 07:21:13 PM PK_QuestionType: 43
06/13/2023 07:21:13 PM PK_QuestionType: 17
06/13/2023 07:21:13 PM PK_QuestionType: 17
06/13/2023 07:21:13 PM PK_QuestionType: 17
06/13/2023 07:21:13 PM PK_QuestionType: 17
06/13/2023 07:21:13 PM PK_QuestionType: 17
06/13/2023 07:21:13 PM PK_QuestionType: 43
06/13/2023 07:21:13 PM PK_QuestionType: 17
06/13/2023 07:21:13 PM PK_QuestionType: 17
06/13/2023 07:21:13 PM PK_QuestionType: 17
06/13/2023 07:21:13 PM PK_QuestionType: 17
06/13/2023 07:21:13 PM PK_QuestionType: 17
06/13/2023 07:21:13 PM PK_QuestionType: 17
06/13/2023 07:21:13 PM PK_QuestionType: 17
06/13/2023 07:21:13 PM PK_QuestionType: 17
06/13/2023 07:21:13 PM PK_QuestionType: 17
06/13/2023 07:21:13 PM PK_QuestionType: 43
06/13/2023 07:21:13 PM PK_QuestionType: 43
06/13/2023 07:21:13 PM PK_QuestionType: 17
06/13/2023 07:21:13 PM PK_QuestionType: 17
06/13/2023 07:21:13 PM PK_QuestionType: 17
06/13/2023 07:21:13 PM PK_QuestionType: 17
06/13/2023 07:21:13 PM PK_QuestionType: 17
06/13/2023 07:21:13 PM PK_QuestionType: 17
06/13/2023 07:21:13 PM PK_QuestionType: 17
06/13/2023 07:21:13 PM PK_QuestionType: 17
06/13/2023 07:21:14 PM PK_QuestionType: 17
06/13/2023 07:21:14 PM PK_QuestionType: 17
06/13/2023 07:21:14 PM PK_QuestionType: 43
06/13/2023 07:21:14 PM PK_QuestionType: 17
06/13/2023 07:21:14 PM PK_QuestionType: 17
06/13/2023 07:21:14 PM PK_QuestionType: 17
06/13/2023 07:21:14 PM PK_QuestionType: 17
06/13/2023 07:21:14 PM PK_QuestionType: 17
06/13/2023 07:21:14 PM PK_QuestionType: 17
06/13/2023 07:21:14 PM PK_QuestionType: 17
06/13/2023 07:21:14 PM PK_QuestionType: 43
06/13/2023 07:21:14 PM PK_QuestionType: 17
06/13/2023 07:21:14 PM PK_QuestionType: 17
06/13/2023 07:21:14 PM PK_QuestionType: 43
06/13/2023 07:21:14 PM PK_QuestionType: 43
06/13/2023 07:21:14 PM PK_QuestionType: 2
06/13/2023 07:21:14 PM PK_QuestionType: 17
06/13/2023 07:21:14 PM PK_QuestionType: 17
06/13/2023 07:21:14 PM PK_QuestionType: 2
06/13/2023 07:21:14 PM PK_QuestionType: 43
06/13/2023 07:21:14 PM PK_QuestionType: 17
06/13/2023 07:21:14 PM PK_QuestionType: 17
06/13/2023 07:21:14 PM PK_QuestionType: 17
06/13/2023 07:21:14 PM PK_QuestionType: 17
06/13/2023 07:21:14 PM PK_QuestionType: 17
06/13/2023 07:21:14 PM PK_QuestionType: 17
06/13/2023 07:21:14 PM PK_QuestionType: 17
06/13/2023 07:21:14 PM PK_QuestionType: 17
06/13/2023 07:21:14 PM PK_QuestionType: 17
06/13/2023 07:21:14 PM PK_QuestionType: 17
06/13/2023 07:21:14 PM PK_QuestionType: 43
06/13/2023 07:21:14 PM PK_QuestionType: 43
06/13/2023 07:21:14 PM PK_QuestionType: 43
06/13/2023 07:21:14 PM PK_QuestionType: 17
06/13/2023 07:21:14 PM PK_QuestionType: 17
06/13/2023 07:21:14 PM PK_QuestionType: 17
06/13/2023 07:21:14 PM PK_QuestionType: 17
06/13/2023 07:21:14 PM PK_QuestionType: 17
06/13/2023 07:21:14 PM PK_QuestionType: 17
06/13/2023 07:21:14 PM PK_QuestionType: 17
06/13/2023 07:21:14 PM PK_QuestionType: 17
06/13/2023 07:21:14 PM PK_QuestionType: 17
06/13/2023 07:21:14 PM PK_QuestionType: 17
06/13/2023 07:21:14 PM PK_QuestionType: 17
06/13/2023 07:21:14 PM PK_QuestionType: 17
06/13/2023 07:21:14 PM PK_QuestionType: 17
06/13/2023 07:21:14 PM PK_QuestionType: 17
06/13/2023 07:21:14 PM PK_QuestionType: 17
06/13/2023 07:21:14 PM PK_QuestionType: 17
06/13/2023 07:21:14 PM PK_QuestionType: 17
06/13/2023 07:21:14 PM PK_QuestionType: 17
06/13/2023 07:21:14 PM PK_QuestionType: 17
06/13/2023 07:21:14 PM PK_QuestionType: 17
06/13/2023 07:21:14 PM PK_QuestionType: 17
06/13/2023 07:21:14 PM PK_QuestionType: 17
06/13/2023 07:21:14 PM PK_QuestionType: 17
06/13/2023 07:21:14 PM PK_QuestionType: 17
06/13/2023 07:21:14 PM PK_QuestionType: 17
06/13/2023 07:21:14 PM PK_QuestionType: 17
06/13/2023 07:21:14 PM PK_QuestionType: 17
06/13/2023 07:21:14 PM PK_QuestionType: 17
06/13/2023 07:21:14 PM PK_QuestionType: 17
06/13/2023 07:21:14 PM PK_QuestionType: 43
06/13/2023 07:21:14 PM PK_QuestionType: 17
06/13/2023 07:21:14 PM PK_QuestionType: 17
06/13/2023 07:21:14 PM PK_QuestionType: 17
06/13/2023 07:21:14 PM PK_QuestionType: 17
06/13/2023 07:21:14 PM PK_QuestionType: 17
06/13/2023 07:21:14 PM PK_QuestionType: 17
06/13/2023 07:21:14 PM PK_QuestionType: 17
06/13/2023 07:21:14 PM PK_QuestionType: 17
06/13/2023 07:21:14 PM PK_QuestionType: 17
06/13/2023 07:21:14 PM PK_QuestionType: 17
06/13/2023 07:28:55 PM 
            SELECT DISTINCT
            ISNULL(QID, '') [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4028,4029,4030,4031,4032,4033,4034,4035,4036,4037,4038,4039,4040,4041,4042,4043,4044,4045,4046,4047,4048,4049,4050,4051,4052,4053,4054,4055,4056,4057,4058,4059,4060,4061,4062,4063,4064,4065,4066,4067,4068,4069,4070,4071,4072,4073,4074,4075,4076,4077,4078,4079,4080,4081,4082,4083,4084,4085,4086,4087,4088,4089,4090,4091,4092,4093,4094,4095,4096,4097,4098,4099,4100,4101,4102,4103,4104,4105,4106,4107,4108,4109,4110,4111,4112,4113,4114,4115,4116,4117,4118,4119,4120,4121,4122,4123,4124,4125,4126,4127,4128,4129,4130,4131,4132,4133,4134,4135,4136,4137,4138,4139,4140,4141,4142,4143,4144,4145,4146,4147,4148,4149,4150,4151,4152,4153,4154,4155,4156,4157,4158,4159,4160,4161,4162,4163,4164,4165,4166,4167,4168,4169,4170,4171,4172,4173,4174,4175,4176,4177,4178,4179,4180,4181,4182,4183,4184,4185,4186,4187,4188,4189,4190,4191,4192,4193,4194,4195,4196,4197,4198,4199,4200,4201,4202,4203,4204,4205,4206,4207,4208,4209,4210,4211,4212,4213,4214,4215,4216,4217,4218,4219,4220,4221,4222,4223,4224,4225,4226,4227,4228,4229,4230,4231,4232,4233,4234,4235,4236,4237,4238,4239,4240,4241,4242,4243,4244,4245,4246,4247,4248,4249,4250,4251,4252,4253,4254,4255,4256,4257) ORDER BY SortPos; 
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 43
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 43
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 43
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 43
06/13/2023 07:28:56 PM PK_QuestionType: 43
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 43
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 43
06/13/2023 07:28:56 PM PK_QuestionType: 43
06/13/2023 07:28:56 PM PK_QuestionType: 43
06/13/2023 07:28:56 PM PK_QuestionType: 43
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 43
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 43
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 43
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 43
06/13/2023 07:28:56 PM PK_QuestionType: 43
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 43
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 43
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 43
06/13/2023 07:28:56 PM PK_QuestionType: 43
06/13/2023 07:28:56 PM PK_QuestionType: 2
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 2
06/13/2023 07:28:56 PM PK_QuestionType: 43
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 43
06/13/2023 07:28:56 PM PK_QuestionType: 43
06/13/2023 07:28:56 PM PK_QuestionType: 43
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 43
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:28:56 PM PK_QuestionType: 17
06/13/2023 07:40:06 PM init
06/13/2023 07:40:17 PM 
            SELECT DISTINCT
            ISNULL(QID, '') [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4028,4029,4030,4031,4032,4033,4034,4035,4036,4037,4038,4039,4040,4041,4042,4043,4044,4045,4046,4047,4048,4049,4050,4051,4052,4053,4054,4055,4056,4057,4058,4059,4060,4061,4062,4063,4064,4065,4066,4067,4068,4069,4070,4071,4072,4073,4074,4075,4076,4077,4078,4079,4080,4081,4082,4083,4084,4085,4086,4087,4088,4089,4090,4091,4092,4093,4094,4095,4096,4097,4098,4099,4100,4101,4102,4103,4104,4105,4106,4107,4108,4109,4110,4111,4112,4113,4114,4115,4116,4117,4118,4119,4120,4121,4122,4123,4124,4125,4126,4127,4128,4129,4130,4131,4132,4133,4134,4135,4136,4137,4138,4139,4140,4141,4142,4143,4144,4145,4146,4147,4148,4149,4150,4151,4152,4153,4154,4155,4156,4157,4158,4159,4160,4161,4162,4163,4164,4165,4166,4167,4168,4169,4170,4171,4172,4173,4174,4175,4176,4177,4178,4179,4180,4181,4182,4183,4184,4185,4186,4187,4188,4189,4190,4191,4192,4193,4194,4195,4196,4197,4198,4199,4200,4201,4202,4203,4204,4205,4206,4207,4208,4209,4210,4211,4212,4213,4214,4215,4216,4217,4218,4219,4220,4221,4222,4223,4224,4225,4226,4227,4228,4229,4230,4231,4232,4233,4234,4235,4236,4237,4238,4239,4240,4241,4242,4243,4244,4245,4246,4247,4248,4249,4250,4251,4252,4253,4254,4255,4256,4257) ORDER BY SortPos; 
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 43
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 43
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 43
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 43
06/13/2023 07:40:17 PM PK_QuestionType: 43
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 43
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 43
06/13/2023 07:40:17 PM PK_QuestionType: 43
06/13/2023 07:40:17 PM PK_QuestionType: 43
06/13/2023 07:40:17 PM PK_QuestionType: 43
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 43
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 43
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 43
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 43
06/13/2023 07:40:17 PM PK_QuestionType: 43
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 43
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 43
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 43
06/13/2023 07:40:17 PM PK_QuestionType: 43
06/13/2023 07:40:17 PM PK_QuestionType: 2
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 2
06/13/2023 07:40:17 PM PK_QuestionType: 43
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 43
06/13/2023 07:40:17 PM PK_QuestionType: 43
06/13/2023 07:40:17 PM PK_QuestionType: 43
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 43
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 07:40:17 PM PK_QuestionType: 17
06/13/2023 08:06:05 PM init
06/13/2023 08:06:16 PM 
            SELECT DISTINCT
            ISNULL(QID, '') [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4028,4029,4030,4031,4032,4033,4034,4035,4036,4037,4038,4039,4040,4041,4042,4043,4044,4045,4046,4047,4048,4049,4050,4051,4052,4053,4054,4055,4056,4057,4058,4059,4060,4061,4062,4063,4064,4065,4066,4067,4068,4069,4070,4071,4072,4073,4074,4075,4076,4077,4078,4079,4080,4081,4082,4083,4084,4085,4086,4087,4088,4089,4090,4091,4092,4093,4094,4095,4096,4097,4098,4099,4100,4101,4102,4103,4104,4105,4106,4107,4108,4109,4110,4111,4112,4113,4114,4115,4116,4117,4118,4119,4120,4121,4122,4123,4124,4125,4126,4127,4128,4129,4130,4131,4132,4133,4134,4135,4136,4137,4138,4139,4140,4141,4142,4143,4144,4145,4146,4147,4148,4149,4150,4151,4152,4153,4154,4155,4156,4157,4158,4159,4160,4161,4162,4163,4164,4165,4166,4167,4168,4169,4170,4171,4172,4173,4174,4175,4176,4177,4178,4179,4180,4181,4182,4183,4184,4185,4186,4187,4188,4189,4190,4191,4192,4193,4194,4195,4196,4197,4198,4199,4200,4201,4202,4203,4204,4205,4206,4207,4208,4209,4210,4211,4212,4213,4214,4215,4216,4217,4218,4219,4220,4221,4222,4223,4224,4225,4226,4227,4228,4229,4230,4231,4232,4233,4234,4235,4236,4237,4238,4239,4240,4241,4242,4243,4244,4245,4246,4247,4248,4249,4250,4251,4252,4253,4254,4255,4256,4257) ORDER BY SortPos; 
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 43
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 43
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 43
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 43
06/13/2023 08:06:16 PM PK_QuestionType: 43
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 43
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 43
06/13/2023 08:06:16 PM PK_QuestionType: 43
06/13/2023 08:06:16 PM PK_QuestionType: 43
06/13/2023 08:06:16 PM PK_QuestionType: 43
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 43
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 43
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 43
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 43
06/13/2023 08:06:16 PM PK_QuestionType: 43
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 43
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 43
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 43
06/13/2023 08:06:16 PM PK_QuestionType: 43
06/13/2023 08:06:16 PM PK_QuestionType: 2
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 2
06/13/2023 08:06:16 PM PK_QuestionType: 43
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 43
06/13/2023 08:06:16 PM PK_QuestionType: 43
06/13/2023 08:06:16 PM PK_QuestionType: 43
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 43
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:06:16 PM PK_QuestionType: 17
06/13/2023 08:17:50 PM init
06/14/2023 08:08:57 AM init
06/14/2023 08:08:57 AM Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
06/14/2023 08:08:57 AM NumExpr defaulting to 8 threads.
06/14/2023 08:17:45 AM 
            SELECT DISTINCT
            ISNULL(QID, '') [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4028,4029,4030,4031,4032,4033,4034,4035,4036,4037,4038,4039,4040,4041,4042,4043,4044,4045,4046,4047,4048,4049,4050,4051,4052,4053,4054,4055,4056,4057,4058,4059,4060,4061,4062,4063,4064,4065,4066,4067,4068,4069,4070,4071,4072,4073,4074,4075,4076,4077,4078,4079,4080,4081,4082,4083,4084,4085,4086,4087,4088,4089,4090,4091,4092,4093,4094,4095,4096,4097,4098,4099,4100,4101,4102,4103,4104,4105,4106,4107,4108,4109,4110,4111,4112,4113,4114,4115,4116,4117,4118,4119,4120,4121,4122,4123,4124,4125,4126,4127,4128,4129,4130,4131,4132,4133,4134,4135,4136,4137,4138,4139,4140,4141,4142,4143,4144,4145,4146,4147,4148,4149,4150,4151,4152,4153,4154,4155,4156,4157,4158,4159,4160,4161,4162,4163,4164,4165,4166,4167,4168,4169,4170,4171,4172,4173,4174,4175,4176,4177,4178,4179,4180,4181,4182,4183,4184,4185,4186,4187,4188,4189,4190,4191,4192,4193,4194,4195,4196,4197,4198,4199,4200,4201,4202,4203,4204,4205,4206,4207,4208,4209,4210,4211,4212,4213,4214,4215,4216,4217,4218,4219,4220,4221,4222,4223,4224,4225,4226,4227,4228,4229,4230,4231,4232,4233,4234,4235,4236,4237,4238,4239,4240,4241,4242,4243,4244,4245,4246,4247,4248,4249,4250,4251,4252,4253,4254,4255,4256,4257) ORDER BY SortPos; 
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 2
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 2
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:45 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM 
            SELECT DISTINCT
            ISNULL(QID, '') [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4028,4029,4030,4031,4032,4033,4034,4035,4036,4037,4038,4039,4040,4041,4042,4043,4044,4045,4046,4047,4048,4049,4050,4051,4052,4053,4054,4055,4056,4057,4058,4059,4060,4061,4062,4063,4064,4065,4066,4067,4068,4069,4070,4071,4072,4073,4074,4075,4076,4077,4078,4079,4080,4081,4082,4083,4084,4085,4086,4087,4088,4089,4090,4091,4092,4093,4094,4095,4096,4097,4098,4099,4100,4101,4102,4103,4104,4105,4106,4107,4108,4109,4110,4111,4112,4113,4114,4115,4116,4117,4118,4119,4120,4121,4122,4123,4124,4125,4126,4127,4128,4129,4130,4131,4132,4133,4134,4135,4136,4137,4138,4139,4140,4141,4142,4143,4144,4145,4146,4147,4148,4149,4150,4151,4152,4153,4154,4155,4156,4157,4158,4159,4160,4161,4162,4163,4164,4165,4166,4167,4168,4169,4170,4171,4172,4173,4174,4175,4176,4177,4178,4179,4180,4181,4182,4183,4184,4185,4186,4187,4188,4189,4190,4191,4192,4193,4194,4195,4196,4197,4198,4199,4200,4201,4202,4203,4204,4205,4206,4207,4208,4209,4210,4211,4212,4213,4214,4215,4216,4217,4218,4219,4220,4221,4222,4223,4224,4225,4226,4227,4228,4229,4230,4231,4232,4233,4234,4235,4236,4237,4238,4239,4240,4241,4242,4243,4244,4245,4246,4247,4248,4249,4250,4251,4252,4253,4254,4255,4256,4257) ORDER BY SortPos; 
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 2
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 2
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 08:17:50 AM PK_QuestionType: 17
06/14/2023 09:02:23 AM init
06/14/2023 09:27:38 AM 
            SELECT DISTINCT
            ISNULL(QID, '') [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4028,4029,4030,4031,4032,4033,4034,4035,4036,4037,4038,4039,4040,4041,4042,4043,4044,4045,4046,4047,4048,4049,4050,4051,4052,4053,4054,4055,4056,4057,4058,4059,4060,4061,4062,4063,4064,4065,4066,4067,4068,4069,4070,4071,4072,4073,4074,4075,4076,4077,4078,4079,4080,4081,4082,4083,4084,4085,4086,4087,4088,4089,4090,4091,4092,4093,4094,4095,4096,4097,4098,4099,4100,4101,4102,4103,4104,4105,4106,4107,4108,4109,4110,4111,4112,4113,4114,4115,4116,4117,4118,4119,4120,4121,4122,4123,4124,4125,4126,4127,4128,4129,4130,4131,4132,4133,4134,4135,4136,4137,4138,4139,4140,4141,4142,4143,4144,4145,4146,4147,4148,4149,4150,4151,4152,4153,4154,4155,4156,4157,4158,4159,4160,4161,4162,4163,4164,4165,4166,4167,4168,4169,4170,4171,4172,4173,4174,4175,4176,4177,4178,4179,4180,4181,4182,4183,4184,4185,4186,4187,4188,4189,4190,4191,4192,4193,4194,4195,4196,4197,4198,4199,4200,4201,4202,4203,4204,4205,4206,4207,4208,4209,4210,4211,4212,4213,4214,4215,4216,4217,4218,4219,4220,4221,4222,4223,4224,4225,4226,4227,4228,4229,4230,4231,4232,4233,4234,4235,4236,4237,4238,4239,4240,4241,4242,4243,4244,4245,4246,4247,4248,4249,4250,4251,4252,4253,4254,4255,4256,4257) ORDER BY SortPos; 
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 2
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 2
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:27:39 AM PK_QuestionType: 17
06/14/2023 09:32:09 AM 
            SELECT DISTINCT
            ISNULL(QID, '') [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4028,4029,4030,4031,4032,4033,4034,4035,4036,4037,4038,4039,4040,4041,4042,4043,4044,4045,4046,4047,4048,4049,4050,4051,4052,4053,4054,4055,4056,4057,4058,4059,4060,4061,4062,4063,4064,4065,4066,4067,4068,4069,4070,4071,4072,4073,4074,4075,4076,4077,4078,4079,4080,4081,4082,4083,4084,4085,4086,4087,4088,4089,4090,4091,4092,4093,4094,4095,4096,4097,4098,4099,4100,4101,4102,4103,4104,4105,4106,4107,4108,4109,4110,4111,4112,4113,4114,4115,4116,4117,4118,4119,4120,4121,4122,4123,4124,4125,4126,4127,4128,4129,4130,4131,4132,4133,4134,4135,4136,4137,4138,4139,4140,4141,4142,4143,4144,4145,4146,4147,4148,4149,4150,4151,4152,4153,4154,4155,4156,4157,4158,4159,4160,4161,4162,4163,4164,4165,4166,4167,4168,4169,4170,4171,4172,4173,4174,4175,4176,4177,4178,4179,4180,4181,4182,4183,4184,4185,4186,4187,4188,4189,4190,4191,4192,4193,4194,4195,4196,4197,4198,4199,4200,4201,4202,4203,4204,4205,4206,4207,4208,4209,4210,4211,4212,4213,4214,4215,4216,4217,4218,4219,4220,4221,4222,4223,4224,4225,4226,4227,4228,4229,4230,4231,4232,4233,4234,4235,4236,4237,4238,4239,4240,4241,4242,4243,4244,4245,4246,4247,4248,4249,4250,4251,4252,4253,4254,4255,4256,4257) ORDER BY SortPos; 
06/14/2023 09:33:16 AM 
            SELECT DISTINCT
            ISNULL(QID, '') [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4028,4029,4030,4031,4032,4033,4034,4035,4036,4037,4038,4039,4040,4041,4042,4043,4044,4045,4046,4047,4048,4049,4050,4051,4052,4053,4054,4055,4056,4057,4058,4059,4060,4061,4062,4063,4064,4065,4066,4067,4068,4069,4070,4071,4072,4073,4074,4075,4076,4077,4078,4079,4080,4081,4082,4083,4084,4085,4086,4087,4088,4089,4090,4091,4092,4093,4094,4095,4096,4097,4098,4099,4100,4101,4102,4103,4104,4105,4106,4107,4108,4109,4110,4111,4112,4113,4114,4115,4116,4117,4118,4119,4120,4121,4122,4123,4124,4125,4126,4127,4128,4129,4130,4131,4132,4133,4134,4135,4136,4137,4138,4139,4140,4141,4142,4143,4144,4145,4146,4147,4148,4149,4150,4151,4152,4153,4154,4155,4156,4157,4158,4159,4160,4161,4162,4163,4164,4165,4166,4167,4168,4169,4170,4171,4172,4173,4174,4175,4176,4177,4178,4179,4180,4181,4182,4183,4184,4185,4186,4187,4188,4189,4190,4191,4192,4193,4194,4195,4196,4197,4198,4199,4200,4201,4202,4203,4204,4205,4206,4207,4208,4209,4210,4211,4212,4213,4214,4215,4216,4217,4218,4219,4220,4221,4222,4223,4224,4225,4226,4227,4228,4229,4230,4231,4232,4233,4234,4235,4236,4237,4238,4239,4240,4241,4242,4243,4244,4245,4246,4247,4248,4249,4250,4251,4252,4253,4254,4255,4256,4257) ORDER BY SortPos; 
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 2
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 2
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:33:17 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM 
            SELECT DISTINCT
            ISNULL(QID, '') [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4028,4029,4030,4031,4032,4033,4034,4035,4036,4037,4038,4039,4040,4041,4042,4043,4044,4045,4046,4047,4048,4049,4050,4051,4052,4053,4054,4055,4056,4057,4058,4059,4060,4061,4062,4063,4064,4065,4066,4067,4068,4069,4070,4071,4072,4073,4074,4075,4076,4077,4078,4079,4080,4081,4082,4083,4084,4085,4086,4087,4088,4089,4090,4091,4092,4093,4094,4095,4096,4097,4098,4099,4100,4101,4102,4103,4104,4105,4106,4107,4108,4109,4110,4111,4112,4113,4114,4115,4116,4117,4118,4119,4120,4121,4122,4123,4124,4125,4126,4127,4128,4129,4130,4131,4132,4133,4134,4135,4136,4137,4138,4139,4140,4141,4142,4143,4144,4145,4146,4147,4148,4149,4150,4151,4152,4153,4154,4155,4156,4157,4158,4159,4160,4161,4162,4163,4164,4165,4166,4167,4168,4169,4170,4171,4172,4173,4174,4175,4176,4177,4178,4179,4180,4181,4182,4183,4184,4185,4186,4187,4188,4189,4190,4191,4192,4193,4194,4195,4196,4197,4198,4199,4200,4201,4202,4203,4204,4205,4206,4207,4208,4209,4210,4211,4212,4213,4214,4215,4216,4217,4218,4219,4220,4221,4222,4223,4224,4225,4226,4227,4228,4229,4230,4231,4232,4233,4234,4235,4236,4237,4238,4239,4240,4241,4242,4243,4244,4245,4246,4247,4248,4249,4250,4251,4252,4253,4254,4255,4256,4257) ORDER BY SortPos; 
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 2
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 2
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:05 AM PK_QuestionType: 17
06/14/2023 09:34:06 AM PK_QuestionType: 17
06/14/2023 09:34:06 AM PK_QuestionType: 17
06/14/2023 09:34:06 AM PK_QuestionType: 17
06/14/2023 09:34:06 AM PK_QuestionType: 17
06/14/2023 09:34:06 AM PK_QuestionType: 17
06/14/2023 09:34:06 AM PK_QuestionType: 17
06/14/2023 09:34:06 AM PK_QuestionType: 17
06/14/2023 09:34:06 AM PK_QuestionType: 17
06/14/2023 09:34:06 AM PK_QuestionType: 17
06/14/2023 09:34:06 AM PK_QuestionType: 17
06/14/2023 09:34:06 AM PK_QuestionType: 17
06/14/2023 09:34:06 AM PK_QuestionType: 17
06/14/2023 09:34:06 AM PK_QuestionType: 17
06/14/2023 09:34:06 AM PK_QuestionType: 17
06/14/2023 09:34:06 AM PK_QuestionType: 17
06/14/2023 09:34:06 AM PK_QuestionType: 17
06/14/2023 09:34:06 AM PK_QuestionType: 17
06/14/2023 09:34:06 AM PK_QuestionType: 17
06/14/2023 09:34:06 AM PK_QuestionType: 17
06/14/2023 09:34:06 AM PK_QuestionType: 17
06/14/2023 09:34:06 AM PK_QuestionType: 17
06/14/2023 09:34:06 AM PK_QuestionType: 17
06/14/2023 09:34:06 AM PK_QuestionType: 17
06/14/2023 09:34:06 AM PK_QuestionType: 17
06/14/2023 09:34:06 AM PK_QuestionType: 17
06/14/2023 09:34:06 AM PK_QuestionType: 17
06/14/2023 09:34:06 AM PK_QuestionType: 17
06/14/2023 09:34:06 AM PK_QuestionType: 17
06/14/2023 09:34:06 AM PK_QuestionType: 17
06/14/2023 09:34:06 AM PK_QuestionType: 17
06/14/2023 09:34:06 AM PK_QuestionType: 17
06/14/2023 09:34:06 AM PK_QuestionType: 17
06/14/2023 09:34:06 AM PK_QuestionType: 17
06/14/2023 09:34:06 AM PK_QuestionType: 17
06/14/2023 09:34:06 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM 
            SELECT DISTINCT
            ISNULL(QID, '') [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4028,4029,4030,4031,4032,4033,4034,4035,4036,4037,4038,4039,4040,4041,4042,4043,4044,4045,4046,4047,4048,4049,4050,4051,4052,4053,4054,4055,4056,4057,4058,4059,4060,4061,4062,4063,4064,4065,4066,4067,4068,4069,4070,4071,4072,4073,4074,4075,4076,4077,4078,4079,4080,4081,4082,4083,4084,4085,4086,4087,4088,4089,4090,4091,4092,4093,4094,4095,4096,4097,4098,4099,4100,4101,4102,4103,4104,4105,4106,4107,4108,4109,4110,4111,4112,4113,4114,4115,4116,4117,4118,4119,4120,4121,4122,4123,4124,4125,4126,4127,4128,4129,4130,4131,4132,4133,4134,4135,4136,4137,4138,4139,4140,4141,4142,4143,4144,4145,4146,4147,4148,4149,4150,4151,4152,4153,4154,4155,4156,4157,4158,4159,4160,4161,4162,4163,4164,4165,4166,4167,4168,4169,4170,4171,4172,4173,4174,4175,4176,4177,4178,4179,4180,4181,4182,4183,4184,4185,4186,4187,4188,4189,4190,4191,4192,4193,4194,4195,4196,4197,4198,4199,4200,4201,4202,4203,4204,4205,4206,4207,4208,4209,4210,4211,4212,4213,4214,4215,4216,4217,4218,4219,4220,4221,4222,4223,4224,4225,4226,4227,4228,4229,4230,4231,4232,4233,4234,4235,4236,4237,4238,4239,4240,4241,4242,4243,4244,4245,4246,4247,4248,4249,4250,4251,4252,4253,4254,4255,4256,4257) ORDER BY SortPos; 
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 2
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 2
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:32 AM PK_QuestionType: 17
06/14/2023 09:34:42 AM 
            SELECT DISTINCT
            ISNULL(QID, '') [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4028,4029,4030,4031,4032,4033,4034,4035,4036,4037,4038,4039,4040,4041,4042,4043,4044,4045,4046,4047,4048,4049,4050,4051,4052,4053,4054,4055,4056,4057,4058,4059,4060,4061,4062,4063,4064,4065,4066,4067,4068,4069,4070,4071,4072,4073,4074,4075,4076,4077,4078,4079,4080,4081,4082,4083,4084,4085,4086,4087,4088,4089,4090,4091,4092,4093,4094,4095,4096,4097,4098,4099,4100,4101,4102,4103,4104,4105,4106,4107,4108,4109,4110,4111,4112,4113,4114,4115,4116,4117,4118,4119,4120,4121,4122,4123,4124,4125,4126,4127,4128,4129,4130,4131,4132,4133,4134,4135,4136,4137,4138,4139,4140,4141,4142,4143,4144,4145,4146,4147,4148,4149,4150,4151,4152,4153,4154,4155,4156,4157,4158,4159,4160,4161,4162,4163,4164,4165,4166,4167,4168,4169,4170,4171,4172,4173,4174,4175,4176,4177,4178,4179,4180,4181,4182,4183,4184,4185,4186,4187,4188,4189,4190,4191,4192,4193,4194,4195,4196,4197,4198,4199,4200,4201,4202,4203,4204,4205,4206,4207,4208,4209,4210,4211,4212,4213,4214,4215,4216,4217,4218,4219,4220,4221,4222,4223,4224,4225,4226,4227,4228,4229,4230,4231,4232,4233,4234,4235,4236,4237,4238,4239,4240,4241,4242,4243,4244,4245,4246,4247,4248,4249,4250,4251,4252,4253,4254,4255,4256,4257) ORDER BY SortPos; 
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 2
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 2
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:34:46 AM PK_QuestionType: 17
06/14/2023 09:35:08 AM 
            SELECT DISTINCT
            ISNULL(QID, '') [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4028,4029,4030,4031,4032,4033,4034,4035,4036,4037,4038,4039,4040,4041,4042,4043,4044,4045,4046,4047,4048,4049,4050,4051,4052,4053,4054,4055,4056,4057,4058,4059,4060,4061,4062,4063,4064,4065,4066,4067,4068,4069,4070,4071,4072,4073,4074,4075,4076,4077,4078,4079,4080,4081,4082,4083,4084,4085,4086,4087,4088,4089,4090,4091,4092,4093,4094,4095,4096,4097,4098,4099,4100,4101,4102,4103,4104,4105,4106,4107,4108,4109,4110,4111,4112,4113,4114,4115,4116,4117,4118,4119,4120,4121,4122,4123,4124,4125,4126,4127,4128,4129,4130,4131,4132,4133,4134,4135,4136,4137,4138,4139,4140,4141,4142,4143,4144,4145,4146,4147,4148,4149,4150,4151,4152,4153,4154,4155,4156,4157,4158,4159,4160,4161,4162,4163,4164,4165,4166,4167,4168,4169,4170,4171,4172,4173,4174,4175,4176,4177,4178,4179,4180,4181,4182,4183,4184,4185,4186,4187,4188,4189,4190,4191,4192,4193,4194,4195,4196,4197,4198,4199,4200,4201,4202,4203,4204,4205,4206,4207,4208,4209,4210,4211,4212,4213,4214,4215,4216,4217,4218,4219,4220,4221,4222,4223,4224,4225,4226,4227,4228,4229,4230,4231,4232,4233,4234,4235,4236,4237,4238,4239,4240,4241,4242,4243,4244,4245,4246,4247,4248,4249,4250,4251,4252,4253,4254,4255,4256,4257) ORDER BY SortPos; 
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 2
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 2
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:09 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM 
            SELECT DISTINCT
            ISNULL(QID, '') [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4028,4029,4030,4031,4032,4033,4034,4035,4036,4037,4038,4039,4040,4041,4042,4043,4044,4045,4046,4047,4048,4049,4050,4051,4052,4053,4054,4055,4056,4057,4058,4059,4060,4061,4062,4063,4064,4065,4066,4067,4068,4069,4070,4071,4072,4073,4074,4075,4076,4077,4078,4079,4080,4081,4082,4083,4084,4085,4086,4087,4088,4089,4090,4091,4092,4093,4094,4095,4096,4097,4098,4099,4100,4101,4102,4103,4104,4105,4106,4107,4108,4109,4110,4111,4112,4113,4114,4115,4116,4117,4118,4119,4120,4121,4122,4123,4124,4125,4126,4127,4128,4129,4130,4131,4132,4133,4134,4135,4136,4137,4138,4139,4140,4141,4142,4143,4144,4145,4146,4147,4148,4149,4150,4151,4152,4153,4154,4155,4156,4157,4158,4159,4160,4161,4162,4163,4164,4165,4166,4167,4168,4169,4170,4171,4172,4173,4174,4175,4176,4177,4178,4179,4180,4181,4182,4183,4184,4185,4186,4187,4188,4189,4190,4191,4192,4193,4194,4195,4196,4197,4198,4199,4200,4201,4202,4203,4204,4205,4206,4207,4208,4209,4210,4211,4212,4213,4214,4215,4216,4217,4218,4219,4220,4221,4222,4223,4224,4225,4226,4227,4228,4229,4230,4231,4232,4233,4234,4235,4236,4237,4238,4239,4240,4241,4242,4243,4244,4245,4246,4247,4248,4249,4250,4251,4252,4253,4254,4255,4256,4257) ORDER BY SortPos; 
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 2
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 2
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:28 AM PK_QuestionType: 17
06/14/2023 09:35:29 AM PK_QuestionType: 17
06/14/2023 09:35:29 AM PK_QuestionType: 17
06/14/2023 09:35:29 AM PK_QuestionType: 17
06/14/2023 09:35:29 AM PK_QuestionType: 17
06/14/2023 09:35:29 AM PK_QuestionType: 17
06/14/2023 09:35:29 AM PK_QuestionType: 17
06/14/2023 09:35:29 AM PK_QuestionType: 17
06/14/2023 09:35:29 AM PK_QuestionType: 17
06/14/2023 09:35:29 AM PK_QuestionType: 17
06/14/2023 09:35:29 AM PK_QuestionType: 17
06/14/2023 09:35:29 AM PK_QuestionType: 17
06/14/2023 09:35:29 AM PK_QuestionType: 17
06/14/2023 09:35:29 AM PK_QuestionType: 17
06/14/2023 09:35:29 AM PK_QuestionType: 17
06/14/2023 09:35:29 AM PK_QuestionType: 17
06/14/2023 09:35:29 AM PK_QuestionType: 17
06/14/2023 09:35:29 AM PK_QuestionType: 17
06/14/2023 09:35:29 AM PK_QuestionType: 17
06/14/2023 09:35:29 AM PK_QuestionType: 17
06/14/2023 09:35:29 AM PK_QuestionType: 17
06/14/2023 09:35:29 AM PK_QuestionType: 17
06/14/2023 09:35:29 AM PK_QuestionType: 17
06/14/2023 09:35:29 AM PK_QuestionType: 17
06/14/2023 09:35:29 AM PK_QuestionType: 17
06/14/2023 09:35:29 AM PK_QuestionType: 17
06/14/2023 09:35:29 AM PK_QuestionType: 17
06/14/2023 09:35:29 AM PK_QuestionType: 17
06/14/2023 09:35:29 AM PK_QuestionType: 17
06/14/2023 09:35:29 AM PK_QuestionType: 17
06/14/2023 09:35:29 AM PK_QuestionType: 17
06/14/2023 09:35:29 AM PK_QuestionType: 17
06/14/2023 09:35:29 AM PK_QuestionType: 17
06/14/2023 09:35:29 AM PK_QuestionType: 17
06/14/2023 09:35:29 AM PK_QuestionType: 17
06/14/2023 09:35:29 AM PK_QuestionType: 17
06/14/2023 09:35:29 AM PK_QuestionType: 17
06/14/2023 09:35:29 AM PK_QuestionType: 17
06/14/2023 09:35:29 AM PK_QuestionType: 17
06/14/2023 09:35:29 AM PK_QuestionType: 17
06/14/2023 09:35:29 AM PK_QuestionType: 17
06/14/2023 02:48:12 PM 
            SELECT DISTINCT
            ISNULL(QID, '') [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4028,4029,4030,4031,4032,4033,4034,4035,4036,4037,4038,4039,4040,4041,4042,4043,4044,4045,4046,4047,4048,4049,4050,4051,4052,4053,4054,4055,4056,4057,4058,4059,4060,4061,4062,4063,4064,4065,4066,4067,4068,4069,4070,4071,4072,4073,4074,4075,4076,4077,4078,4079,4080,4081,4082,4083,4084,4085,4086,4087,4088,4089,4090,4091,4092,4093,4094,4095,4096,4097,4098,4099,4100,4101,4102,4103,4104,4105,4106,4107,4108,4109,4110,4111,4112,4113,4114,4115,4116,4117,4118,4119,4120,4121,4122,4123,4124,4125,4126,4127,4128,4129,4130,4131,4132,4133,4134,4135,4136,4137,4138,4139,4140,4141,4142,4143,4144,4145,4146,4147,4148,4149,4150,4151,4152,4153,4154,4155,4156,4157,4158,4159,4160,4161,4162,4163,4164,4165,4166,4167,4168,4169,4170,4171,4172,4173,4174,4175,4176,4177,4178,4179,4180,4181,4182,4183,4184,4185,4186,4187,4188,4189,4190,4191,4192,4193,4194,4195,4196,4197,4198,4199,4200,4201,4202,4203,4204,4205,4206,4207,4208,4209,4210,4211,4212,4213,4214,4215,4216,4217,4218,4219,4220,4221,4222,4223,4224,4225,4226,4227,4228,4229,4230,4231,4232,4233,4234,4235,4236,4237,4238,4239,4240,4241,4242,4243,4244,4245,4246,4247,4248,4249,4250,4251,4252,4253,4254,4255,4256,4257) ORDER BY SortPos; 
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 2
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 2
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:48:13 PM PK_QuestionType: 17
06/14/2023 02:49:34 PM 
            SELECT DISTINCT
            ISNULL(QID, '') [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4028,4029,4030,4031,4032,4033,4034,4035,4036,4037,4038,4039,4040,4041,4042,4043,4044,4045,4046,4047,4048,4049,4050,4051,4052,4053,4054,4055,4056,4057,4058,4059,4060,4061,4062,4063,4064,4065,4066,4067,4068,4069,4070,4071,4072,4073,4074,4075,4076,4077,4078,4079,4080,4081,4082,4083,4084,4085,4086,4087,4088,4089,4090,4091,4092,4093,4094,4095,4096,4097,4098,4099,4100,4101,4102,4103,4104,4105,4106,4107,4108,4109,4110,4111,4112,4113,4114,4115,4116,4117,4118,4119,4120,4121,4122,4123,4124,4125,4126,4127,4128,4129,4130,4131,4132,4133,4134,4135,4136,4137,4138,4139,4140,4141,4142,4143,4144,4145,4146,4147,4148,4149,4150,4151,4152,4153,4154,4155,4156,4157,4158,4159,4160,4161,4162,4163,4164,4165,4166,4167,4168,4169,4170,4171,4172,4173,4174,4175,4176,4177,4178,4179,4180,4181,4182,4183,4184,4185,4186,4187,4188,4189,4190,4191,4192,4193,4194,4195,4196,4197,4198,4199,4200,4201,4202,4203,4204,4205,4206,4207,4208,4209,4210,4211,4212,4213,4214,4215,4216,4217,4218,4219,4220,4221,4222,4223,4224,4225,4226,4227,4228,4229,4230,4231,4232,4233,4234,4235,4236,4237,4238,4239,4240,4241,4242,4243,4244,4245,4246,4247,4248,4249,4250,4251,4252,4253,4254,4255,4256,4257) ORDER BY SortPos; 
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 2
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 2
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:35 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM 
            SELECT DISTINCT
            ISNULL(QID, '') [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4028,4029,4030,4031,4032,4033,4034,4035,4036,4037,4038,4039,4040,4041,4042,4043,4044,4045,4046,4047,4048,4049,4050,4051,4052,4053,4054,4055,4056,4057,4058,4059,4060,4061,4062,4063,4064,4065,4066,4067,4068,4069,4070,4071,4072,4073,4074,4075,4076,4077,4078,4079,4080,4081,4082,4083,4084,4085,4086,4087,4088,4089,4090,4091,4092,4093,4094,4095,4096,4097,4098,4099,4100,4101,4102,4103,4104,4105,4106,4107,4108,4109,4110,4111,4112,4113,4114,4115,4116,4117,4118,4119,4120,4121,4122,4123,4124,4125,4126,4127,4128,4129,4130,4131,4132,4133,4134,4135,4136,4137,4138,4139,4140,4141,4142,4143,4144,4145,4146,4147,4148,4149,4150,4151,4152,4153,4154,4155,4156,4157,4158,4159,4160,4161,4162,4163,4164,4165,4166,4167,4168,4169,4170,4171,4172,4173,4174,4175,4176,4177,4178,4179,4180,4181,4182,4183,4184,4185,4186,4187,4188,4189,4190,4191,4192,4193,4194,4195,4196,4197,4198,4199,4200,4201,4202,4203,4204,4205,4206,4207,4208,4209,4210,4211,4212,4213,4214,4215,4216,4217,4218,4219,4220,4221,4222,4223,4224,4225,4226,4227,4228,4229,4230,4231,4232,4233,4234,4235,4236,4237,4238,4239,4240,4241,4242,4243,4244,4245,4246,4247,4248,4249,4250,4251,4252,4253,4254,4255,4256,4257) ORDER BY SortPos; 
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 2
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 2
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:49:47 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM 
            SELECT DISTINCT
            ISNULL(QID, '') [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4028,4029,4030,4031,4032,4033,4034,4035,4036,4037,4038,4039,4040,4041,4042,4043,4044,4045,4046,4047,4048,4049,4050,4051,4052,4053,4054,4055,4056,4057,4058,4059,4060,4061,4062,4063,4064,4065,4066,4067,4068,4069,4070,4071,4072,4073,4074,4075,4076,4077,4078,4079,4080,4081,4082,4083,4084,4085,4086,4087,4088,4089,4090,4091,4092,4093,4094,4095,4096,4097,4098,4099,4100,4101,4102,4103,4104,4105,4106,4107,4108,4109,4110,4111,4112,4113,4114,4115,4116,4117,4118,4119,4120,4121,4122,4123,4124,4125,4126,4127,4128,4129,4130,4131,4132,4133,4134,4135,4136,4137,4138,4139,4140,4141,4142,4143,4144,4145,4146,4147,4148,4149,4150,4151,4152,4153,4154,4155,4156,4157,4158,4159,4160,4161,4162,4163,4164,4165,4166,4167,4168,4169,4170,4171,4172,4173,4174,4175,4176,4177,4178,4179,4180,4181,4182,4183,4184,4185,4186,4187,4188,4189,4190,4191,4192,4193,4194,4195,4196,4197,4198,4199,4200,4201,4202,4203,4204,4205,4206,4207,4208,4209,4210,4211,4212,4213,4214,4215,4216,4217,4218,4219,4220,4221,4222,4223,4224,4225,4226,4227,4228,4229,4230,4231,4232,4233,4234,4235,4236,4237,4238,4239,4240,4241,4242,4243,4244,4245,4246,4247,4248,4249,4250,4251,4252,4253,4254,4255,4256,4257) ORDER BY SortPos; 
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 2
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 2
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 02:50:31 PM PK_QuestionType: 17
06/14/2023 03:16:18 PM 
            SELECT DISTINCT
            ISNULL(QID, '') [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4028,4029,4030,4031,4032,4033,4034,4035,4036,4037,4038,4039,4040,4041,4042,4043,4044,4045,4046,4047,4048,4049,4050,4051,4052,4053,4054,4055,4056,4057,4058,4059,4060,4061,4062,4063,4064,4065,4066,4067,4068,4069,4070,4071,4072,4073,4074,4075,4076,4077,4078,4079,4080,4081,4082,4083,4084,4085,4086,4087,4088,4089,4090,4091,4092,4093,4094,4095,4096,4097,4098,4099,4100,4101,4102,4103,4104,4105,4106,4107,4108,4109,4110,4111,4112,4113,4114,4115,4116,4117,4118,4119,4120,4121,4122,4123,4124,4125,4126,4127,4128,4129,4130,4131,4132,4133,4134,4135,4136,4137,4138,4139,4140,4141,4142,4143,4144,4145,4146,4147,4148,4149,4150,4151,4152,4153,4154,4155,4156,4157,4158,4159,4160,4161,4162,4163,4164,4165,4166,4167,4168,4169,4170,4171,4172,4173,4174,4175,4176,4177,4178,4179,4180,4181,4182,4183,4184,4185,4186,4187,4188,4189,4190,4191,4192,4193,4194,4195,4196,4197,4198,4199,4200,4201,4202,4203,4204,4205,4206,4207,4208,4209,4210,4211,4212,4213,4214,4215,4216,4217,4218,4219,4220,4221,4222,4223,4224,4225,4226,4227,4228,4229,4230,4231,4232,4233,4234,4235,4236,4237,4238,4239,4240,4241,4242,4243,4244,4245,4246,4247,4248,4249,4250,4251,4252,4253,4254,4255,4256,4257) ORDER BY SortPos; 
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 2
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 2
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:16:19 PM PK_QuestionType: 17
06/14/2023 03:22:52 PM 
            SELECT DISTINCT
            ISNULL(QID, '') [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4028,4029,4030,4031,4032,4033,4034,4035,4036,4037,4038,4039,4040,4041,4042,4043,4044,4045,4046,4047,4048,4049,4050,4051,4052,4053,4054,4055,4056,4057,4058,4059,4060,4061,4062,4063,4064,4065,4066,4067,4068,4069,4070,4071,4072,4073,4074,4075,4076,4077,4078,4079,4080,4081,4082,4083,4084,4085,4086,4087,4088,4089,4090,4091,4092,4093,4094,4095,4096,4097,4098,4099,4100,4101,4102,4103,4104,4105,4106,4107,4108,4109,4110,4111,4112,4113,4114,4115,4116,4117,4118,4119,4120,4121,4122,4123,4124,4125,4126,4127,4128,4129,4130,4131,4132,4133,4134,4135,4136,4137,4138,4139,4140,4141,4142,4143,4144,4145,4146,4147,4148,4149,4150,4151,4152,4153,4154,4155,4156,4157,4158,4159,4160,4161,4162,4163,4164,4165,4166,4167,4168,4169,4170,4171,4172,4173,4174,4175,4176,4177,4178,4179,4180,4181,4182,4183,4184,4185,4186,4187,4188,4189,4190,4191,4192,4193,4194,4195,4196,4197,4198,4199,4200,4201,4202,4203,4204,4205,4206,4207,4208,4209,4210,4211,4212,4213,4214,4215,4216,4217,4218,4219,4220,4221,4222,4223,4224,4225,4226,4227,4228,4229,4230,4231,4232,4233,4234,4235,4236,4237,4238,4239,4240,4241,4242,4243,4244,4245,4246,4247,4248,4249,4250,4251,4252,4253,4254,4255,4256,4257) ORDER BY SortPos; 
06/14/2023 03:22:53 PM PK_QuestionType: 17
06/14/2023 03:22:53 PM PK_QuestionType: 17
06/14/2023 03:22:53 PM PK_QuestionType: 17
06/14/2023 03:22:53 PM PK_QuestionType: 17
06/14/2023 03:22:53 PM PK_QuestionType: 17
06/14/2023 03:22:53 PM PK_QuestionType: 17
06/14/2023 03:22:53 PM PK_QuestionType: 17
06/14/2023 03:22:53 PM PK_QuestionType: 17
06/14/2023 03:22:53 PM PK_QuestionType: 17
06/14/2023 03:22:53 PM PK_QuestionType: 17
06/14/2023 03:22:53 PM PK_QuestionType: 17
06/14/2023 03:22:53 PM PK_QuestionType: 17
06/14/2023 03:22:53 PM PK_QuestionType: 17
06/14/2023 03:22:53 PM PK_QuestionType: 17
06/14/2023 03:22:53 PM PK_QuestionType: 17
06/14/2023 03:22:53 PM PK_QuestionType: 17
06/14/2023 03:22:53 PM PK_QuestionType: 17
06/14/2023 03:22:53 PM PK_QuestionType: 17
06/14/2023 03:22:53 PM PK_QuestionType: 17
06/14/2023 03:22:53 PM PK_QuestionType: 17
06/14/2023 03:22:53 PM PK_QuestionType: 17
06/14/2023 03:22:53 PM PK_QuestionType: 17
06/14/2023 03:22:53 PM PK_QuestionType: 17
06/14/2023 03:22:53 PM PK_QuestionType: 17
06/14/2023 03:22:53 PM PK_QuestionType: 17
06/14/2023 03:22:53 PM PK_QuestionType: 17
06/14/2023 03:22:53 PM PK_QuestionType: 17
06/14/2023 03:22:53 PM PK_QuestionType: 17
06/14/2023 03:22:53 PM PK_QuestionType: 17
06/14/2023 03:22:53 PM PK_QuestionType: 17
06/14/2023 03:22:53 PM PK_QuestionType: 17
06/14/2023 03:22:53 PM PK_QuestionType: 17
06/14/2023 03:22:53 PM PK_QuestionType: 17
06/14/2023 03:22:53 PM PK_QuestionType: 17
06/14/2023 03:22:53 PM PK_QuestionType: 17
06/14/2023 03:22:53 PM PK_QuestionType: 17
06/14/2023 03:22:53 PM PK_QuestionType: 17
06/14/2023 03:22:53 PM PK_QuestionType: 17
06/14/2023 03:22:53 PM PK_QuestionType: 17
06/14/2023 03:22:53 PM PK_QuestionType: 17
06/14/2023 03:22:53 PM PK_QuestionType: 17
06/14/2023 03:22:53 PM PK_QuestionType: 17
06/14/2023 03:22:53 PM PK_QuestionType: 17
06/14/2023 03:22:53 PM PK_QuestionType: 17
06/14/2023 03:22:53 PM PK_QuestionType: 17
06/14/2023 03:22:53 PM PK_QuestionType: 17
06/14/2023 03:22:53 PM PK_QuestionType: 17
06/14/2023 03:22:53 PM PK_QuestionType: 17
06/14/2023 03:22:53 PM PK_QuestionType: 17
06/14/2023 03:22:53 PM PK_QuestionType: 17
06/14/2023 03:22:53 PM PK_QuestionType: 17
06/14/2023 03:22:53 PM PK_QuestionType: 17
06/14/2023 03:22:53 PM PK_QuestionType: 17
06/14/2023 03:22:53 PM PK_QuestionType: 17
06/14/2023 03:22:53 PM PK_QuestionType: 17
06/14/2023 03:22:53 PM PK_QuestionType: 17
06/14/2023 03:22:53 PM PK_QuestionType: 17
06/14/2023 03:22:53 PM PK_QuestionType: 17
06/14/2023 03:22:53 PM PK_QuestionType: 17
06/14/2023 03:22:53 PM PK_QuestionType: 17
06/14/2023 03:22:53 PM PK_QuestionType: 17
06/14/2023 03:22:53 PM PK_QuestionType: 17
06/14/2023 03:22:53 PM PK_QuestionType: 17
06/14/2023 03:22:53 PM PK_QuestionType: 17
06/14/2023 03:22:53 PM PK_QuestionType: 17
06/14/2023 03:22:53 PM PK_QuestionType: 17
06/14/2023 03:22:53 PM PK_QuestionType: 17
06/14/2023 03:22:53 PM PK_QuestionType: 17
06/14/2023 03:22:53 PM PK_QuestionType: 17
06/14/2023 03:22:53 PM PK_QuestionType: 17
06/14/2023 03:24:02 PM 
            SELECT DISTINCT
            ISNULL(QID, '') [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4028,4029,4030,4031,4032,4033,4034,4035,4036,4037,4038,4039,4040,4041,4042,4043,4044,4045,4046,4047,4048,4049,4050,4051,4052,4053,4054,4055,4056,4057,4058,4059,4060,4061,4062,4063,4064,4065,4066,4067,4068,4069,4070,4071,4072,4073,4074,4075,4076,4077,4078,4079,4080,4081,4082,4083,4084,4085,4086,4087,4088,4089,4090,4091,4092,4093,4094,4095,4096,4097,4098,4099,4100,4101,4102,4103,4104,4105,4106,4107,4108,4109,4110,4111,4112,4113,4114,4115,4116,4117,4118,4119,4120,4121,4122,4123,4124,4125,4126,4127,4128,4129,4130,4131,4132,4133,4134,4135,4136,4137,4138,4139,4140,4141,4142,4143,4144,4145,4146,4147,4148,4149,4150,4151,4152,4153,4154,4155,4156,4157,4158,4159,4160,4161,4162,4163,4164,4165,4166,4167,4168,4169,4170,4171,4172,4173,4174,4175,4176,4177,4178,4179,4180,4181,4182,4183,4184,4185,4186,4187,4188,4189,4190,4191,4192,4193,4194,4195,4196,4197,4198,4199,4200,4201,4202,4203,4204,4205,4206,4207,4208,4209,4210,4211,4212,4213,4214,4215,4216,4217,4218,4219,4220,4221,4222,4223,4224,4225,4226,4227,4228,4229,4230,4231,4232,4233,4234,4235,4236,4237,4238,4239,4240,4241,4242,4243,4244,4245,4246,4247,4248,4249,4250,4251,4252,4253,4254,4255,4256,4257) ORDER BY SortPos; 
06/14/2023 03:24:02 PM PK_QuestionType: 17
06/14/2023 03:24:02 PM PK_QuestionType: 17
06/14/2023 03:24:02 PM PK_QuestionType: 17
06/14/2023 03:24:02 PM PK_QuestionType: 17
06/14/2023 03:24:02 PM PK_QuestionType: 17
06/14/2023 03:24:02 PM PK_QuestionType: 17
06/14/2023 03:24:02 PM PK_QuestionType: 17
06/14/2023 03:24:02 PM PK_QuestionType: 17
06/14/2023 03:24:02 PM PK_QuestionType: 17
06/14/2023 03:24:02 PM PK_QuestionType: 17
06/14/2023 03:24:02 PM PK_QuestionType: 17
06/14/2023 03:24:02 PM PK_QuestionType: 17
06/14/2023 03:24:02 PM PK_QuestionType: 17
06/14/2023 03:24:02 PM PK_QuestionType: 17
06/14/2023 03:24:02 PM PK_QuestionType: 17
06/14/2023 03:24:02 PM PK_QuestionType: 17
06/14/2023 03:24:02 PM PK_QuestionType: 17
06/14/2023 03:24:02 PM PK_QuestionType: 17
06/14/2023 03:24:02 PM PK_QuestionType: 17
06/14/2023 03:24:02 PM PK_QuestionType: 17
06/14/2023 03:24:02 PM PK_QuestionType: 17
06/14/2023 03:24:02 PM PK_QuestionType: 17
06/14/2023 03:24:02 PM PK_QuestionType: 17
06/14/2023 03:24:02 PM PK_QuestionType: 17
06/14/2023 03:24:02 PM PK_QuestionType: 17
06/14/2023 03:24:02 PM PK_QuestionType: 17
06/14/2023 03:24:02 PM PK_QuestionType: 17
06/14/2023 03:24:02 PM PK_QuestionType: 17
06/14/2023 03:24:02 PM PK_QuestionType: 17
06/14/2023 03:24:02 PM PK_QuestionType: 17
06/14/2023 03:24:02 PM PK_QuestionType: 17
06/14/2023 03:24:02 PM PK_QuestionType: 17
06/14/2023 03:24:02 PM PK_QuestionType: 17
06/14/2023 03:24:02 PM PK_QuestionType: 17
06/14/2023 03:24:02 PM PK_QuestionType: 17
06/14/2023 03:24:02 PM PK_QuestionType: 17
06/14/2023 03:24:02 PM PK_QuestionType: 17
06/14/2023 03:24:02 PM PK_QuestionType: 17
06/14/2023 03:24:02 PM PK_QuestionType: 17
06/14/2023 03:24:02 PM PK_QuestionType: 17
06/14/2023 03:24:02 PM PK_QuestionType: 17
06/14/2023 03:24:02 PM PK_QuestionType: 17
06/14/2023 03:24:02 PM PK_QuestionType: 17
06/14/2023 03:24:02 PM PK_QuestionType: 17
06/14/2023 03:24:02 PM PK_QuestionType: 17
06/14/2023 03:24:02 PM PK_QuestionType: 17
06/14/2023 03:24:02 PM PK_QuestionType: 17
06/14/2023 03:24:02 PM PK_QuestionType: 17
06/14/2023 03:24:02 PM PK_QuestionType: 17
06/14/2023 03:24:02 PM PK_QuestionType: 17
06/14/2023 03:24:02 PM PK_QuestionType: 17
06/14/2023 03:24:02 PM PK_QuestionType: 17
06/14/2023 03:24:02 PM PK_QuestionType: 17
06/14/2023 03:24:02 PM PK_QuestionType: 17
06/14/2023 03:24:02 PM PK_QuestionType: 17
06/14/2023 03:24:02 PM PK_QuestionType: 17
06/14/2023 03:24:02 PM PK_QuestionType: 17
06/14/2023 03:24:02 PM PK_QuestionType: 17
06/14/2023 03:24:02 PM PK_QuestionType: 17
06/14/2023 03:24:02 PM PK_QuestionType: 17
06/14/2023 03:24:02 PM PK_QuestionType: 17
06/14/2023 03:24:02 PM PK_QuestionType: 17
06/14/2023 03:24:02 PM PK_QuestionType: 17
06/14/2023 03:24:02 PM PK_QuestionType: 17
06/14/2023 03:24:02 PM PK_QuestionType: 17
06/14/2023 03:24:02 PM PK_QuestionType: 17
06/14/2023 03:24:02 PM PK_QuestionType: 17
06/14/2023 03:24:02 PM PK_QuestionType: 17
06/14/2023 03:24:02 PM PK_QuestionType: 17
06/14/2023 03:24:02 PM PK_QuestionType: 17
06/14/2023 03:27:51 PM 
            SELECT DISTINCT
            ISNULL(QID, '') [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4028,4029,4030,4031,4032,4033,4034,4035,4036,4037,4038,4039,4040,4041,4042,4043,4044,4045,4046,4047,4048,4049,4050,4051,4052,4053,4054,4055,4056,4057,4058,4059,4060,4061,4062,4063,4064,4065,4066,4067,4068,4069,4070,4071,4072,4073,4074,4075,4076,4077,4078,4079,4080,4081,4082,4083,4084,4085,4086,4087,4088,4089,4090,4091,4092,4093,4094,4095,4096,4097,4098,4099,4100,4101,4102,4103,4104,4105,4106,4107,4108,4109,4110,4111,4112,4113,4114,4115,4116,4117,4118,4119,4120,4121,4122,4123,4124,4125,4126,4127,4128,4129,4130,4131,4132,4133,4134,4135,4136,4137,4138,4139,4140,4141,4142,4143,4144,4145,4146,4147,4148,4149,4150,4151,4152,4153,4154,4155,4156,4157,4158,4159,4160,4161,4162,4163,4164,4165,4166,4167,4168,4169,4170,4171,4172,4173,4174,4175,4176,4177,4178,4179,4180,4181,4182,4183,4184,4185,4186,4187,4188,4189,4190,4191,4192,4193,4194,4195,4196,4197,4198,4199,4200,4201,4202,4203,4204,4205,4206,4207,4208,4209,4210,4211,4212,4213,4214,4215,4216,4217,4218,4219,4220,4221,4222,4223,4224,4225,4226,4227,4228,4229,4230,4231,4232,4233,4234,4235,4236,4237,4238,4239,4240,4241,4242,4243,4244,4245,4246,4247,4248,4249,4250,4251,4252,4253,4254,4255,4256,4257) ORDER BY SortPos; 
06/14/2023 03:27:52 PM PK_QuestionType: 17
06/14/2023 03:27:52 PM PK_QuestionType: 17
06/14/2023 03:27:52 PM PK_QuestionType: 17
06/14/2023 03:27:52 PM PK_QuestionType: 17
06/14/2023 03:27:52 PM PK_QuestionType: 17
06/14/2023 03:27:52 PM PK_QuestionType: 17
06/14/2023 03:27:52 PM PK_QuestionType: 17
06/14/2023 03:27:52 PM PK_QuestionType: 17
06/14/2023 03:27:52 PM PK_QuestionType: 17
06/14/2023 03:27:52 PM PK_QuestionType: 17
06/14/2023 03:27:52 PM PK_QuestionType: 17
06/14/2023 03:27:52 PM PK_QuestionType: 17
06/14/2023 03:27:52 PM PK_QuestionType: 17
06/14/2023 03:27:52 PM PK_QuestionType: 17
06/14/2023 03:27:52 PM PK_QuestionType: 17
06/14/2023 03:27:52 PM PK_QuestionType: 17
06/14/2023 03:27:52 PM PK_QuestionType: 17
06/14/2023 03:27:52 PM PK_QuestionType: 17
06/14/2023 03:27:52 PM PK_QuestionType: 17
06/14/2023 03:27:52 PM PK_QuestionType: 17
06/14/2023 03:27:52 PM PK_QuestionType: 17
06/14/2023 03:27:52 PM PK_QuestionType: 17
06/14/2023 03:27:52 PM PK_QuestionType: 17
06/14/2023 03:27:52 PM PK_QuestionType: 17
06/14/2023 03:27:52 PM PK_QuestionType: 17
06/14/2023 03:27:52 PM PK_QuestionType: 17
06/14/2023 03:27:52 PM PK_QuestionType: 17
06/14/2023 03:27:52 PM PK_QuestionType: 17
06/14/2023 03:27:52 PM PK_QuestionType: 17
06/14/2023 03:27:52 PM PK_QuestionType: 17
06/14/2023 03:27:52 PM PK_QuestionType: 17
06/14/2023 03:27:52 PM PK_QuestionType: 17
06/14/2023 03:27:52 PM PK_QuestionType: 17
06/14/2023 03:27:52 PM PK_QuestionType: 17
06/14/2023 03:27:52 PM PK_QuestionType: 17
06/14/2023 03:27:52 PM PK_QuestionType: 17
06/14/2023 03:27:52 PM PK_QuestionType: 17
06/14/2023 03:27:52 PM PK_QuestionType: 17
06/14/2023 03:27:52 PM PK_QuestionType: 17
06/14/2023 03:27:52 PM PK_QuestionType: 17
06/14/2023 03:27:52 PM PK_QuestionType: 17
06/14/2023 03:27:52 PM PK_QuestionType: 17
06/14/2023 03:27:52 PM PK_QuestionType: 17
06/14/2023 03:27:52 PM PK_QuestionType: 17
06/14/2023 03:27:52 PM PK_QuestionType: 17
06/14/2023 03:27:52 PM PK_QuestionType: 17
06/14/2023 03:27:52 PM PK_QuestionType: 17
06/14/2023 03:27:52 PM PK_QuestionType: 17
06/14/2023 03:27:52 PM PK_QuestionType: 17
06/14/2023 03:27:52 PM PK_QuestionType: 17
06/14/2023 03:27:52 PM PK_QuestionType: 17
06/14/2023 03:27:52 PM PK_QuestionType: 17
06/14/2023 03:27:52 PM PK_QuestionType: 17
06/14/2023 03:27:52 PM PK_QuestionType: 17
06/14/2023 03:27:52 PM PK_QuestionType: 17
06/14/2023 03:27:52 PM PK_QuestionType: 17
06/14/2023 03:27:52 PM PK_QuestionType: 17
06/14/2023 03:27:52 PM PK_QuestionType: 17
06/14/2023 03:27:52 PM PK_QuestionType: 17
06/14/2023 03:27:52 PM PK_QuestionType: 17
06/14/2023 03:27:52 PM PK_QuestionType: 17
06/14/2023 03:27:52 PM PK_QuestionType: 17
06/14/2023 03:27:52 PM PK_QuestionType: 17
06/14/2023 03:27:52 PM PK_QuestionType: 17
06/14/2023 03:27:52 PM PK_QuestionType: 17
06/14/2023 03:27:52 PM PK_QuestionType: 17
06/14/2023 03:27:52 PM PK_QuestionType: 17
06/14/2023 03:27:52 PM PK_QuestionType: 17
06/14/2023 03:27:52 PM PK_QuestionType: 17
06/14/2023 03:27:52 PM PK_QuestionType: 17
06/14/2023 03:29:18 PM 
            SELECT DISTINCT
            ISNULL(QID, '') [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4028,4029,4030,4031,4032,4033,4034,4035,4036,4037,4038,4039,4040,4041,4042,4043,4044,4045,4046,4047,4048,4049,4050,4051,4052,4053,4054,4055,4056,4057,4058,4059,4060,4061,4062,4063,4064,4065,4066,4067,4068,4069,4070,4071,4072,4073,4074,4075,4076,4077,4078,4079,4080,4081,4082,4083,4084,4085,4086,4087,4088,4089,4090,4091,4092,4093,4094,4095,4096,4097,4098,4099,4100,4101,4102,4103,4104,4105,4106,4107,4108,4109,4110,4111,4112,4113,4114,4115,4116,4117,4118,4119,4120,4121,4122,4123,4124,4125,4126,4127,4128,4129,4130,4131,4132,4133,4134,4135,4136,4137,4138,4139,4140,4141,4142,4143,4144,4145,4146,4147,4148,4149,4150,4151,4152,4153,4154,4155,4156,4157,4158,4159,4160,4161,4162,4163,4164,4165,4166,4167,4168,4169,4170,4171,4172,4173,4174,4175,4176,4177,4178,4179,4180,4181,4182,4183,4184,4185,4186,4187,4188,4189,4190,4191,4192,4193,4194,4195,4196,4197,4198,4199,4200,4201,4202,4203,4204,4205,4206,4207,4208,4209,4210,4211,4212,4213,4214,4215,4216,4217,4218,4219,4220,4221,4222,4223,4224,4225,4226,4227,4228,4229,4230,4231,4232,4233,4234,4235,4236,4237,4238,4239,4240,4241,4242,4243,4244,4245,4246,4247,4248,4249,4250,4251,4252,4253,4254,4255,4256,4257,4258) ORDER BY SortPos; 
06/14/2023 03:29:18 PM PK_QuestionType: 17
06/14/2023 03:29:18 PM PK_QuestionType: 17
06/14/2023 03:29:18 PM PK_QuestionType: 17
06/14/2023 03:29:18 PM PK_QuestionType: 17
06/14/2023 03:29:18 PM PK_QuestionType: 17
06/14/2023 03:29:18 PM PK_QuestionType: 17
06/14/2023 03:29:18 PM PK_QuestionType: 17
06/14/2023 03:29:18 PM PK_QuestionType: 17
06/14/2023 03:29:18 PM PK_QuestionType: 17
06/14/2023 03:29:18 PM PK_QuestionType: 17
06/14/2023 03:29:18 PM PK_QuestionType: 17
06/14/2023 03:29:18 PM PK_QuestionType: 17
06/14/2023 03:29:18 PM PK_QuestionType: 17
06/14/2023 03:29:18 PM PK_QuestionType: 17
06/14/2023 03:29:18 PM PK_QuestionType: 17
06/14/2023 03:29:18 PM PK_QuestionType: 17
06/14/2023 03:29:18 PM PK_QuestionType: 17
06/14/2023 03:29:18 PM PK_QuestionType: 17
06/14/2023 03:29:18 PM PK_QuestionType: 17
06/14/2023 03:29:18 PM PK_QuestionType: 17
06/14/2023 03:29:18 PM PK_QuestionType: 17
06/14/2023 03:29:18 PM PK_QuestionType: 17
06/14/2023 03:29:18 PM PK_QuestionType: 17
06/14/2023 03:29:18 PM PK_QuestionType: 17
06/14/2023 03:29:18 PM PK_QuestionType: 17
06/14/2023 03:29:18 PM PK_QuestionType: 17
06/14/2023 03:29:18 PM PK_QuestionType: 17
06/14/2023 03:29:18 PM PK_QuestionType: 17
06/14/2023 03:29:18 PM PK_QuestionType: 17
06/14/2023 03:29:18 PM PK_QuestionType: 17
06/14/2023 03:29:18 PM PK_QuestionType: 17
06/14/2023 03:29:18 PM PK_QuestionType: 17
06/14/2023 03:29:18 PM PK_QuestionType: 17
06/14/2023 03:29:18 PM PK_QuestionType: 17
06/14/2023 03:29:18 PM PK_QuestionType: 17
06/14/2023 03:29:18 PM PK_QuestionType: 17
06/14/2023 03:29:18 PM PK_QuestionType: 17
06/14/2023 03:29:18 PM PK_QuestionType: 17
06/14/2023 03:29:18 PM PK_QuestionType: 17
06/14/2023 03:29:18 PM PK_QuestionType: 17
06/14/2023 03:29:18 PM PK_QuestionType: 17
06/14/2023 03:29:18 PM PK_QuestionType: 17
06/14/2023 03:52:28 PM 
            SELECT DISTINCT
            ISNULL(QID, '') [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4028,4029,4030,4031,4032,4033,4034,4035,4036,4037,4038,4039,4040,4041,4042,4043,4044,4045,4046,4047,4048,4049,4050,4051,4052,4053,4054,4055,4056,4057,4058,4059,4060,4061,4062,4063,4064,4065,4066,4067,4068,4069,4070,4071,4072,4073,4074,4075,4076,4077,4078,4079,4080,4081,4082,4083,4084,4085,4086,4087,4088,4089,4090,4091,4092,4093,4094,4095,4096,4097,4098,4099,4100,4101,4102,4103,4104,4105,4106,4107,4108,4109,4110,4111,4112,4113,4114,4115,4116,4117,4118,4119,4120,4121,4122,4123,4124,4125,4126,4127,4128,4129,4130,4131,4132,4133,4134,4135,4136,4137,4138,4139,4140,4141,4142,4143,4144,4145,4146,4147,4148,4149,4150,4151,4152,4153,4154,4155,4156,4157,4158,4159,4160,4161,4162,4163,4164,4165,4166,4167,4168,4169,4170,4171,4172,4173,4174,4175,4176,4177,4178,4179,4180,4181,4182,4183,4184,4185,4186,4187,4188,4189,4190,4191,4192,4193,4194,4195,4196,4197,4198,4199,4200,4201,4202,4203,4204,4205,4206,4207,4208,4209,4210,4211,4212,4213,4214,4215,4216,4217,4218,4219,4220,4221,4222,4223,4224,4225,4226,4227,4228,4229,4230,4231,4232,4233,4234,4235,4236,4237,4238,4239,4240,4241,4242,4243,4244,4245,4246,4247,4248,4249,4250,4251,4252,4253,4254,4255,4256,4257,4258) ORDER BY SortPos; 
06/14/2023 03:52:29 PM PK_QuestionType: 17
06/14/2023 03:52:29 PM PK_QuestionType: 17
06/14/2023 03:52:29 PM PK_QuestionType: 17
06/14/2023 03:52:29 PM PK_QuestionType: 17
06/14/2023 03:52:29 PM PK_QuestionType: 17
06/14/2023 03:52:29 PM PK_QuestionType: 17
06/14/2023 03:52:29 PM PK_QuestionType: 17
06/14/2023 03:52:29 PM PK_QuestionType: 17
06/14/2023 03:52:29 PM PK_QuestionType: 17
06/14/2023 03:52:29 PM PK_QuestionType: 17
06/14/2023 03:52:29 PM PK_QuestionType: 17
06/14/2023 03:52:29 PM PK_QuestionType: 17
06/14/2023 03:52:29 PM PK_QuestionType: 17
06/14/2023 03:52:29 PM PK_QuestionType: 17
06/14/2023 03:52:29 PM PK_QuestionType: 17
06/14/2023 03:52:29 PM PK_QuestionType: 17
06/14/2023 03:52:29 PM PK_QuestionType: 17
06/14/2023 03:52:29 PM PK_QuestionType: 17
06/14/2023 03:52:29 PM PK_QuestionType: 17
06/14/2023 03:52:29 PM PK_QuestionType: 17
06/14/2023 03:52:29 PM PK_QuestionType: 17
06/14/2023 03:52:29 PM PK_QuestionType: 17
06/14/2023 03:52:29 PM PK_QuestionType: 17
06/14/2023 03:52:29 PM PK_QuestionType: 17
06/14/2023 03:52:29 PM PK_QuestionType: 17
06/14/2023 03:52:29 PM PK_QuestionType: 17
06/14/2023 03:52:29 PM PK_QuestionType: 17
06/14/2023 03:52:29 PM PK_QuestionType: 17
06/14/2023 03:52:29 PM PK_QuestionType: 17
06/14/2023 03:52:29 PM PK_QuestionType: 17
06/14/2023 03:52:29 PM PK_QuestionType: 17
06/14/2023 03:52:29 PM PK_QuestionType: 17
06/14/2023 03:52:29 PM PK_QuestionType: 17
06/14/2023 03:52:34 PM 
            SELECT DISTINCT
            ISNULL(QID, '') [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4028,4029,4030,4031,4032,4033,4034,4035,4036,4037,4038,4039,4040,4041,4042,4043,4044,4045,4046,4047,4048,4049,4050,4051,4052,4053,4054,4055,4056,4057,4058,4059,4060,4061,4062,4063,4064,4065,4066,4067,4068,4069,4070,4071,4072,4073,4074,4075,4076,4077,4078,4079,4080,4081,4082,4083,4084,4085,4086,4087,4088,4089,4090,4091,4092,4093,4094,4095,4096,4097,4098,4099,4100,4101,4102,4103,4104,4105,4106,4107,4108,4109,4110,4111,4112,4113,4114,4115,4116,4117,4118,4119,4120,4121,4122,4123,4124,4125,4126,4127,4128,4129,4130,4131,4132,4133,4134,4135,4136,4137,4138,4139,4140,4141,4142,4143,4144,4145,4146,4147,4148,4149,4150,4151,4152,4153,4154,4155,4156,4157,4158,4159,4160,4161,4162,4163,4164,4165,4166,4167,4168,4169,4170,4171,4172,4173,4174,4175,4176,4177,4178,4179,4180,4181,4182,4183,4184,4185,4186,4187,4188,4189,4190,4191,4192,4193,4194,4195,4196,4197,4198,4199,4200,4201,4202,4203,4204,4205,4206,4207,4208,4209,4210,4211,4212,4213,4214,4215,4216,4217,4218,4219,4220,4221,4222,4223,4224,4225,4226,4227,4228,4229,4230,4231,4232,4233,4234,4235,4236,4237,4238,4239,4240,4241,4242,4243,4244,4245,4246,4247,4248,4249,4250,4251,4252,4253,4254,4255,4256,4257,4258) ORDER BY SortPos; 
06/14/2023 03:52:34 PM PK_QuestionType: 17
06/14/2023 03:52:34 PM PK_QuestionType: 17
06/14/2023 03:52:34 PM PK_QuestionType: 17
06/14/2023 03:52:34 PM PK_QuestionType: 17
06/14/2023 03:52:34 PM PK_QuestionType: 17
06/14/2023 03:52:34 PM PK_QuestionType: 17
06/14/2023 03:52:34 PM PK_QuestionType: 17
06/14/2023 03:52:34 PM PK_QuestionType: 17
06/14/2023 03:52:34 PM PK_QuestionType: 17
06/14/2023 03:52:34 PM PK_QuestionType: 17
06/14/2023 03:52:34 PM PK_QuestionType: 17
06/14/2023 03:52:34 PM PK_QuestionType: 17
06/14/2023 03:52:34 PM PK_QuestionType: 17
06/14/2023 03:52:34 PM PK_QuestionType: 17
06/14/2023 03:52:34 PM PK_QuestionType: 17
06/14/2023 03:52:34 PM PK_QuestionType: 17
06/14/2023 03:52:34 PM PK_QuestionType: 17
06/14/2023 03:52:34 PM PK_QuestionType: 17
06/14/2023 03:52:34 PM PK_QuestionType: 17
06/14/2023 03:52:34 PM PK_QuestionType: 17
06/14/2023 03:52:34 PM PK_QuestionType: 17
06/14/2023 03:52:34 PM PK_QuestionType: 17
06/14/2023 03:52:34 PM PK_QuestionType: 17
06/14/2023 03:52:34 PM PK_QuestionType: 17
06/14/2023 03:52:34 PM PK_QuestionType: 17
06/14/2023 03:52:34 PM PK_QuestionType: 17
06/14/2023 03:52:34 PM PK_QuestionType: 17
06/14/2023 03:52:34 PM PK_QuestionType: 17
06/14/2023 03:52:34 PM PK_QuestionType: 17
06/14/2023 03:52:34 PM PK_QuestionType: 17
06/14/2023 03:52:34 PM PK_QuestionType: 17
06/14/2023 03:52:34 PM PK_QuestionType: 17
06/14/2023 03:52:34 PM PK_QuestionType: 17
06/14/2023 04:00:14 PM 
            SELECT DISTINCT
            ISNULL(QID, '') [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4028,4029,4030,4031,4032,4033,4034,4035,4036,4037,4038,4039,4040,4041,4042,4043,4044,4045,4046,4047,4048,4049,4050,4051,4052,4053,4054,4055,4056,4057,4058,4059,4060,4061,4062,4063,4064,4065,4066,4067,4068,4069,4070,4071,4072,4073,4074,4075,4076,4077,4078,4079,4080,4081,4082,4083,4084,4085,4086,4087,4088,4089,4090,4091,4092,4093,4094,4095,4096,4097,4098,4099,4100,4101,4102,4103,4104,4105,4106,4107,4108,4109,4110,4111,4112,4113,4114,4115,4116,4117,4118,4119,4120,4121,4122,4123,4124,4125,4126,4127,4128,4129,4130,4131,4132,4133,4134,4135,4136,4137,4138,4139,4140,4141,4142,4143,4144,4145,4146,4147,4148,4149,4150,4151,4152,4153,4154,4155,4156,4157,4158,4159,4160,4161,4162,4163,4164,4165,4166,4167,4168,4169,4170,4171,4172,4173,4174,4175,4176,4177,4178,4179,4180,4181,4182,4183,4184,4185,4186,4187,4188,4189,4190,4191,4192,4193,4194,4195,4196,4197,4198,4199,4200,4201,4202,4203,4204,4205,4206,4207,4208,4209,4210,4211,4212,4213,4214,4215,4216,4217,4218,4219,4220,4221,4222,4223,4224,4225,4226,4227,4228,4229,4230,4231,4232,4233,4234,4235,4236,4237,4238,4239,4240,4241,4242,4243,4244,4245,4246,4247,4248,4249,4250,4251,4252,4253,4254,4255,4256,4257,4258) ORDER BY SortPos; 
06/14/2023 04:00:14 PM PK_QuestionType: 17
06/14/2023 04:00:14 PM PK_QuestionType: 17
06/14/2023 04:00:14 PM PK_QuestionType: 17
06/14/2023 04:00:14 PM PK_QuestionType: 17
06/14/2023 04:00:14 PM PK_QuestionType: 17
06/14/2023 04:00:14 PM PK_QuestionType: 17
06/14/2023 04:00:14 PM PK_QuestionType: 17
06/14/2023 04:00:14 PM PK_QuestionType: 17
06/14/2023 04:00:14 PM PK_QuestionType: 17
06/14/2023 04:00:14 PM PK_QuestionType: 17
06/14/2023 04:00:14 PM PK_QuestionType: 17
06/14/2023 04:00:14 PM PK_QuestionType: 17
06/14/2023 04:00:14 PM PK_QuestionType: 17
06/14/2023 04:00:14 PM PK_QuestionType: 17
06/14/2023 04:00:14 PM PK_QuestionType: 17
06/14/2023 04:00:14 PM PK_QuestionType: 17
06/14/2023 04:00:14 PM PK_QuestionType: 17
06/14/2023 04:00:14 PM PK_QuestionType: 17
06/14/2023 04:00:14 PM PK_QuestionType: 17
06/14/2023 04:00:14 PM PK_QuestionType: 17
06/14/2023 04:00:14 PM PK_QuestionType: 17
06/14/2023 04:00:14 PM PK_QuestionType: 17
06/14/2023 04:00:14 PM PK_QuestionType: 17
06/14/2023 04:00:14 PM PK_QuestionType: 17
06/14/2023 04:00:14 PM PK_QuestionType: 17
06/14/2023 04:00:14 PM PK_QuestionType: 17
06/14/2023 04:00:14 PM PK_QuestionType: 17
06/14/2023 04:00:14 PM PK_QuestionType: 17
06/14/2023 04:00:14 PM PK_QuestionType: 17
06/14/2023 04:00:14 PM PK_QuestionType: 17
06/14/2023 04:00:23 PM 
            SELECT DISTINCT
            ISNULL(QID, '') [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4028,4029,4030,4031,4032,4033,4034,4035,4036,4037,4038,4039,4040,4041,4042,4043,4044,4045,4046,4047,4048,4049,4050,4051,4052,4053,4054,4055,4056,4057,4058,4059,4060,4061,4062,4063,4064,4065,4066,4067,4068,4069,4070,4071,4072,4073,4074,4075,4076,4077,4078,4079,4080,4081,4082,4083,4084,4085,4086,4087,4088,4089,4090,4091,4092,4093,4094,4095,4096,4097,4098,4099,4100,4101,4102,4103,4104,4105,4106,4107,4108,4109,4110,4111,4112,4113,4114,4115,4116,4117,4118,4119,4120,4121,4122,4123,4124,4125,4126,4127,4128,4129,4130,4131,4132,4133,4134,4135,4136,4137,4138,4139,4140,4141,4142,4143,4144,4145,4146,4147,4148,4149,4150,4151,4152,4153,4154,4155,4156,4157,4158,4159,4160,4161,4162,4163,4164,4165,4166,4167,4168,4169,4170,4171,4172,4173,4174,4175,4176,4177,4178,4179,4180,4181,4182,4183,4184,4185,4186,4187,4188,4189,4190,4191,4192,4193,4194,4195,4196,4197,4198,4199,4200,4201,4202,4203,4204,4205,4206,4207,4208,4209,4210,4211,4212,4213,4214,4215,4216,4217,4218,4219,4220,4221,4222,4223,4224,4225,4226,4227,4228,4229,4230,4231,4232,4233,4234,4235,4236,4237,4238,4239,4240,4241,4242,4243,4244,4245,4246,4247,4248,4249,4250,4251,4252,4253,4254,4255,4256,4257,4258) ORDER BY SortPos; 
06/14/2023 04:00:23 PM PK_QuestionType: 17
06/14/2023 04:00:23 PM PK_QuestionType: 17
06/14/2023 04:00:23 PM PK_QuestionType: 17
06/14/2023 04:00:23 PM PK_QuestionType: 17
06/14/2023 04:00:23 PM PK_QuestionType: 17
06/14/2023 04:00:23 PM PK_QuestionType: 17
06/14/2023 04:00:23 PM PK_QuestionType: 17
06/14/2023 04:00:23 PM PK_QuestionType: 17
06/14/2023 04:00:23 PM PK_QuestionType: 17
06/14/2023 04:00:23 PM PK_QuestionType: 17
06/14/2023 04:00:23 PM PK_QuestionType: 17
06/14/2023 04:00:23 PM PK_QuestionType: 17
06/14/2023 04:00:23 PM PK_QuestionType: 17
06/14/2023 04:00:23 PM PK_QuestionType: 17
06/14/2023 04:00:23 PM PK_QuestionType: 17
06/14/2023 04:00:23 PM PK_QuestionType: 17
06/14/2023 04:00:23 PM PK_QuestionType: 17
06/14/2023 04:00:23 PM PK_QuestionType: 17
06/14/2023 04:00:23 PM PK_QuestionType: 17
06/14/2023 04:00:23 PM PK_QuestionType: 17
06/14/2023 04:00:23 PM PK_QuestionType: 17
06/14/2023 04:00:23 PM PK_QuestionType: 17
06/14/2023 04:00:23 PM PK_QuestionType: 17
06/14/2023 04:00:23 PM PK_QuestionType: 17
06/14/2023 04:00:23 PM PK_QuestionType: 17
06/14/2023 04:00:23 PM PK_QuestionType: 17
06/14/2023 04:00:23 PM PK_QuestionType: 17
06/14/2023 04:00:23 PM PK_QuestionType: 17
06/14/2023 04:00:23 PM PK_QuestionType: 17
06/14/2023 04:00:23 PM PK_QuestionType: 17
06/14/2023 04:14:59 PM init
06/14/2023 04:15:41 PM init
06/14/2023 04:16:33 PM init
06/14/2023 04:17:31 PM 
            SELECT DISTINCT
            ISNULL(QID, '') [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4028,4029,4030,4031,4032,4033,4034,4035,4036,4037,4038,4039,4040,4041,4042,4043,4044,4045,4046,4047,4048,4049,4050,4051,4052,4053,4054,4055,4056,4057,4058,4059,4060,4061,4062,4063,4064,4065,4066,4067,4068,4069,4070,4071,4072,4073,4074,4075,4076,4077,4078,4079,4080,4081,4082,4083,4084,4085,4086,4087,4088,4089,4090,4091,4092,4093,4094,4095,4096,4097,4098,4099,4100,4101,4102,4103,4104,4105,4106,4107,4108,4109,4110,4111,4112,4113,4114,4115,4116,4117,4118,4119,4120,4121,4122,4123,4124,4125,4126,4127,4128,4129,4130,4131,4132,4133,4134,4135,4136,4137,4138,4139,4140,4141,4142,4143,4144,4145,4146,4147,4148,4149,4150,4151,4152,4153,4154,4155,4156,4157,4158,4159,4160,4161,4162,4163,4164,4165,4166,4167,4168,4169,4170,4171,4172,4173,4174,4175,4176,4177,4178,4179,4180,4181,4182,4183,4184,4185,4186,4187,4188,4189,4190,4191,4192,4193,4194,4195,4196,4197,4198,4199,4200,4201,4202,4203,4204,4205,4206,4207,4208,4209,4210,4211,4212,4213,4214,4215,4216,4217,4218,4219,4220,4221,4222,4223,4224,4225,4226,4227,4228,4229,4230,4231,4232,4233,4234,4235,4236,4237,4238,4239,4240,4241,4242,4243,4244,4245,4246,4247,4248,4249,4250,4251,4252,4253,4254,4255,4256,4257,4258) ORDER BY SortPos; 
06/14/2023 04:17:31 PM PK_QuestionType: 17
06/14/2023 04:17:31 PM PK_QuestionType: 17
06/14/2023 04:17:31 PM PK_QuestionType: 17
06/14/2023 04:17:31 PM PK_QuestionType: 17
06/14/2023 04:17:31 PM PK_QuestionType: 17
06/14/2023 04:17:31 PM PK_QuestionType: 17
06/14/2023 04:17:31 PM PK_QuestionType: 17
06/14/2023 04:17:31 PM PK_QuestionType: 17
06/14/2023 04:17:31 PM PK_QuestionType: 17
06/14/2023 04:17:31 PM PK_QuestionType: 17
06/14/2023 04:17:31 PM PK_QuestionType: 17
06/14/2023 04:17:31 PM PK_QuestionType: 17
06/14/2023 04:17:31 PM PK_QuestionType: 17
06/14/2023 04:17:31 PM PK_QuestionType: 17
06/14/2023 04:17:31 PM PK_QuestionType: 17
06/14/2023 04:17:31 PM PK_QuestionType: 17
06/14/2023 04:17:31 PM PK_QuestionType: 17
06/14/2023 04:17:31 PM PK_QuestionType: 17
06/14/2023 04:17:31 PM PK_QuestionType: 17
06/14/2023 04:17:31 PM PK_QuestionType: 17
06/14/2023 04:17:31 PM PK_QuestionType: 17
06/14/2023 04:17:31 PM PK_QuestionType: 17
06/14/2023 04:17:31 PM PK_QuestionType: 17
06/14/2023 04:17:31 PM PK_QuestionType: 17
06/14/2023 04:17:31 PM PK_QuestionType: 17
06/14/2023 04:17:31 PM PK_QuestionType: 17
06/14/2023 04:17:31 PM PK_QuestionType: 17
06/14/2023 04:17:31 PM PK_QuestionType: 17
06/14/2023 04:17:31 PM PK_QuestionType: 17
06/14/2023 04:28:35 PM 
            SELECT DISTINCT
            ISNULL(QID, '') [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4028,4029,4030,4031,4032,4033,4034,4035,4036,4037,4038,4039,4040,4041,4042,4043,4044,4045,4046,4047,4048,4049,4050,4051,4052,4053,4054,4055,4056,4057,4058,4059,4060,4061,4062,4063,4064,4065,4066,4067,4068,4069,4070,4071,4072,4073,4074,4075,4076,4077,4078,4079,4080,4081,4082,4083,4084,4085,4086,4087,4088,4089,4090,4091,4092,4093,4094,4095,4096,4097,4098,4099,4100,4101,4102,4103,4104,4105,4106,4107,4108,4109,4110,4111,4112,4113,4114,4115,4116,4117,4118,4119,4120,4121,4122,4123,4124,4125,4126,4127,4128,4129,4130,4131,4132,4133,4134,4135,4136,4137,4138,4139,4140,4141,4142,4143,4144,4145,4146,4147,4148,4149,4150,4151,4152,4153,4154,4155,4156,4157,4158,4159,4160,4161,4162,4163,4164,4165,4166,4167,4168,4169,4170,4171,4172,4173,4174,4175,4176,4177,4178,4179,4180,4181,4182,4183,4184,4185,4186,4187,4188,4189,4190,4191,4192,4193,4194,4195,4196,4197,4198,4199,4200,4201,4202,4203,4204,4205,4206,4207,4208,4209,4210,4211,4212,4213,4214,4215,4216,4217,4218,4219,4220,4221,4222,4223,4224,4225,4226,4227,4228,4229,4230,4231,4232,4233,4234,4235,4236,4237,4238,4239,4240,4241,4242,4243,4244,4245,4246,4247,4248,4249,4250,4251,4252,4253,4254,4255,4256,4257,4258) ORDER BY SortPos; 
06/14/2023 04:28:36 PM PK_QuestionType: 17
06/14/2023 04:28:36 PM PK_QuestionType: 17
06/14/2023 04:28:36 PM PK_QuestionType: 17
06/14/2023 04:28:36 PM PK_QuestionType: 17
06/14/2023 04:28:36 PM PK_QuestionType: 17
06/14/2023 04:28:36 PM PK_QuestionType: 17
06/14/2023 04:28:36 PM PK_QuestionType: 17
06/14/2023 04:28:36 PM PK_QuestionType: 17
06/14/2023 04:28:36 PM PK_QuestionType: 17
06/14/2023 04:28:36 PM PK_QuestionType: 17
06/14/2023 04:28:36 PM PK_QuestionType: 17
06/14/2023 04:28:36 PM PK_QuestionType: 17
06/14/2023 04:28:36 PM PK_QuestionType: 17
06/14/2023 04:28:36 PM PK_QuestionType: 17
06/14/2023 04:28:36 PM PK_QuestionType: 17
06/14/2023 04:28:36 PM PK_QuestionType: 17
06/14/2023 04:28:36 PM PK_QuestionType: 17
06/14/2023 04:28:36 PM PK_QuestionType: 17
06/14/2023 04:28:36 PM PK_QuestionType: 17
06/14/2023 04:28:36 PM PK_QuestionType: 17
06/14/2023 04:28:36 PM PK_QuestionType: 17
06/14/2023 04:28:36 PM PK_QuestionType: 17
06/14/2023 04:28:36 PM PK_QuestionType: 17
06/14/2023 04:28:36 PM PK_QuestionType: 17
06/14/2023 04:28:36 PM PK_QuestionType: 17
06/14/2023 04:28:36 PM PK_QuestionType: 17
06/14/2023 04:43:48 PM PK_QuestionType: 17
06/15/2023 08:00:27 AM 
            SELECT DISTINCT
            ISNULL(QID, '') [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4028,4029,4030,4031,4032,4033,4034,4035,4036,4037,4038,4039,4040,4041,4042,4043,4044,4045,4046,4047,4048,4049,4050,4051,4052,4053,4054,4055,4056,4057,4058,4059,4060,4061,4062,4063,4064,4065,4066,4067,4068,4069,4070,4071,4072,4073,4074,4075,4076,4077,4078,4079,4080,4081,4082,4083,4084,4085,4086,4087,4088,4089,4090,4091,4092,4093,4094,4095,4096,4097,4098,4099,4100,4101,4102,4103,4104,4105,4106,4107,4108,4109,4110,4111,4112,4113,4114,4115,4116,4117,4118,4119,4120,4121,4122,4123,4124,4125,4126,4127,4128,4129,4130,4131,4132,4133,4134,4135,4136,4137,4138,4139,4140,4141,4142,4143,4144,4145,4146,4147,4148,4149,4150,4151,4152,4153,4154,4155,4156,4157,4158,4159,4160,4161,4162,4163,4164,4165,4166,4167,4168,4169,4170,4171,4172,4173,4174,4175,4176,4177,4178,4179,4180,4181,4182,4183,4184,4185,4186,4187,4188,4189,4190,4191,4192,4193,4194,4195,4196,4197,4198,4199,4200,4201,4202,4203,4204,4205,4206,4207,4208,4209,4210,4211,4212,4213,4214,4215,4216,4217,4218,4219,4220,4221,4222,4223,4224,4225,4226,4227,4228,4229,4230,4231,4232,4233,4234,4235,4236,4237,4238,4239,4240,4241,4242,4243,4244,4245,4246,4247,4248,4249,4250,4251,4252,4253,4254,4255,4256,4257,4258) ORDER BY SortPos; 
06/15/2023 08:00:28 AM PK_QuestionType: 17
06/15/2023 08:00:28 AM PK_QuestionType: 17
06/15/2023 08:00:28 AM PK_QuestionType: 17
06/15/2023 08:00:28 AM PK_QuestionType: 17
06/15/2023 08:00:28 AM PK_QuestionType: 17
06/15/2023 08:00:28 AM PK_QuestionType: 17
06/15/2023 08:00:28 AM PK_QuestionType: 17
06/15/2023 08:00:28 AM PK_QuestionType: 17
06/15/2023 08:00:28 AM PK_QuestionType: 17
06/15/2023 08:00:28 AM PK_QuestionType: 17
06/15/2023 08:00:28 AM PK_QuestionType: 17
06/15/2023 08:00:28 AM PK_QuestionType: 17
06/15/2023 08:00:28 AM PK_QuestionType: 17
06/15/2023 08:00:28 AM PK_QuestionType: 17
06/15/2023 08:00:28 AM PK_QuestionType: 17
06/15/2023 08:00:28 AM PK_QuestionType: 17
06/15/2023 08:00:28 AM PK_QuestionType: 17
06/15/2023 08:00:28 AM PK_QuestionType: 17
06/15/2023 08:00:28 AM PK_QuestionType: 17
06/15/2023 08:00:28 AM PK_QuestionType: 17
06/15/2023 08:00:28 AM PK_QuestionType: 17
06/15/2023 08:00:28 AM PK_QuestionType: 17
06/15/2023 08:00:28 AM PK_QuestionType: 17
06/15/2023 08:00:28 AM PK_QuestionType: 17
06/15/2023 08:02:27 AM 
            SELECT DISTINCT
            ISNULL(QID, '') [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4028,4029,4030,4031,4032,4033,4034,4035,4036,4037,4038,4039,4040,4041,4042,4043,4044,4045,4046,4047,4048,4049,4050,4051,4052,4053,4054,4055,4056,4057,4058,4059,4060,4061,4062,4063,4064,4065,4066,4067,4068,4069,4070,4071,4072,4073,4074,4075,4076,4077,4078,4079,4080,4081,4082,4083,4084,4085,4086,4087,4088,4089,4090,4091,4092,4093,4094,4095,4096,4097,4098,4099,4100,4101,4102,4103,4104,4105,4106,4107,4108,4109,4110,4111,4112,4113,4114,4115,4116,4117,4118,4119,4120,4121,4122,4123,4124,4125,4126,4127,4128,4129,4130,4131,4132,4133,4134,4135,4136,4137,4138,4139,4140,4141,4142,4143,4144,4145,4146,4147,4148,4149,4150,4151,4152,4153,4154,4155,4156,4157,4158,4159,4160,4161,4162,4163,4164,4165,4166,4167,4168,4169,4170,4171,4172,4173,4174,4175,4176,4177,4178,4179,4180,4181,4182,4183,4184,4185,4186,4187,4188,4189,4190,4191,4192,4193,4194,4195,4196,4197,4198,4199,4200,4201,4202,4203,4204,4205,4206,4207,4208,4209,4210,4211,4212,4213,4214,4215,4216,4217,4218,4219,4220,4221,4222,4223,4224,4225,4226,4227,4228,4229,4230,4231,4232,4233,4234,4235,4236,4237,4238,4239,4240,4241,4242,4243,4244,4245,4246,4247,4248,4249,4250,4251,4252,4253,4254,4255,4256,4257,4258) ORDER BY SortPos; 
06/15/2023 08:02:27 AM PK_QuestionType: 17
06/15/2023 08:02:39 AM 
            SELECT DISTINCT
            ISNULL(QID, '') [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4028,4029,4030,4031,4032,4033,4034,4035,4036,4037,4038,4039,4040,4041,4042,4043,4044,4045,4046,4047,4048,4049,4050,4051,4052,4053,4054,4055,4056,4057,4058,4059,4060,4061,4062,4063,4064,4065,4066,4067,4068,4069,4070,4071,4072,4073,4074,4075,4076,4077,4078,4079,4080,4081,4082,4083,4084,4085,4086,4087,4088,4089,4090,4091,4092,4093,4094,4095,4096,4097,4098,4099,4100,4101,4102,4103,4104,4105,4106,4107,4108,4109,4110,4111,4112,4113,4114,4115,4116,4117,4118,4119,4120,4121,4122,4123,4124,4125,4126,4127,4128,4129,4130,4131,4132,4133,4134,4135,4136,4137,4138,4139,4140,4141,4142,4143,4144,4145,4146,4147,4148,4149,4150,4151,4152,4153,4154,4155,4156,4157,4158,4159,4160,4161,4162,4163,4164,4165,4166,4167,4168,4169,4170,4171,4172,4173,4174,4175,4176,4177,4178,4179,4180,4181,4182,4183,4184,4185,4186,4187,4188,4189,4190,4191,4192,4193,4194,4195,4196,4197,4198,4199,4200,4201,4202,4203,4204,4205,4206,4207,4208,4209,4210,4211,4212,4213,4214,4215,4216,4217,4218,4219,4220,4221,4222,4223,4224,4225,4226,4227,4228,4229,4230,4231,4232,4233,4234,4235,4236,4237,4238,4239,4240,4241,4242,4243,4244,4245,4246,4247,4248,4249,4250,4251,4252,4253,4254,4255,4256,4257,4258) ORDER BY SortPos; 
06/15/2023 08:02:39 AM PK_QuestionType: 17
06/15/2023 08:02:39 AM PK_QuestionType: 17
06/15/2023 08:02:39 AM PK_QuestionType: 17
06/15/2023 08:02:39 AM PK_QuestionType: 17
06/15/2023 08:02:39 AM PK_QuestionType: 17
06/15/2023 08:02:39 AM PK_QuestionType: 17
06/15/2023 08:02:39 AM PK_QuestionType: 17
06/15/2023 08:02:39 AM PK_QuestionType: 17
06/15/2023 08:02:39 AM PK_QuestionType: 17
06/15/2023 08:02:39 AM PK_QuestionType: 17
06/15/2023 08:02:39 AM PK_QuestionType: 17
06/15/2023 08:02:39 AM PK_QuestionType: 17
06/15/2023 08:02:39 AM PK_QuestionType: 17
06/15/2023 08:02:39 AM PK_QuestionType: 17
06/15/2023 08:02:39 AM PK_QuestionType: 17
06/15/2023 08:02:39 AM PK_QuestionType: 17
06/15/2023 08:02:39 AM PK_QuestionType: 17
06/15/2023 08:02:39 AM PK_QuestionType: 17
06/15/2023 08:02:39 AM PK_QuestionType: 17
06/15/2023 08:02:39 AM PK_QuestionType: 17
06/15/2023 08:02:39 AM PK_QuestionType: 17
06/15/2023 08:02:39 AM PK_QuestionType: 17
06/15/2023 08:02:39 AM PK_QuestionType: 17
06/15/2023 08:02:39 AM PK_QuestionType: 17
06/15/2023 08:02:51 AM 
            SELECT DISTINCT
            ISNULL(QID, '') [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4028,4029,4030,4031,4032,4033,4034,4035,4036,4037,4038,4039,4040,4041,4042,4043,4044,4045,4046,4047,4048,4049,4050,4051,4052,4053,4054,4055,4056,4057,4058,4059,4060,4061,4062,4063,4064,4065,4066,4067,4068,4069,4070,4071,4072,4073,4074,4075,4076,4077,4078,4079,4080,4081,4082,4083,4084,4085,4086,4087,4088,4089,4090,4091,4092,4093,4094,4095,4096,4097,4098,4099,4100,4101,4102,4103,4104,4105,4106,4107,4108,4109,4110,4111,4112,4113,4114,4115,4116,4117,4118,4119,4120,4121,4122,4123,4124,4125,4126,4127,4128,4129,4130,4131,4132,4133,4134,4135,4136,4137,4138,4139,4140,4141,4142,4143,4144,4145,4146,4147,4148,4149,4150,4151,4152,4153,4154,4155,4156,4157,4158,4159,4160,4161,4162,4163,4164,4165,4166,4167,4168,4169,4170,4171,4172,4173,4174,4175,4176,4177,4178,4179,4180,4181,4182,4183,4184,4185,4186,4187,4188,4189,4190,4191,4192,4193,4194,4195,4196,4197,4198,4199,4200,4201,4202,4203,4204,4205,4206,4207,4208,4209,4210,4211,4212,4213,4214,4215,4216,4217,4218,4219,4220,4221,4222,4223,4224,4225,4226,4227,4228,4229,4230,4231,4232,4233,4234,4235,4236,4237,4238,4239,4240,4241,4242,4243,4244,4245,4246,4247,4248,4249,4250,4251,4252,4253,4254,4255,4256,4257,4258) ORDER BY SortPos; 
06/15/2023 08:02:51 AM PK_QuestionType: 17
06/15/2023 08:02:51 AM PK_QuestionType: 17
06/15/2023 08:02:51 AM PK_QuestionType: 17
06/15/2023 08:02:51 AM PK_QuestionType: 17
06/15/2023 08:02:51 AM PK_QuestionType: 17
06/15/2023 08:02:51 AM PK_QuestionType: 17
06/15/2023 08:02:51 AM PK_QuestionType: 17
06/15/2023 08:02:51 AM PK_QuestionType: 17
06/15/2023 08:02:51 AM PK_QuestionType: 17
06/15/2023 08:02:51 AM PK_QuestionType: 17
06/15/2023 08:02:51 AM PK_QuestionType: 17
06/15/2023 08:02:51 AM PK_QuestionType: 17
06/15/2023 08:02:51 AM PK_QuestionType: 17
06/15/2023 08:02:51 AM PK_QuestionType: 17
06/15/2023 08:02:51 AM PK_QuestionType: 17
06/15/2023 08:02:51 AM PK_QuestionType: 17
06/15/2023 08:02:51 AM PK_QuestionType: 17
06/15/2023 08:02:51 AM PK_QuestionType: 17
06/15/2023 08:02:51 AM PK_QuestionType: 17
06/15/2023 08:02:51 AM PK_QuestionType: 17
06/15/2023 08:02:51 AM PK_QuestionType: 17
06/15/2023 08:02:51 AM PK_QuestionType: 17
06/15/2023 08:02:51 AM PK_QuestionType: 17
06/15/2023 08:02:51 AM PK_QuestionType: 17
06/15/2023 08:03:39 AM 
            SELECT DISTINCT
            ISNULL(QID, '') [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4028,4029,4030,4031,4032,4033,4034,4035,4036,4037,4038,4039,4040,4041,4042,4043,4044,4045,4046,4047,4048,4049,4050,4051,4052,4053,4054,4055,4056,4057,4058,4059,4060,4061,4062,4063,4064,4065,4066,4067,4068,4069,4070,4071,4072,4073,4074,4075,4076,4077,4078,4079,4080,4081,4082,4083,4084,4085,4086,4087,4088,4089,4090,4091,4092,4093,4094,4095,4096,4097,4098,4099,4100,4101,4102,4103,4104,4105,4106,4107,4108,4109,4110,4111,4112,4113,4114,4115,4116,4117,4118,4119,4120,4121,4122,4123,4124,4125,4126,4127,4128,4129,4130,4131,4132,4133,4134,4135,4136,4137,4138,4139,4140,4141,4142,4143,4144,4145,4146,4147,4148,4149,4150,4151,4152,4153,4154,4155,4156,4157,4158,4159,4160,4161,4162,4163,4164,4165,4166,4167,4168,4169,4170,4171,4172,4173,4174,4175,4176,4177,4178,4179,4180,4181,4182,4183,4184,4185,4186,4187,4188,4189,4190,4191,4192,4193,4194,4195,4196,4197,4198,4199,4200,4201,4202,4203,4204,4205,4206,4207,4208,4209,4210,4211,4212,4213,4214,4215,4216,4217,4218,4219,4220,4221,4222,4223,4224,4225,4226,4227,4228,4229,4230,4231,4232,4233,4234,4235,4236,4237,4238,4239,4240,4241,4242,4243,4244,4245,4246,4247,4248,4249,4250,4251,4252,4253,4254,4255,4256,4257,4258) ORDER BY SortPos; 
06/15/2023 08:03:40 AM PK_QuestionType: 17
06/15/2023 08:03:40 AM PK_QuestionType: 17
06/15/2023 08:03:40 AM PK_QuestionType: 17
06/15/2023 08:03:40 AM PK_QuestionType: 17
06/15/2023 08:03:40 AM PK_QuestionType: 17
06/15/2023 08:03:40 AM PK_QuestionType: 17
06/15/2023 08:03:40 AM PK_QuestionType: 17
06/15/2023 08:03:40 AM PK_QuestionType: 17
06/15/2023 08:03:40 AM PK_QuestionType: 17
06/15/2023 08:03:40 AM PK_QuestionType: 17
06/15/2023 08:03:40 AM PK_QuestionType: 17
06/15/2023 08:03:40 AM PK_QuestionType: 17
06/15/2023 08:03:40 AM PK_QuestionType: 17
06/15/2023 08:03:40 AM PK_QuestionType: 17
06/15/2023 08:03:40 AM PK_QuestionType: 17
06/15/2023 08:03:40 AM PK_QuestionType: 17
06/15/2023 08:03:40 AM PK_QuestionType: 17
06/15/2023 08:03:40 AM PK_QuestionType: 17
06/15/2023 08:03:40 AM PK_QuestionType: 17
06/15/2023 08:03:40 AM PK_QuestionType: 17
06/15/2023 08:03:40 AM PK_QuestionType: 17
06/15/2023 08:03:40 AM PK_QuestionType: 17
06/15/2023 08:03:40 AM PK_QuestionType: 17
06/15/2023 08:03:40 AM PK_QuestionType: 17
06/15/2023 08:17:18 AM 
            SELECT DISTINCT
            ISNULL(QID, '') [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4028,4029,4030,4031,4032,4033,4034,4035,4036,4037,4038,4039,4040,4041,4042,4043,4044,4045,4046,4047,4048,4049,4050,4051,4052,4053,4054,4055,4056,4057,4058,4059,4060,4061,4062,4063,4064,4065,4066,4067,4068,4069,4070,4071,4072,4073,4074,4075,4076,4077,4078,4079,4080,4081,4082,4083,4084,4085,4086,4087,4088,4089,4090,4091,4092,4093,4094,4095,4096,4097,4098,4099,4100,4101,4102,4103,4104,4105,4106,4107,4108,4109,4110,4111,4112,4113,4114,4115,4116,4117,4118,4119,4120,4121,4122,4123,4124,4125,4126,4127,4128,4129,4130,4131,4132,4133,4134,4135,4136,4137,4138,4139,4140,4141,4142,4143,4144,4145,4146,4147,4148,4149,4150,4151,4152,4153,4154,4155,4156,4157,4158,4159,4160,4161,4162,4163,4164,4165,4166,4167,4168,4169,4170,4171,4172,4173,4174,4175,4176,4177,4178,4179,4180,4181,4182,4183,4184,4185,4186,4187,4188,4189,4190,4191,4192,4193,4194,4195,4196,4197,4198,4199,4200,4201,4202,4203,4204,4205,4206,4207,4208,4209,4210,4211,4212,4213,4214,4215,4216,4217,4218,4219,4220,4221,4222,4223,4224,4225,4226,4227,4228,4229,4230,4231,4232,4233,4234,4235,4236,4237,4238,4239,4240,4241,4242,4243,4244,4245,4246,4247,4248,4249,4250,4251,4252,4253,4254,4255,4256,4257,4258) ORDER BY SortPos; 
06/15/2023 08:17:19 AM PK_QuestionType: 17
06/15/2023 08:17:19 AM PK_QuestionType: 17
06/15/2023 08:17:19 AM PK_QuestionType: 17
06/15/2023 08:17:19 AM PK_QuestionType: 17
06/15/2023 08:17:19 AM PK_QuestionType: 17
06/15/2023 08:17:19 AM PK_QuestionType: 17
06/15/2023 08:17:19 AM PK_QuestionType: 17
06/15/2023 08:17:19 AM PK_QuestionType: 17
06/15/2023 08:17:19 AM PK_QuestionType: 17
06/15/2023 08:17:19 AM PK_QuestionType: 17
06/15/2023 08:17:19 AM PK_QuestionType: 17
06/15/2023 08:17:19 AM PK_QuestionType: 17
06/15/2023 08:17:19 AM PK_QuestionType: 17
06/15/2023 08:17:19 AM PK_QuestionType: 17
06/15/2023 08:17:19 AM PK_QuestionType: 17
06/15/2023 08:17:19 AM PK_QuestionType: 17
06/15/2023 08:17:19 AM PK_QuestionType: 17
06/15/2023 08:17:19 AM PK_QuestionType: 17
06/15/2023 08:17:19 AM PK_QuestionType: 17
06/15/2023 08:24:32 AM 
            SELECT DISTINCT
            ISNULL(QID, '') [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4028,4029,4030,4031,4032,4033,4034,4035,4036,4037,4038,4039,4040,4041,4042,4043,4044,4045,4046,4047,4048,4049,4050,4051,4052,4053,4054,4055,4056,4057,4058,4059,4060,4061,4062,4063,4064,4065,4066,4067,4068,4069,4070,4071,4072,4073,4074,4075,4076,4077,4078,4079,4080,4081,4082,4083,4084,4085,4086,4087,4088,4089,4090,4091,4092,4093,4094,4095,4096,4097,4098,4099,4100,4101,4102,4103,4104,4105,4106,4107,4108,4109,4110,4111,4112,4113,4114,4115,4116,4117,4118,4119,4120,4121,4122,4123,4124,4125,4126,4127,4128,4129,4130,4131,4132,4133,4134,4135,4136,4137,4138,4139,4140,4141,4142,4143,4144,4145,4146,4147,4148,4149,4150,4151,4152,4153,4154,4155,4156,4157,4158,4159,4160,4161,4162,4163,4164,4165,4166,4167,4168,4169,4170,4171,4172,4173,4174,4175,4176,4177,4178,4179,4180,4181,4182,4183,4184,4185,4186,4187,4188,4189,4190,4191,4192,4193,4194,4195,4196,4197,4198,4199,4200,4201,4202,4203,4204,4205,4206,4207,4208,4209,4210,4211,4212,4213,4214,4215,4216,4217,4218,4219,4220,4221,4222,4223,4224,4225,4226,4227,4228,4229,4230,4231,4232,4233,4234,4235,4236,4237,4238,4239,4240,4241,4242,4243,4244,4245,4246,4247,4248,4249,4250,4251,4252,4253,4254,4255,4256,4257,4258) ORDER BY SortPos; 
06/15/2023 08:24:32 AM PK_QuestionType: 17
06/15/2023 08:24:32 AM PK_QuestionType: 17
06/15/2023 08:24:32 AM PK_QuestionType: 17
06/15/2023 08:24:32 AM PK_QuestionType: 17
06/15/2023 08:24:32 AM PK_QuestionType: 17
06/15/2023 08:24:32 AM PK_QuestionType: 17
06/15/2023 08:24:32 AM PK_QuestionType: 17
06/15/2023 08:24:32 AM PK_QuestionType: 17
06/15/2023 08:24:32 AM PK_QuestionType: 17
06/15/2023 08:24:32 AM PK_QuestionType: 17
06/15/2023 08:24:32 AM PK_QuestionType: 17
06/15/2023 08:24:32 AM PK_QuestionType: 17
06/15/2023 08:24:32 AM PK_QuestionType: 17
06/15/2023 08:24:32 AM PK_QuestionType: 17
06/15/2023 08:24:32 AM PK_QuestionType: 17
06/15/2023 08:24:32 AM PK_QuestionType: 17
06/15/2023 08:24:32 AM PK_QuestionType: 17
06/15/2023 08:24:32 AM PK_QuestionType: 17
06/15/2023 08:24:32 AM PK_QuestionType: 17
06/15/2023 08:45:34 AM 
            SELECT DISTINCT
            ISNULL(QID, '') [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4028,4029,4030,4031,4032,4033,4034,4035,4036,4037,4038,4039,4040,4041,4042,4043,4044,4045,4046,4047,4048,4049,4050,4051,4052,4053,4054,4055,4056,4057,4058,4059,4060,4061,4062,4063,4064,4065,4066,4067,4068,4069,4070,4071,4072,4073,4074,4075,4076,4077,4078,4079,4080,4081,4082,4083,4084,4085,4086,4087,4088,4089,4090,4091,4092,4093,4094,4095,4096,4097,4098,4099,4100,4101,4102,4103,4104,4105,4106,4107,4108,4109,4110,4111,4112,4113,4114,4115,4116,4117,4118,4119,4120,4121,4122,4123,4124,4125,4126,4127,4128,4129,4130,4131,4132,4133,4134,4135,4136,4137,4138,4139,4140,4141,4142,4143,4144,4145,4146,4147,4148,4149,4150,4151,4152,4153,4154,4155,4156,4157,4158,4159,4160,4161,4162,4163,4164,4165,4166,4167,4168,4169,4170,4171,4172,4173,4174,4175,4176,4177,4178,4179,4180,4181,4182,4183,4184,4185,4186,4187,4188,4189,4190,4191,4192,4193,4194,4195,4196,4197,4198,4199,4200,4201,4202,4203,4204,4205,4206,4207,4208,4209,4210,4211,4212,4213,4214,4215,4216,4217,4218,4219,4220,4221,4222,4223,4224,4225,4226,4227,4228,4229,4230,4231,4232,4233,4234,4235,4236,4237,4238,4239,4240,4241,4242,4243,4244,4245,4246,4247,4248,4249,4250,4251,4252,4253,4254,4255,4256,4257,4258) ORDER BY SortPos; 
06/15/2023 08:45:35 AM PK_QuestionType: 17
06/15/2023 08:45:49 AM 
            SELECT DISTINCT
            ISNULL(QID, '') [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4028,4029,4030,4031,4032,4033,4034,4035,4036,4037,4038,4039,4040,4041,4042,4043,4044,4045,4046,4047,4048,4049,4050,4051,4052,4053,4054,4055,4056,4057,4058,4059,4060,4061,4062,4063,4064,4065,4066,4067,4068,4069,4070,4071,4072,4073,4074,4075,4076,4077,4078,4079,4080,4081,4082,4083,4084,4085,4086,4087,4088,4089,4090,4091,4092,4093,4094,4095,4096,4097,4098,4099,4100,4101,4102,4103,4104,4105,4106,4107,4108,4109,4110,4111,4112,4113,4114,4115,4116,4117,4118,4119,4120,4121,4122,4123,4124,4125,4126,4127,4128,4129,4130,4131,4132,4133,4134,4135,4136,4137,4138,4139,4140,4141,4142,4143,4144,4145,4146,4147,4148,4149,4150,4151,4152,4153,4154,4155,4156,4157,4158,4159,4160,4161,4162,4163,4164,4165,4166,4167,4168,4169,4170,4171,4172,4173,4174,4175,4176,4177,4178,4179,4180,4181,4182,4183,4184,4185,4186,4187,4188,4189,4190,4191,4192,4193,4194,4195,4196,4197,4198,4199,4200,4201,4202,4203,4204,4205,4206,4207,4208,4209,4210,4211,4212,4213,4214,4215,4216,4217,4218,4219,4220,4221,4222,4223,4224,4225,4226,4227,4228,4229,4230,4231,4232,4233,4234,4235,4236,4237,4238,4239,4240,4241,4242,4243,4244,4245,4246,4247,4248,4249,4250,4251,4252,4253,4254,4255,4256,4257,4258) ORDER BY SortPos; 
06/15/2023 08:45:49 AM PK_QuestionType: 17
06/15/2023 08:45:53 AM PK_QuestionType: 17
06/15/2023 08:45:53 AM PK_QuestionType: 17
06/15/2023 08:45:53 AM PK_QuestionType: 17
06/15/2023 08:45:53 AM PK_QuestionType: 17
06/15/2023 08:45:53 AM PK_QuestionType: 17
06/15/2023 08:45:53 AM PK_QuestionType: 17
06/15/2023 08:45:53 AM PK_QuestionType: 17
06/15/2023 08:45:53 AM PK_QuestionType: 17
06/15/2023 08:45:53 AM PK_QuestionType: 17
06/15/2023 08:45:53 AM PK_QuestionType: 17
06/15/2023 08:45:53 AM PK_QuestionType: 17
06/15/2023 08:45:53 AM PK_QuestionType: 17
06/15/2023 08:45:53 AM PK_QuestionType: 17
06/15/2023 08:45:53 AM PK_QuestionType: 17
06/15/2023 08:45:53 AM PK_QuestionType: 17
06/15/2023 08:45:53 AM PK_QuestionType: 17
06/15/2023 08:45:53 AM PK_QuestionType: 17
06/15/2023 08:45:53 AM PK_QuestionType: 17
06/15/2023 10:24:02 AM 
            SELECT DISTINCT
            ISNULL(QID, '') [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4028,4029,4030,4031,4032,4033,4034,4035,4036,4037,4038,4039,4040,4041,4042,4043,4044,4045,4046,4047,4048,4049,4050,4051,4052,4053,4054,4055,4056,4057,4058,4059,4060,4061,4062,4063,4064,4065,4066,4067,4068,4069,4070,4071,4072,4073,4074,4075,4076,4077,4078,4079,4080,4081,4082,4083,4084,4085,4086,4087,4088,4089,4090,4091,4092,4093,4094,4095,4096,4097,4098,4099,4100,4101,4102,4103,4104,4105,4106,4107,4108,4109,4110,4111,4112,4113,4114,4115,4116,4117,4118,4119,4120,4121,4122,4123,4124,4125,4126,4127,4128,4129,4130,4131,4132,4133,4134,4135,4136,4137,4138,4139,4140,4141,4142,4143,4144,4145,4146,4147,4148,4149,4150,4151,4152,4153,4154,4155,4156,4157,4158,4159,4160,4161,4162,4163,4164,4165,4166,4167,4168,4169,4170,4171,4172,4173,4174,4175,4176,4177,4178,4179,4180,4181,4182,4183,4184,4185,4186,4187,4188,4189,4190,4191,4192,4193,4194,4195,4196,4197,4198,4199,4200,4201,4202,4203,4204,4205,4206,4207,4208,4209,4210,4211,4212,4213,4214,4215,4216,4217,4218,4219,4220,4221,4222,4223,4224,4225,4226,4227,4228,4229,4230,4231,4232,4233,4234,4235,4236,4237,4238,4239,4240,4241,4242,4243,4244,4245,4246,4247,4248,4249,4250,4251,4252,4253,4254,4255,4256,4257,4258) ORDER BY SortPos; 
06/15/2023 10:33:47 AM 
            SELECT DISTINCT
            ISNULL(QID, '') [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4028,4029,4030,4031,4032,4033,4034,4035,4036,4037,4038,4039,4040,4041,4042,4043,4044,4045,4046,4047,4048,4049,4050,4051,4052,4053,4054,4055,4056,4057,4058,4059,4060,4061,4062,4063,4064,4065,4066,4067,4068,4069,4070,4071,4072,4073,4074,4075,4076,4077,4078,4079,4080,4081,4082,4083,4084,4085,4086,4087,4088,4089,4090,4091,4092,4093,4094,4095,4096,4097,4098,4099,4100,4101,4102,4103,4104,4105,4106,4107,4108,4109,4110,4111,4112,4113,4114,4115,4116,4117,4118,4119,4120,4121,4122,4123,4124,4125,4126,4127,4128,4129,4130,4131,4132,4133,4134,4135,4136,4137,4138,4139,4140,4141,4142,4143,4144,4145,4146,4147,4148,4149,4150,4151,4152,4153,4154,4155,4156,4157,4158,4159,4160,4161,4162,4163,4164,4165,4166,4167,4168,4169,4170,4171,4172,4173,4174,4175,4176,4177,4178,4179,4180,4181,4182,4183,4184,4185,4186,4187,4188,4189,4190,4191,4192,4193,4194,4195,4196,4197,4198,4199,4200,4201,4202,4203,4204,4205,4206,4207,4208,4209,4210,4211,4212,4213,4214,4215,4216,4217,4218,4219,4220,4221,4222,4223,4224,4225,4226,4227,4228,4229,4230,4231,4232,4233,4234,4235,4236,4237,4238,4239,4240,4241,4242,4243,4244,4245,4246,4247,4248,4249,4250,4251,4252,4253,4254,4255,4256,4257,4258) ORDER BY SortPos; 
06/15/2023 10:35:08 AM 
            SELECT DISTINCT
            ISNULL(QID, '') [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (3400,3401,3402,3403,3404) ORDER BY SortPos; 
06/15/2023 10:35:33 AM 
            SELECT DISTINCT
            ISNULL(QID, '') [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4028,4029,4030,4031,4032,4033,4034,4035,4036,4037,4038,4039,4040,4041,4042,4043,4044,4045,4046,4047) ORDER BY SortPos; 
06/15/2023 10:42:24 AM 
            SELECT DISTINCT
            ISNULL(QID, '') [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4028,4029,4030,4031,4032,4033,4034,4035,4036,4037,4038,4039,4040,4041,4042,4043,4044,4045,4046,4047) ORDER BY SortPos; 
06/15/2023 10:43:37 AM 
            SELECT DISTINCT
            ISNULL(QID, '') [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4028,4029,4030,4031,4032,4033,4034,4035,4036,4037,4038,4039,4040,4041,4042,4043,4044,4045,4046,4047) ORDER BY SortPos; 
06/15/2023 10:44:13 AM 
            SELECT DISTINCT
            ISNULL(QID, '') [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4190,4191,4192,4193,4194,4195,4196,4197,4198,4199) ORDER BY SortPos; 
06/15/2023 10:44:59 AM 
            SELECT DISTINCT
            ISNULL(QID, '') [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4190,4191,4192,4193,4194,4195,4196,4197,4198,4199) ORDER BY SortPos; 
06/15/2023 10:45:40 AM 
            SELECT DISTINCT
            ISNULL(QID, '') [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4028,4029,4030,4031,4032,4033,4034,4035,4036,4037,4038,4039,4040,4041,4042,4043,4044,4045,4046,4047,4048,4049,4050,4051,4052,4053,4054,4055,4056,4057,4058,4059,4060,4061,4062,4063,4064,4065,4066,4067,4068,4069,4070,4071,4072,4073,4074,4075,4076,4077,4078,4079,4080,4081,4082,4083,4084,4085,4086,4087,4088,4089,4090,4091,4092,4093,4094,4095,4096,4097,4098,4099,4100,4101,4102,4103,4104,4105,4106,4107,4108,4109,4110,4111,4112,4113,4114,4115,4116,4117,4118,4119,4120,4121,4122,4123,4124,4125,4126,4127,4128,4129,4130,4131,4132,4133,4134,4135,4136,4137,4138,4139,4140,4141,4142,4143,4144,4145,4146,4147,4148,4149,4150,4151,4152,4153,4154,4155,4156,4157,4158,4159,4160,4161,4162,4163,4164,4165,4166,4167,4168,4169,4170,4171,4172,4173,4174,4175,4176,4177,4178,4179,4180,4181,4182,4183,4184,4185,4186,4187,4188,4189,4190,4191,4192,4193,4194,4195,4196,4197,4198,4199,4200,4201,4202,4203,4204,4205,4206,4207,4208,4209,4210,4211,4212,4213,4214,4215,4216,4217,4218,4219,4220,4221,4222,4223,4224,4225,4226,4227,4228,4229,4230,4231,4232,4233,4234,4235,4236,4237,4238,4239,4240,4241,4242,4243,4244,4245,4246,4247,4248,4249,4250,4251,4252,4253,4254,4255,4256,4257,4258) ORDER BY SortPos; 
06/15/2023 10:47:14 AM 
            SELECT DISTINCT
            ISNULL(QID, '') [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4028,4029,4030,4031,4032,4033,4034,4035,4036,4037,4038,4039,4040,4041,4042,4043,4044,4045,4046,4047,4048,4049,4050,4051,4052,4053,4054,4055,4056,4057,4058,4059,4060,4061,4062,4063,4064,4065,4066,4067,4068,4069,4070,4071,4072,4073,4074,4075,4076,4077,4078,4079,4080,4081,4082,4083,4084,4085,4086,4087,4088,4089,4090,4091,4092,4093,4094,4095,4096,4097,4098,4099,4100,4101,4102,4103,4104,4105,4106,4107,4108,4109,4110,4111,4112,4113,4114,4115,4116,4117,4118,4119,4120,4121,4122,4123,4124,4125,4126,4127,4128,4129,4130,4131,4132,4133,4134,4135,4136,4137,4138,4139,4140,4141,4142,4143,4144,4145,4146,4147,4148,4149,4150,4151,4152,4153,4154,4155,4156,4157,4158,4159,4160,4161,4162,4163,4164,4165,4166,4167,4168,4169,4170,4171,4172,4173,4174,4175,4176,4177,4178,4179,4180,4181,4182,4183,4184,4185,4186,4187,4188,4189,4190,4191,4192,4193,4194,4195,4196,4197,4198,4199,4200,4201,4202,4203,4204,4205,4206,4207,4208,4209,4210,4211,4212,4213,4214,4215,4216,4217,4218,4219,4220,4221,4222,4223,4224,4225,4226,4227,4228,4229,4230,4231,4232,4233,4234,4235,4236,4237,4238,4239,4240,4241,4242,4243,4244,4245,4246,4247,4248,4249,4250,4251,4252,4253,4254,4255,4256,4257,4258) ORDER BY SortPos; 
06/15/2023 12:41:40 PM init
06/15/2023 12:47:51 PM init
06/15/2023 12:48:22 PM init
06/15/2023 12:48:39 PM init
06/15/2023 01:02:10 PM Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
06/15/2023 01:02:10 PM NumExpr defaulting to 8 threads.
06/15/2023 03:04:25 PM 
            SELECT DISTINCT
            ISNULL(QID, '') [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4028,4029,4030,4031,4032,4033) ORDER BY SortPos; 
06/15/2023 03:05:01 PM 
            SELECT DISTINCT
            ISNULL(QID, '') [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4028,4029,4030,4031,4032,4033) ORDER BY SortPos; 
06/15/2023 03:05:51 PM 
            SELECT DISTINCT
            ISNULL(QID, '') [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4028,4029,4030,4031,4032,4033) ORDER BY SortPos; 
06/15/2023 03:05:51 PM code_template_path: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql
06/15/2023 03:05:51 PM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/15/2023 03:05:51 PM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/15/2023 03:05:51 PM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/15/2023 03:05:51 PM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/15/2023 03:05:51 PM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/15/2023 03:05:59 PM 
            SELECT DISTINCT
            ISNULL(QID, '') [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4028,4029,4030,4031,4032,4033) ORDER BY SortPos; 
06/15/2023 03:05:59 PM code_template_path: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql
06/15/2023 03:05:59 PM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/15/2023 03:05:59 PM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/15/2023 03:05:59 PM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/15/2023 03:05:59 PM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/15/2023 03:05:59 PM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\fsma_QuestionsInsert.sql True
06/15/2023 03:08:28 PM 
            SELECT DISTINCT
            ISNULL(QID, '') [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4028,4029,4030,4031,4032,4033) ORDER BY SortPos; 
06/15/2023 03:08:42 PM init
06/15/2023 03:08:49 PM 
            SELECT DISTINCT
            ISNULL(QID, '') [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4028,4029,4030,4031,4032,4033) ORDER BY SortPos; 
06/15/2023 03:08:49 PM code_template_path: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\{QT_CODE}.aspx
06/15/2023 03:08:49 PM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\PICK.aspx True
06/15/2023 03:08:49 PM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\PICK.aspx True
06/15/2023 03:08:49 PM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\PICK.aspx True
06/15/2023 03:08:49 PM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\PICK.aspx True
06/15/2023 03:08:49 PM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\PICK.aspx True
06/15/2023 03:29:48 PM 
            SELECT DISTINCT
            ISNULL(QID, '') [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4028,4029,4030,4031,4032,4033) ORDER BY SortPos; 
06/15/2023 03:30:18 PM 
            SELECT DISTINCT
            ISNULL(QID, '') [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4028,4029,4030,4031,4032,4033) ORDER BY SortPos; 
06/15/2023 03:31:07 PM 
            SELECT DISTINCT
            ISNULL(QID, '') [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4220,4221,4222,4223) ORDER BY SortPos; 
06/15/2023 03:31:07 PM code_template_path: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\{QT_CODE}.aspx
06/15/2023 03:31:07 PM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\MULTICHECKBOX.aspx True
06/15/2023 03:31:07 PM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\MULTICHECKBOX.aspx True
06/15/2023 03:31:11 PM 
            SELECT DISTINCT
            ISNULL(QID, '') [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4220,4221,4222,4223) ORDER BY SortPos; 
06/15/2023 03:31:11 PM code_template_path: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\{QT_CODE}.aspx
06/15/2023 03:31:11 PM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\MULTICHECKBOX.aspx True
06/15/2023 03:31:11 PM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\MULTICHECKBOX.aspx True
06/15/2023 03:37:12 PM 
            SELECT DISTINCT
            ISNULL(QID, '') [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4028,4029,4030,4031,4032,4033,4034,4035,4036,4037,4038,4039,4040,4041,4042,4043,4044,4045,4046,4047,4048,4049,4050,4051,4052,4053,4054,4055,4056,4057,4058,4059,4060,4061,4062,4063,4064,4065,4066,4067,4068,4069,4070,4071,4072,4073,4074,4075,4076,4077,4078,4079,4080,4081,4082,4083,4084,4085,4086,4087,4088,4089,4090,4091,4092,4093,4094,4095,4096,4097,4098,4099,4100,4101,4102,4103,4104,4105,4106,4107,4108,4109,4110,4111,4112,4113,4114,4115,4116,4117,4118,4119,4120,4121,4122,4123,4124,4125,4126,4127,4128,4129,4130,4131,4132,4133,4134,4135,4136,4137,4138,4139,4140,4141,4142,4143,4144,4145,4146,4147,4148,4149,4150,4151,4152,4153,4154,4155,4156,4157,4158,4159,4160,4161,4162,4163,4164,4165,4166,4167,4168,4169,4170,4171,4172,4173,4174,4175,4176,4177,4178,4179,4180,4181,4182,4183,4184,4185,4186,4187,4188,4189,4190,4191,4192,4193,4194,4195,4196,4197,4198,4199,4200,4201,4202,4203,4204,4205,4206,4207,4208,4209,4210,4211,4212,4213,4214,4215,4216,4217,4218,4219,4220,4221,4222,4223,4224,4225,4226,4227,4228,4229,4230,4231,4232,4233,4234,4235,4236,4237,4238,4239,4240,4241,4242,4243,4244,4245,4246,4247,4248,4249,4250,4251,4252,4253,4254,4255,4256,4257,4258) ORDER BY SortPos; 
06/15/2023 03:37:13 PM code_template_path: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\{QT_CODE}.aspx
06/15/2023 03:37:13 PM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\MULTICHECKBOX.aspx True
06/15/2023 03:37:13 PM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\MULTICHECKBOX.aspx True
06/15/2023 03:37:13 PM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\MULTICHECKBOX.aspx True
06/15/2023 03:37:13 PM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\MULTICHECKBOX.aspx True
06/15/2023 03:37:13 PM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\MULTICHECKBOX.aspx True
06/15/2023 03:37:13 PM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\MULTICHECKBOX.aspx True
06/15/2023 03:37:13 PM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\MULTICHECKBOX.aspx True
06/15/2023 03:37:13 PM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\MULTICHECKBOX.aspx True
06/15/2023 03:37:13 PM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\MULTICHECKBOX.aspx True
06/15/2023 03:37:13 PM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\MULTICHECKBOX.aspx True
06/15/2023 03:37:13 PM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\MULTICHECKBOX.aspx True
06/15/2023 03:37:13 PM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\MULTICHECKBOX.aspx True
06/15/2023 03:37:13 PM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\MULTICHECKBOX.aspx True
06/15/2023 03:37:13 PM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\MULTICHECKBOX.aspx True
06/15/2023 03:37:13 PM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\MULTICHECKBOX.aspx True
06/15/2023 03:37:13 PM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\MULTICHECKBOX.aspx True
06/15/2023 03:37:13 PM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\MULTICHECKBOX.aspx True
06/15/2023 03:37:13 PM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\MULTICHECKBOX.aspx True
06/15/2023 03:37:13 PM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\MULTICHECKBOX.aspx True
06/15/2023 03:37:13 PM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\MULTICHECKBOX.aspx True
06/15/2023 03:37:13 PM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\MULTICHECKBOX.aspx True
06/15/2023 03:37:13 PM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\MULTICHECKBOX.aspx True
06/15/2023 03:37:13 PM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\MULTICHECKBOX.aspx True
06/15/2023 03:37:13 PM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\MULTICHECKBOX.aspx True
06/15/2023 03:37:13 PM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\MULTICHECKBOX.aspx True
06/15/2023 03:37:13 PM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\MULTICHECKBOX.aspx True
06/15/2023 03:37:13 PM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\MULTICHECKBOX.aspx True
06/15/2023 03:37:13 PM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\MULTICHECKBOX.aspx True
06/15/2023 03:37:13 PM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\MULTICHECKBOX.aspx True
06/15/2023 03:37:13 PM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\MULTICHECKBOX.aspx True
06/15/2023 03:37:13 PM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\MULTICHECKBOX.aspx True
06/15/2023 03:37:13 PM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\MULTICHECKBOX.aspx True
06/15/2023 03:37:13 PM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\MULTICHECKBOX.aspx True
06/15/2023 03:37:13 PM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\MULTICHECKBOX.aspx True
06/15/2023 03:37:13 PM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\MULTICHECKBOX.aspx True
06/15/2023 03:37:13 PM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\MULTICHECKBOX.aspx True
06/15/2023 03:37:13 PM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\MULTICHECKBOX.aspx True
06/15/2023 03:37:13 PM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\MULTICHECKBOX.aspx True
06/15/2023 03:37:13 PM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\MULTICHECKBOX.aspx True
06/15/2023 03:37:13 PM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\MULTICHECKBOX.aspx True
06/15/2023 03:37:13 PM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\MULTICHECKBOX.aspx True
06/15/2023 03:37:56 PM 
            SELECT DISTINCT
            ISNULL(QID, '') [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4028,4029,4030,4031,4032,4033,4034,4035,4036,4037,4038,4039,4040,4041,4042,4043,4044,4045,4046,4047,4048,4049,4050,4051,4052,4053,4054,4055,4056,4057,4058,4059,4060,4061,4062,4063,4064,4065,4066,4067,4068,4069,4070,4071,4072,4073,4074,4075,4076,4077,4078,4079,4080,4081,4082,4083,4084,4085,4086,4087,4088,4089,4090,4091,4092,4093,4094,4095,4096,4097,4098,4099,4100,4101,4102,4103,4104,4105,4106,4107,4108,4109,4110,4111,4112,4113,4114,4115,4116,4117,4118,4119,4120,4121,4122,4123,4124,4125,4126,4127,4128,4129,4130,4131,4132,4133,4134,4135,4136,4137,4138,4139,4140,4141,4142,4143,4144,4145,4146,4147,4148,4149,4150,4151,4152,4153,4154,4155,4156,4157,4158,4159,4160,4161,4162,4163,4164,4165,4166,4167,4168,4169,4170,4171,4172,4173,4174,4175,4176,4177,4178,4179,4180,4181,4182,4183,4184,4185,4186,4187,4188,4189,4190,4191,4192,4193,4194,4195,4196,4197,4198,4199,4200,4201,4202,4203,4204,4205,4206,4207,4208,4209,4210,4211,4212,4213,4214,4215,4216,4217,4218,4219,4220,4221,4222,4223,4224,4225,4226,4227,4228,4229,4230,4231,4232,4233,4234,4235,4236,4237,4238,4239,4240,4241,4242,4243,4244,4245,4246,4247,4248,4249,4250,4251,4252,4253,4254,4255,4256,4257,4258) ORDER BY SortPos; 
06/15/2023 03:37:56 PM code_template_path: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\{QT_CODE}.aspx
06/15/2023 03:37:56 PM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\PICK.aspx True
06/15/2023 03:37:56 PM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\PICK.aspx True
06/15/2023 03:37:56 PM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\PICK.aspx True
06/15/2023 04:05:27 PM 
            SELECT DISTINCT
            ISNULL(QID, '') [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4028,4029,4030,4031,4032,4033,4034,4035,4036,4037,4038,4039,4040,4041,4042,4043,4044,4045,4046,4047,4048,4049,4050,4051,4052,4053,4054,4055,4056,4057,4058,4059,4060,4061,4062,4063,4064,4065,4066,4067,4068,4069,4070,4071,4072,4073,4074,4075,4076,4077,4078,4079,4080,4081,4082,4083,4084,4085,4086,4087,4088,4089,4090,4091,4092,4093,4094,4095,4096,4097,4098,4099,4100,4101,4102,4103,4104,4105,4106,4107,4108,4109,4110,4111,4112,4113,4114,4115,4116,4117,4118,4119,4120,4121,4122,4123,4124,4125,4126,4127,4128,4129,4130,4131,4132,4133,4134,4135,4136,4137,4138,4139,4140,4141,4142,4143,4144,4145,4146,4147,4148,4149,4150,4151,4152,4153,4154,4155,4156,4157,4158,4159,4160,4161,4162,4163,4164,4165,4166,4167,4168,4169,4170,4171,4172,4173,4174,4175,4176,4177,4178,4179,4180,4181,4182,4183,4184,4185,4186,4187,4188,4189,4190,4191,4192,4193,4194,4195,4196,4197,4198,4199,4200,4201,4202,4203,4204,4205,4206,4207,4208,4209,4210,4211,4212,4213,4214,4215,4216,4217,4218,4219,4220,4221,4222,4223,4224,4225,4226,4227,4228,4229,4230,4231,4232,4233,4234,4235,4236,4237,4238,4239,4240,4241,4242,4243,4244,4245,4246,4247,4248,4249,4250,4251,4252,4253,4254,4255,4256,4257,4258) ORDER BY SortPos; 
06/15/2023 04:05:27 PM code_template_path: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\{QT_CODE}.aspx
06/15/2023 04:05:27 PM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\PICK.aspx True
06/15/2023 04:05:27 PM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\PICK.aspx True
06/15/2023 04:05:27 PM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\PICK.aspx True
06/15/2023 04:05:27 PM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\PICK.aspx True
06/15/2023 04:05:27 PM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\PICK.aspx True
06/15/2023 04:05:27 PM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\PICK.aspx True
06/15/2023 04:05:27 PM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\PICK.aspx True
06/15/2023 04:05:27 PM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\PICK.aspx True
06/15/2023 04:09:11 PM 
            SELECT DISTINCT
            ISNULL(QID, '') [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4028,4029,4030,4031,4032,4033,4034,4035,4036,4037,4038,4039,4040,4041,4042,4043,4044,4045,4046,4047,4048,4049,4050,4051,4052,4053,4054,4055,4056,4057,4058,4059,4060,4061,4062,4063,4064,4065,4066,4067,4068,4069,4070,4071,4072,4073,4074,4075,4076,4077,4078,4079,4080,4081,4082,4083,4084,4085,4086,4087,4088,4089,4090,4091,4092,4093,4094,4095,4096,4097,4098,4099,4100,4101,4102,4103,4104,4105,4106,4107,4108,4109,4110,4111,4112,4113,4114,4115,4116,4117,4118,4119,4120,4121,4122,4123,4124,4125,4126,4127,4128,4129,4130,4131,4132,4133,4134,4135,4136,4137,4138,4139,4140,4141,4142,4143,4144,4145,4146,4147,4148,4149,4150,4151,4152,4153,4154,4155,4156,4157,4158,4159,4160,4161,4162,4163,4164,4165,4166,4167,4168,4169,4170,4171,4172,4173,4174,4175,4176,4177,4178,4179,4180,4181,4182,4183,4184,4185,4186,4187,4188,4189,4190,4191,4192,4193,4194,4195,4196,4197,4198,4199,4200,4201,4202,4203,4204,4205,4206,4207,4208,4209,4210,4211,4212,4213,4214,4215,4216,4217,4218,4219,4220,4221,4222,4223,4224,4225,4226,4227,4228,4229,4230,4231,4232,4233,4234,4235,4236,4237,4238,4239,4240,4241,4242,4243,4244,4245,4246,4247,4248,4249,4250,4251,4252,4253,4254,4255,4256,4257,4258) ORDER BY SortPos; 
06/15/2023 04:09:11 PM code_template_path: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\{QT_CODE}.aspx
06/15/2023 04:09:11 PM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\PICK.aspx True
06/15/2023 04:09:11 PM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\PICK.aspx True
06/15/2023 04:09:11 PM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\PICK.aspx True
06/15/2023 04:09:11 PM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\PICK.aspx True
06/15/2023 04:09:11 PM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\PICK.aspx True
06/15/2023 04:09:11 PM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\PICK.aspx True
06/15/2023 04:09:11 PM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\PICK.aspx True
06/15/2023 04:09:11 PM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\PICK.aspx True
06/15/2023 04:10:39 PM 
            SELECT DISTINCT
            ISNULL(QID, '') [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4028,4029,4030,4031,4032,4033,4034,4035,4036,4037,4038,4039,4040,4041,4042,4043,4044,4045,4046,4047,4048,4049,4050,4051,4052,4053,4054,4055,4056,4057,4058,4059,4060,4061,4062,4063,4064,4065,4066,4067,4068,4069,4070,4071,4072,4073,4074,4075,4076,4077,4078,4079,4080,4081,4082,4083,4084,4085,4086,4087,4088,4089,4090,4091,4092,4093,4094,4095,4096,4097,4098,4099,4100,4101,4102,4103,4104,4105,4106,4107,4108,4109,4110,4111,4112,4113,4114,4115,4116,4117,4118,4119,4120,4121,4122,4123,4124,4125,4126,4127,4128,4129,4130,4131,4132,4133,4134,4135,4136,4137,4138,4139,4140,4141,4142,4143,4144,4145,4146,4147,4148,4149,4150,4151,4152,4153,4154,4155,4156,4157,4158,4159,4160,4161,4162,4163,4164,4165,4166,4167,4168,4169,4170,4171,4172,4173,4174,4175,4176,4177,4178,4179,4180,4181,4182,4183,4184,4185,4186,4187,4188,4189,4190,4191,4192,4193,4194,4195,4196,4197,4198,4199,4200,4201,4202,4203,4204,4205,4206,4207,4208,4209,4210,4211,4212,4213,4214,4215,4216,4217,4218,4219,4220,4221,4222,4223,4224,4225,4226,4227,4228,4229,4230,4231,4232,4233,4234,4235,4236,4237,4238,4239,4240,4241,4242,4243,4244,4245,4246,4247,4248,4249,4250,4251,4252,4253,4254,4255,4256,4257,4258) ORDER BY SortPos; 
06/15/2023 04:10:39 PM code_template_path: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\{QT_CODE}.aspx
06/15/2023 04:10:39 PM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\PICK.aspx True
06/15/2023 04:10:39 PM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\PICK.aspx True
06/15/2023 04:10:39 PM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\PICK.aspx True
06/15/2023 04:10:39 PM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\PICK.aspx True
06/15/2023 04:10:39 PM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\PICK.aspx True
06/15/2023 04:10:39 PM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\PICK.aspx True
06/15/2023 04:10:39 PM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\PICK.aspx True
06/15/2023 04:10:39 PM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\PICK.aspx True
06/15/2023 04:10:53 PM 
            SELECT DISTINCT
            ISNULL(QID, '') [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4028,4029,4030,4031,4032,4033,4034,4035,4036,4037,4038,4039,4040,4041,4042,4043,4044,4045,4046,4047,4048,4049,4050,4051,4052,4053,4054,4055,4056,4057,4058,4059,4060,4061,4062,4063,4064,4065,4066,4067,4068,4069,4070,4071,4072,4073,4074,4075,4076,4077,4078,4079,4080,4081,4082,4083,4084,4085,4086,4087,4088,4089,4090,4091,4092,4093,4094,4095,4096,4097,4098,4099,4100,4101,4102,4103,4104,4105,4106,4107,4108,4109,4110,4111,4112,4113,4114,4115,4116,4117,4118,4119,4120,4121,4122,4123,4124,4125,4126,4127,4128,4129,4130,4131,4132,4133,4134,4135,4136,4137,4138,4139,4140,4141,4142,4143,4144,4145,4146,4147,4148,4149,4150,4151,4152,4153,4154,4155,4156,4157,4158,4159,4160,4161,4162,4163,4164,4165,4166,4167,4168,4169,4170,4171,4172,4173,4174,4175,4176,4177,4178,4179,4180,4181,4182,4183,4184,4185,4186,4187,4188,4189,4190,4191,4192,4193,4194,4195,4196,4197,4198,4199,4200,4201,4202,4203,4204,4205,4206,4207,4208,4209,4210,4211,4212,4213,4214,4215,4216,4217,4218,4219,4220,4221,4222,4223,4224,4225,4226,4227,4228,4229,4230,4231,4232,4233,4234,4235,4236,4237,4238,4239,4240,4241,4242,4243,4244,4245,4246,4247,4248,4249,4250,4251,4252,4253,4254,4255,4256,4257,4258) ORDER BY SortPos; 
06/15/2023 04:10:53 PM code_template_path: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\{QT_CODE}.aspx
06/15/2023 04:10:53 PM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\PICK.aspx True
06/15/2023 04:10:53 PM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\PICK.aspx True
06/15/2023 04:16:09 PM init
06/15/2023 04:16:33 PM 
            SELECT DISTINCT
            ISNULL(QID, '') [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4028,4029,4030,4031,4032,4033,4034,4035,4036,4037,4038,4039,4040,4041,4042,4043,4044,4045,4046,4047,4048,4049,4050,4051,4052,4053,4054,4055,4056,4057,4058,4059,4060,4061,4062,4063,4064,4065,4066,4067,4068,4069,4070,4071,4072,4073,4074,4075,4076,4077,4078,4079,4080,4081,4082,4083,4084,4085,4086,4087,4088,4089,4090,4091,4092,4093,4094,4095,4096,4097,4098,4099,4100,4101,4102,4103,4104,4105,4106,4107,4108,4109,4110,4111,4112,4113,4114,4115,4116,4117,4118,4119,4120,4121,4122,4123,4124,4125,4126,4127,4128,4129,4130,4131,4132,4133,4134,4135,4136,4137,4138,4139,4140,4141,4142,4143,4144,4145,4146,4147,4148,4149,4150,4151,4152,4153,4154,4155,4156,4157,4158,4159,4160,4161,4162,4163,4164,4165,4166,4167,4168,4169,4170,4171,4172,4173,4174,4175,4176,4177,4178,4179,4180,4181,4182,4183,4184,4185,4186,4187,4188,4189,4190,4191,4192,4193,4194,4195,4196,4197,4198,4199,4200,4201,4202,4203,4204,4205,4206,4207,4208,4209,4210,4211,4212,4213,4214,4215,4216,4217,4218,4219,4220,4221,4222,4223,4224,4225,4226,4227,4228,4229,4230,4231,4232,4233,4234,4235,4236,4237,4238,4239,4240,4241,4242,4243,4244,4245,4246,4247,4248,4249,4250,4251,4252,4253,4254,4255,4256,4257,4258) ORDER BY SortPos; 
06/15/2023 04:16:34 PM code_template_path: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\archive\{QT_CODE}.aspx
06/15/2023 04:16:34 PM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\archive\PICK.aspx True
06/15/2023 04:16:34 PM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\archive\PICK.aspx True
06/15/2023 05:32:51 PM 
            SELECT DISTINCT
            ISNULL(QID, '') [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4028,4029,4030,4031,4032,4033,4034,4035,4036,4037,4038,4039,4040,4041,4042,4043,4044,4045,4046,4047,4048,4049,4050,4051,4052,4053,4054,4055,4056,4057,4058,4059,4060,4061,4062,4063,4064,4065,4066,4067,4068,4069,4070,4071,4072,4073,4074,4075,4076,4077,4078,4079,4080,4081,4082,4083,4084,4085,4086,4087,4088,4089,4090,4091,4092,4093,4094,4095,4096,4097,4098,4099,4100,4101,4102,4103,4104,4105,4106,4107,4108,4109,4110,4111,4112,4113,4114,4115,4116,4117,4118,4119,4120,4121,4122,4123,4124,4125,4126,4127,4128,4129,4130,4131,4132,4133,4134,4135,4136,4137,4138,4139,4140,4141,4142,4143,4144,4145,4146,4147,4148,4149,4150,4151,4152,4153,4154,4155,4156,4157,4158,4159,4160,4161,4162,4163,4164,4165,4166,4167,4168,4169,4170,4171,4172,4173,4174,4175,4176,4177,4178,4179,4180,4181,4182,4183,4184,4185,4186,4187,4188,4189,4190,4191,4192,4193,4194,4195,4196,4197,4198,4199,4200,4201,4202,4203,4204,4205,4206,4207,4208,4209,4210,4211,4212,4213,4214,4215,4216,4217,4218,4219,4220,4221,4222,4223,4224,4225,4226,4227,4228,4229,4230,4231,4232,4233,4234,4235,4236,4237,4238,4239,4240,4241,4242,4243,4244,4245,4246,4247,4248,4249,4250,4251,4252,4253,4254,4255,4256,4257,4258) ORDER BY SortPos; 
06/15/2023 05:32:51 PM code_template_path: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\archive\{QT_CODE}.aspx
06/15/2023 05:32:51 PM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\archive\PICK.aspx True
06/15/2023 05:32:51 PM path.exists: C:\Users\timko\source\repos\PythonBoiler\CodeGenerators\snippets\archive\PICK.aspx True
06/15/2023 06:38:54 PM 
            SELECT DISTINCT
            ISNULL(QID, '') [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4028,4029,4030,4031,4032,4033,4034,4035,4036,4037,4038,4039,4040,4041,4042,4043,4044,4045,4046,4047,4048,4049,4050,4051,4052,4053,4054,4055,4056,4057,4058,4059,4060,4061,4062,4063,4064,4065,4066,4067,4068,4069,4070,4071,4072,4073,4074,4075,4076,4077,4078,4079,4080,4081,4082,4083,4084,4085,4086,4087,4088,4089,4090,4091,4092,4093,4094,4095,4096,4097,4098,4099,4100,4101,4102,4103,4104,4105,4106,4107,4108,4109,4110,4111,4112,4113,4114,4115,4116,4117,4118,4119,4120,4121,4122,4123,4124,4125,4126,4127,4128,4129,4130,4131,4132,4133,4134,4135,4136,4137,4138,4139,4140,4141,4142,4143,4144,4145,4146,4147,4148,4149,4150,4151,4152,4153,4154,4155,4156,4157,4158,4159,4160,4161,4162,4163,4164,4165,4166,4167,4168,4169,4170,4171,4172,4173,4174,4175,4176,4177,4178,4179,4180,4181,4182,4183,4184,4185,4186,4187,4188,4189,4190,4191,4192,4193,4194,4195,4196,4197,4198,4199,4200,4201,4202,4203,4204,4205,4206,4207,4208,4209,4210,4211,4212,4213,4214,4215,4216,4217,4218,4219,4220,4221,4222,4223,4224,4225,4226,4227,4228,4229,4230,4231,4232,4233,4234,4235,4236,4237,4238,4239,4240,4241,4242,4243,4244,4245,4246,4247,4248,4249,4250,4251,4252,4253,4254,4255,4256,4257,4258) ORDER BY SortPos; 
06/15/2023 06:41:43 PM 
            SELECT DISTINCT
            ISNULL(QID, '') [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4028,4029,4030,4031,4032,4033,4034,4035,4036,4037,4038,4039,4040,4041,4042,4043,4044,4045,4046,4047,4048,4049,4050,4051,4052,4053,4054,4055,4056,4057,4058,4059,4060,4061,4062,4063,4064,4065,4066,4067,4068,4069,4070,4071,4072,4073,4074,4075,4076,4077,4078,4079,4080,4081,4082,4083,4084,4085,4086,4087,4088,4089,4090,4091,4092,4093,4094,4095,4096,4097,4098,4099,4100,4101,4102,4103,4104,4105,4106,4107,4108,4109,4110,4111,4112,4113,4114,4115,4116,4117,4118,4119,4120,4121,4122,4123,4124,4125,4126,4127,4128,4129,4130,4131,4132,4133,4134,4135,4136,4137,4138,4139,4140,4141,4142,4143,4144,4145,4146,4147,4148,4149,4150,4151,4152,4153,4154,4155,4156,4157,4158,4159,4160,4161,4162,4163,4164,4165,4166,4167,4168,4169,4170,4171,4172,4173,4174,4175,4176,4177,4178,4179,4180,4181,4182,4183,4184,4185,4186,4187,4188,4189,4190,4191,4192,4193,4194,4195,4196,4197,4198,4199,4200,4201,4202,4203,4204,4205,4206,4207,4208,4209,4210,4211,4212,4213,4214,4215,4216,4217,4218,4219,4220,4221,4222,4223,4224,4225,4226,4227,4228,4229,4230,4231,4232,4233,4234,4235,4236,4237,4238,4239,4240,4241,4242,4243,4244,4245,4246,4247,4248,4249,4250,4251,4252,4253,4254,4255,4256,4257,4258) ORDER BY SortPos; 
06/15/2023 06:43:18 PM 
            SELECT DISTINCT
            ISNULL(QID, '') [{idt}] 
            , Q_TypeCode [{QT_CODE}]  
            , FK_QuestionType [{FK_QuestionType}]  
            , PK_Question as [{PK_Question}]
            , CONVERT(NVARCHAR(9), PK_PickListType) as [{PK_PickListType}]
            , sortpos [{sortpos}]
            , QTEXT as [{QuestionText}]  
            , LEFT(QTEXT, 75) AS [{QT_ABBR}]
            , help_text AS [{help_text}]
            , PK_QuestionGroup [{PK_QuestionGroup}]
            ,   CASE WHEN required_value IS NULL THEN '' 
                ELSE
                'data-question_master="r-m-'+REPLACE(master_identifier_text,'.','_')+'" data-value_torequire="^'+required_value+'$"'
                END AS [{Dependancy}]
            FROM vwQuestionFormDependancies Q
          WHERE PK_QuestionGroup IN (4028,4029,4030,4031,4032,4033,4034,4035,4036,4037,4038,4039,4040,4041,4042,4043,4044,4045,4046,4047,4048,4049,4050,4051,4052,4053,4054,4055,4056,4057,4058,4059,4060,4061,4062,4063,4064,4065,4066,4067,4068,4069,4070,4071,4072,4073,4074,4075,4076,4077,4078,4079,4080,4081,4082,4083,4084,4085,4086,4087,4088,4089,4090,4091,4092,4093,4094,4095,4096,4097,4098,4099,4100,4101,4102,4103,4104,4105,4106,4107,4108,4109,4110,4111,4112,4113,4114,4115,4116,4117,4118,4119,4120,4121,4122,4123,4124,4125,4126,4127,4128,4129,4130,4131,4132,4133,4134,4135,4136,4137,4138,4139,4140,4141,4142,4143,4144,4145,4146,4147,4148,4149,4150,4151,4152,4153,4154,4155,4156,4157,4158,4159,4160,4161,4162,4163,4164,4165,4166,4167,4168,4169,4170,4171,4172,4173,4174,4175,4176,4177,4178,4179,4180,4181,4182,4183,4184,4185,4186,4187,4188,4189,4190,4191,4192,4193,4194,4195,4196,4197,4198,4199,4200,4201,4202,4203,4204,4205,4206,4207,4208,4209,4210,4211,4212,4213,4214,4215,4216,4217,4218,4219,4220,4221,4222,4223,4224,4225,4226,4227,4228,4229,4230,4231,4232,4233,4234,4235,4236,4237,4238,4239,4240,4241,4242,4243,4244,4245,4246,4247,4248,4249,4250,4251,4252,4253,4254,4255,4256,4257,4258) ORDER BY SortPos; 
06/15/2023 07:15:52 PM PK_QuestionType: 17
06/15/2023 07:20:35 PM init
06/15/2023 07:22:40 PM findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=11.0.
06/15/2023 07:22:40 PM findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 2.335
06/15/2023 07:22:40 PM findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:22:40 PM findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 2.05
06/15/2023 07:22:40 PM findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:22:40 PM findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:22:40 PM findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
06/15/2023 07:22:40 PM findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:22:40 PM findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:22:40 PM findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:22:40 PM findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:22:40 PM findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:22:40 PM findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 3.05
06/15/2023 07:22:40 PM findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 3.335
06/15/2023 07:22:40 PM findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
06/15/2023 07:22:40 PM findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:22:40 PM findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:22:40 PM findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:22:40 PM findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:22:40 PM findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:22:40 PM findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:22:40 PM findfont: score(<Font 'FZShuTi' (FZSTK.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
06/15/2023 07:22:40 PM findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
06/15/2023 07:22:40 PM findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
06/15/2023 07:22:40 PM findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
06/15/2023 07:22:40 PM findfont: score(<Font 'Ami R' (HMKMAMI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Kufi Extended Outline' (KFEXTOUT.TTF) normal normal 400 expanded>) = 10.25
06/15/2023 07:22:40 PM findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'MoeumT R' (HMFMMUEX.TTC) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'DecoType Naskh Variants' (DTNASKH2.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
06/15/2023 07:22:40 PM findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:22:40 PM findfont: score(<Font 'HYMyeongJo-Extra' (H2MJRE.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
06/15/2023 07:22:40 PM findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'AGA Arabesque Desktop' (ARBSQDTP.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Farsi Simple Outline' (FRSSPOUT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:22:40 PM findfont: score(<Font 'HYGothic-Extra' (H2GTRE.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:22:40 PM findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:22:40 PM findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:22:40 PM findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
06/15/2023 07:22:40 PM findfont: score(<Font 'Bold Italic Art' (BLDITLAR.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
06/15/2023 07:22:40 PM findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'YouYuan' (SIMYOU.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
06/15/2023 07:22:40 PM findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
06/15/2023 07:22:40 PM findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
06/15/2023 07:22:40 PM findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:22:40 PM findfont: score(<Font 'Mudir MT' (MUDIR.TTF) normal normal 600 normal>) = 10.24
06/15/2023 07:22:40 PM findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'HYGungSo-Bold' (H2GSRB.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:22:40 PM findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
06/15/2023 07:22:40 PM findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
06/15/2023 07:22:40 PM findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'STXinwei' (STXINWEI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'New Gulim' (NGULIM.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Old Antic Bold' (OLDANBLD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
06/15/2023 07:22:40 PM findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:22:40 PM findfont: score(<Font 'PT Bold Heading' (PTBLDHAD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
06/15/2023 07:22:40 PM findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
06/15/2023 07:22:40 PM findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Simple Indust Outline' (SPINDOUT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Simple Outline Pat' (SPOUTPAT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'HYShortSamul-Medium' (H2SA1M.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
06/15/2023 07:22:40 PM findfont: score(<Font 'Akhbar MT' (AKHBRBD.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
06/15/2023 07:22:40 PM findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:22:40 PM findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
06/15/2023 07:22:40 PM findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Italic Outline Art' (ITLOUTAR.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:22:40 PM findfont: score(<Font 'DecoType Naskh Extensions' (DTNASKH3.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
06/15/2023 07:22:40 PM findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 1.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Headline R' (HMKMRHD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Akhbar MT' (AKHBR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'PT Bold Mirror' (PTBLDMRR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'PT Bold Mirror' (PTBLDMRR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Farsi Simple Bold' (FRSSPBL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:22:40 PM findfont: score(<Font 'PT Bold Stars' (PTBLSSTR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Old Antic Outline' (OLDANOUT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:22:40 PM findfont: score(<Font 'PT Simple Bold Ruled' (SPBLDRUL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
06/15/2023 07:22:40 PM findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:22:40 PM findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
06/15/2023 07:22:40 PM findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
06/15/2023 07:22:40 PM findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Monotype Koufi' (KOUFIBD.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
06/15/2023 07:22:40 PM findfont: score(<Font 'HYGothic-Medium' (H2GTRM.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Old Antic Outline Shaded' (OLDOUTSH.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
06/15/2023 07:22:40 PM findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Headline R' (HMKMRHD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'HYSinMyeongJo-Medium' (H2MJSM.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'STLiti' (STLITI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Diwani Outline Shaded' (DWNOUTSH.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'PT Bold Arch' (PTBLDARC.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
06/15/2023 07:22:40 PM findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
06/15/2023 07:22:40 PM findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 0.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:22:40 PM findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:22:40 PM findfont: score(<Font 'MoeumT R' (HMFMMUEX.TTC) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
06/15/2023 07:22:40 PM findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:22:40 PM findfont: score(<Font 'STKaiti' (STKAITI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 0.525
06/15/2023 07:22:40 PM findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
06/15/2023 07:22:40 PM findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Diwani Bent' (DIWANBNT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
06/15/2023 07:22:40 PM findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 0.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Diwani Outline Shaded' (DWNOUTSH.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
06/15/2023 07:22:40 PM findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
06/15/2023 07:22:40 PM findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:22:40 PM findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Akhbar MT' (AKHBR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Diwani Simple Outline 2' (DWNSH2.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 0.33499999999999996
06/15/2023 07:22:40 PM findfont: score(<Font 'STCaiyun' (STCAIYUN.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'STXihei' (STXIHEI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'STLiti' (STLITI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'FZYaoTi' (FZYTK.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Old Antic Bold' (OLDANBLD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Diwani Letter' (DIWANLTR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'New Gulim' (NGULIM.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 0.525
06/15/2023 07:22:40 PM findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
06/15/2023 07:22:40 PM findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'AGA Arabesque' (ARABSQ.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:22:40 PM findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
06/15/2023 07:22:40 PM findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 0.33499999999999996
06/15/2023 07:22:40 PM findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
06/15/2023 07:22:40 PM findfont: score(<Font 'DecoType Naskh Special' (DTNASKH1.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'AGA Arabesque' (ARABSQ.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'STCaiyun' (STCAIYUN.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'PT Separated Baloon' (PTSEPBAL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
06/15/2023 07:22:40 PM findfont: score(<Font 'HYPost-Medium' (H2PORM.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
06/15/2023 07:22:40 PM findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:22:40 PM findfont: score(<Font 'STKaiti' (STKAITI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
06/15/2023 07:22:40 PM findfont: score(<Font 'Simple Bold Jut Out' (SPBLDJUT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 1.25
06/15/2023 07:22:40 PM findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Diwani Simple Outline' (DWNSPOUT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
06/15/2023 07:22:40 PM findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:22:40 PM findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
06/15/2023 07:22:40 PM findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
06/15/2023 07:22:40 PM findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:22:40 PM findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:22:40 PM findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
06/15/2023 07:22:40 PM findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
06/15/2023 07:22:40 PM findfont: score(<Font 'DecoType Naskh Extensions' (DTNASKH3.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
06/15/2023 07:22:40 PM findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:22:40 PM findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
06/15/2023 07:22:40 PM findfont: score(<Font 'Kufi Outline Shaded' (KFOUTSHD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
06/15/2023 07:22:40 PM findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:22:40 PM findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Monotype Koufi' (KOUFIBD.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:22:40 PM findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
06/15/2023 07:22:40 PM findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
06/15/2023 07:22:40 PM findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'PT Separated Baloon' (PTSEPBAL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 1.535
06/15/2023 07:22:40 PM findfont: score(<Font 'HYGungSo-Bold' (H2GSRB.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
06/15/2023 07:22:40 PM findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
06/15/2023 07:22:40 PM findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'YouYuan' (SIMYOU.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'STXinwei' (STXINWEI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Simple Outline Pat' (SPOUTPAT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:22:40 PM findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'STFangsong' (STFANGSO.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:22:40 PM findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'HYHeadLine-Medium' (H2HDRM.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:22:40 PM findfont: score(<Font 'STXihei' (STXIHEI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:22:40 PM findfont: score(<Font 'STSong' (STSONG.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
06/15/2023 07:22:40 PM findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Mudir MT' (MUDIR.TTF) normal normal 600 normal>) = 10.24
06/15/2023 07:22:40 PM findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:22:40 PM findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 0.5349999999999999
06/15/2023 07:22:40 PM findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
06/15/2023 07:22:40 PM findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
06/15/2023 07:22:40 PM findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Italic Outline Art' (ITLOUTAR.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Pyunji R' (HMFMPYUN.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Magic R' (HMKMMAG.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'STZhongsong' (STZHONGS.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 1.535
06/15/2023 07:22:40 PM findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 500 normal>) = 10.145
06/15/2023 07:22:40 PM findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
06/15/2023 07:22:40 PM findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Kufi Outline Shaded' (KFOUTSHD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'AGA Arabesque Desktop' (ARBSQDTP.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Magic R' (HMKMMAG.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
06/15/2023 07:22:40 PM findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Diwani Simple Striped' (DWNSPSTR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'LiSu' (SIMLI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
06/15/2023 07:22:40 PM findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:22:40 PM findfont: score(<Font 'DecoType Thuluth' (DTHULUTH.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
06/15/2023 07:22:40 PM findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:22:40 PM findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
06/15/2023 07:22:40 PM findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Farsi Simple Bold' (FRSSPBL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Diwani Letter' (DIWANLTR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
06/15/2023 07:22:40 PM findfont: score(<Font 'PT Bold Stars' (PTBLSSTR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'HYHeadLine-Medium' (H2HDRM.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:22:40 PM findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:22:40 PM findfont: score(<Font 'PT Bold Heading' (PTBLDHAD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
06/15/2023 07:22:40 PM findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'DecoType Naskh Variants' (DTNASKH2.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
06/15/2023 07:22:40 PM findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 1.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:22:40 PM findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Diwani Simple Outline 2' (DWNSH2.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
06/15/2023 07:22:40 PM findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'DecoType Naskh' (DTNASKH0.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Pyunji R' (HMFMPYUN.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Diwani Simple Outline' (DWNSPOUT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
06/15/2023 07:22:40 PM findfont: score(<Font 'Diwani Simple Striped' (DWNSPSTR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:22:40 PM findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
06/15/2023 07:22:40 PM findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'DecoType Naskh Special' (DTNASKH1.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Akhbar MT' (AKHBRBD.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:22:40 PM findfont: score(<Font 'DecoType Naskh Swashes' (DTNASKH4.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:22:40 PM findfont: score(<Font 'PT Bold Broken' (PTBLDBRK.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:22:40 PM findfont: score(<Font 'FZShuTi' (FZSTK.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'STXingkai' (STXINGKA.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
06/15/2023 07:22:40 PM findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'HYPost-Light' (H2PORL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'HYGothic-Medium' (H2GTRM.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Kufi Extended Outline' (KFEXTOUT.TTF) normal normal 400 expanded>) = 10.25
06/15/2023 07:22:40 PM findfont: score(<Font 'Old Antic Outline Shaded' (OLDOUTSH.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:22:40 PM findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
06/15/2023 07:22:40 PM findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Led Italic Font' (LEDITFNT.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:22:40 PM findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Yet R' (HMFMOLD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
06/15/2023 07:22:40 PM findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
06/15/2023 07:22:40 PM findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:22:40 PM findfont: score(<Font 'LiSu' (SIMLI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Simple Bold Jut Out' (SPBLDJUT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
06/15/2023 07:22:40 PM findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'FZYaoTi' (FZYTK.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:22:40 PM findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
06/15/2023 07:22:40 PM findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
06/15/2023 07:22:40 PM findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 1.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Simple Indust Outline' (SPINDOUT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
06/15/2023 07:22:40 PM findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Bold Italic Art' (BLDITLAR.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:22:40 PM findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
06/15/2023 07:22:40 PM findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 1.25
06/15/2023 07:22:40 PM findfont: score(<Font 'STSong' (STSONG.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Old Antic Decorative' (OLDANDEC.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Old Antic Decorative' (OLDANDEC.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:22:40 PM findfont: score(<Font 'DecoType Thuluth' (DTHULUTH.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:22:40 PM findfont: score(<Font 'HYPMokGak-Bold' (H2MKPB.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'HYMyeongJo-Extra' (H2MJRE.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 0.25
06/15/2023 07:22:40 PM findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'HYGothic-Extra' (H2GTRE.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
06/15/2023 07:22:40 PM findfont: score(<Font 'DecoType Naskh' (DTNASKH0.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
06/15/2023 07:22:40 PM findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:22:40 PM findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
06/15/2023 07:22:40 PM findfont: score(<Font 'HYPost-Medium' (H2PORM.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
06/15/2023 07:22:40 PM findfont: score(<Font 'HYSinMyeongJo-Medium' (H2MJSM.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 1.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Farsi Simple Outline' (FRSSPOUT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
06/15/2023 07:22:40 PM findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:22:40 PM findfont: score(<Font 'STFangsong' (STFANGSO.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Simple Indust Shaded' (SPINDSHD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
06/15/2023 07:22:40 PM findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 0.5349999999999999
06/15/2023 07:22:40 PM findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 0.25
06/15/2023 07:22:40 PM findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'PT Simple Bold Ruled' (SPBLDRUL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Yet R' (HMFMOLD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:22:40 PM findfont: score(<Font 'STZhongsong' (STZHONGS.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
06/15/2023 07:22:40 PM findfont: score(<Font 'PT Bold Broken' (PTBLDBRK.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'PT Bold Dusky' (PTBLDDSK.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
06/15/2023 07:22:40 PM findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
06/15/2023 07:22:40 PM findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
06/15/2023 07:22:40 PM findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:22:40 PM findfont: score(<Font 'HYGraphic-Medium' (H2GPRM.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
06/15/2023 07:22:40 PM findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
06/15/2023 07:22:40 PM findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:22:40 PM findfont: score(<Font 'STXingkai' (STXINGKA.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
06/15/2023 07:22:40 PM findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Old Antic Outline' (OLDANOUT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
06/15/2023 07:22:40 PM findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Led Italic Font' (LEDITFNT.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
06/15/2023 07:22:40 PM findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:22:40 PM findfont: score(<Font 'STHupo' (STHUPO.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'HYPMokGak-Bold' (H2MKPB.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:22:40 PM findfont: score(<Font 'HYGraphic-Medium' (H2GPRM.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
06/15/2023 07:22:40 PM findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:22:40 PM findfont: score(<Font 'HYShortSamul-Medium' (H2SA1M.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
06/15/2023 07:22:40 PM findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'DecoType Naskh Swashes' (DTNASKH4.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
06/15/2023 07:22:40 PM findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Simple Indust Shaded' (SPINDSHD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'STHupo' (STHUPO.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'PT Bold Arch' (PTBLDARC.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
06/15/2023 07:22:40 PM findfont: score(<Font 'Ami R' (HMKMAMI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'HYPost-Light' (H2PORL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
06/15/2023 07:22:40 PM findfont: score(<Font 'PT Bold Dusky' (PTBLDDSK.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
06/15/2023 07:22:40 PM findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:22:40 PM findfont: score(<Font 'Diwani Bent' (DIWANBNT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:22:40 PM findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
06/15/2023 07:22:40 PM findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=11.0 to Arial ('C:\\Windows\\Fonts\\arial.ttf') with score of 0.050000.
06/15/2023 07:27:03 PM findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
06/15/2023 07:27:03 PM findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 2.335
06/15/2023 07:27:03 PM findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:27:03 PM findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 2.05
06/15/2023 07:27:03 PM findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:27:03 PM findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:27:03 PM findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
06/15/2023 07:27:03 PM findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:27:03 PM findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:27:03 PM findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:27:03 PM findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:27:03 PM findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:27:03 PM findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 3.05
06/15/2023 07:27:03 PM findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 3.335
06/15/2023 07:27:03 PM findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
06/15/2023 07:27:03 PM findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:27:03 PM findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:27:03 PM findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:27:03 PM findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:27:03 PM findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:27:03 PM findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:27:03 PM findfont: score(<Font 'FZShuTi' (FZSTK.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
06/15/2023 07:27:03 PM findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
06/15/2023 07:27:03 PM findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
06/15/2023 07:27:03 PM findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
06/15/2023 07:27:03 PM findfont: score(<Font 'Ami R' (HMKMAMI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Kufi Extended Outline' (KFEXTOUT.TTF) normal normal 400 expanded>) = 10.25
06/15/2023 07:27:03 PM findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'MoeumT R' (HMFMMUEX.TTC) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'DecoType Naskh Variants' (DTNASKH2.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
06/15/2023 07:27:03 PM findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:27:03 PM findfont: score(<Font 'HYMyeongJo-Extra' (H2MJRE.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
06/15/2023 07:27:03 PM findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'AGA Arabesque Desktop' (ARBSQDTP.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Farsi Simple Outline' (FRSSPOUT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:27:03 PM findfont: score(<Font 'HYGothic-Extra' (H2GTRE.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:27:03 PM findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:27:03 PM findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:27:03 PM findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
06/15/2023 07:27:03 PM findfont: score(<Font 'Bold Italic Art' (BLDITLAR.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
06/15/2023 07:27:03 PM findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'YouYuan' (SIMYOU.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
06/15/2023 07:27:03 PM findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
06/15/2023 07:27:03 PM findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
06/15/2023 07:27:03 PM findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:27:03 PM findfont: score(<Font 'Mudir MT' (MUDIR.TTF) normal normal 600 normal>) = 10.24
06/15/2023 07:27:03 PM findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'HYGungSo-Bold' (H2GSRB.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:27:03 PM findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
06/15/2023 07:27:03 PM findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
06/15/2023 07:27:03 PM findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'STXinwei' (STXINWEI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'New Gulim' (NGULIM.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Old Antic Bold' (OLDANBLD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
06/15/2023 07:27:03 PM findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:27:03 PM findfont: score(<Font 'PT Bold Heading' (PTBLDHAD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
06/15/2023 07:27:03 PM findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
06/15/2023 07:27:03 PM findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Simple Indust Outline' (SPINDOUT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Simple Outline Pat' (SPOUTPAT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'HYShortSamul-Medium' (H2SA1M.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
06/15/2023 07:27:03 PM findfont: score(<Font 'Akhbar MT' (AKHBRBD.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
06/15/2023 07:27:03 PM findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:27:03 PM findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
06/15/2023 07:27:03 PM findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Italic Outline Art' (ITLOUTAR.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:27:03 PM findfont: score(<Font 'DecoType Naskh Extensions' (DTNASKH3.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
06/15/2023 07:27:03 PM findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 1.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Headline R' (HMKMRHD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Akhbar MT' (AKHBR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'PT Bold Mirror' (PTBLDMRR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'PT Bold Mirror' (PTBLDMRR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Farsi Simple Bold' (FRSSPBL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:27:03 PM findfont: score(<Font 'PT Bold Stars' (PTBLSSTR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Old Antic Outline' (OLDANOUT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:27:03 PM findfont: score(<Font 'PT Simple Bold Ruled' (SPBLDRUL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
06/15/2023 07:27:03 PM findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:27:03 PM findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
06/15/2023 07:27:03 PM findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
06/15/2023 07:27:03 PM findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Monotype Koufi' (KOUFIBD.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
06/15/2023 07:27:03 PM findfont: score(<Font 'HYGothic-Medium' (H2GTRM.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Old Antic Outline Shaded' (OLDOUTSH.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
06/15/2023 07:27:03 PM findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Headline R' (HMKMRHD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'HYSinMyeongJo-Medium' (H2MJSM.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'STLiti' (STLITI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Diwani Outline Shaded' (DWNOUTSH.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'PT Bold Arch' (PTBLDARC.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
06/15/2023 07:27:03 PM findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
06/15/2023 07:27:03 PM findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 0.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:27:03 PM findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:27:03 PM findfont: score(<Font 'MoeumT R' (HMFMMUEX.TTC) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
06/15/2023 07:27:03 PM findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:27:03 PM findfont: score(<Font 'STKaiti' (STKAITI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 0.525
06/15/2023 07:27:03 PM findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
06/15/2023 07:27:03 PM findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Diwani Bent' (DIWANBNT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
06/15/2023 07:27:03 PM findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 0.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Diwani Outline Shaded' (DWNOUTSH.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
06/15/2023 07:27:03 PM findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
06/15/2023 07:27:03 PM findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:27:03 PM findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Akhbar MT' (AKHBR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Diwani Simple Outline 2' (DWNSH2.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 0.33499999999999996
06/15/2023 07:27:03 PM findfont: score(<Font 'STCaiyun' (STCAIYUN.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'STXihei' (STXIHEI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'STLiti' (STLITI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'FZYaoTi' (FZYTK.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Old Antic Bold' (OLDANBLD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Diwani Letter' (DIWANLTR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'New Gulim' (NGULIM.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 0.525
06/15/2023 07:27:03 PM findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
06/15/2023 07:27:03 PM findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'AGA Arabesque' (ARABSQ.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:27:03 PM findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
06/15/2023 07:27:03 PM findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 0.33499999999999996
06/15/2023 07:27:03 PM findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
06/15/2023 07:27:03 PM findfont: score(<Font 'DecoType Naskh Special' (DTNASKH1.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'AGA Arabesque' (ARABSQ.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'STCaiyun' (STCAIYUN.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'PT Separated Baloon' (PTSEPBAL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
06/15/2023 07:27:03 PM findfont: score(<Font 'HYPost-Medium' (H2PORM.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
06/15/2023 07:27:03 PM findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:27:03 PM findfont: score(<Font 'STKaiti' (STKAITI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
06/15/2023 07:27:03 PM findfont: score(<Font 'Simple Bold Jut Out' (SPBLDJUT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 1.25
06/15/2023 07:27:03 PM findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Diwani Simple Outline' (DWNSPOUT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
06/15/2023 07:27:03 PM findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:27:03 PM findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
06/15/2023 07:27:03 PM findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
06/15/2023 07:27:03 PM findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:27:03 PM findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:27:03 PM findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
06/15/2023 07:27:03 PM findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
06/15/2023 07:27:03 PM findfont: score(<Font 'DecoType Naskh Extensions' (DTNASKH3.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
06/15/2023 07:27:03 PM findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:27:03 PM findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
06/15/2023 07:27:03 PM findfont: score(<Font 'Kufi Outline Shaded' (KFOUTSHD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
06/15/2023 07:27:03 PM findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:27:03 PM findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Monotype Koufi' (KOUFIBD.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:27:03 PM findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
06/15/2023 07:27:03 PM findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
06/15/2023 07:27:03 PM findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'PT Separated Baloon' (PTSEPBAL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 1.535
06/15/2023 07:27:03 PM findfont: score(<Font 'HYGungSo-Bold' (H2GSRB.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
06/15/2023 07:27:03 PM findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
06/15/2023 07:27:03 PM findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'YouYuan' (SIMYOU.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'STXinwei' (STXINWEI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Simple Outline Pat' (SPOUTPAT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:27:03 PM findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'STFangsong' (STFANGSO.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:27:03 PM findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'HYHeadLine-Medium' (H2HDRM.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:27:03 PM findfont: score(<Font 'STXihei' (STXIHEI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:27:03 PM findfont: score(<Font 'STSong' (STSONG.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
06/15/2023 07:27:03 PM findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Mudir MT' (MUDIR.TTF) normal normal 600 normal>) = 10.24
06/15/2023 07:27:03 PM findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:27:03 PM findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 0.5349999999999999
06/15/2023 07:27:03 PM findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
06/15/2023 07:27:03 PM findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
06/15/2023 07:27:03 PM findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Italic Outline Art' (ITLOUTAR.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Pyunji R' (HMFMPYUN.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Magic R' (HMKMMAG.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'STZhongsong' (STZHONGS.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 1.535
06/15/2023 07:27:03 PM findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 500 normal>) = 10.145
06/15/2023 07:27:03 PM findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
06/15/2023 07:27:03 PM findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Kufi Outline Shaded' (KFOUTSHD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'AGA Arabesque Desktop' (ARBSQDTP.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Magic R' (HMKMMAG.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
06/15/2023 07:27:03 PM findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Diwani Simple Striped' (DWNSPSTR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'LiSu' (SIMLI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
06/15/2023 07:27:03 PM findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:27:03 PM findfont: score(<Font 'DecoType Thuluth' (DTHULUTH.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
06/15/2023 07:27:03 PM findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:27:03 PM findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
06/15/2023 07:27:03 PM findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Farsi Simple Bold' (FRSSPBL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Diwani Letter' (DIWANLTR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
06/15/2023 07:27:03 PM findfont: score(<Font 'PT Bold Stars' (PTBLSSTR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'HYHeadLine-Medium' (H2HDRM.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:27:03 PM findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:27:03 PM findfont: score(<Font 'PT Bold Heading' (PTBLDHAD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
06/15/2023 07:27:03 PM findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'DecoType Naskh Variants' (DTNASKH2.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
06/15/2023 07:27:03 PM findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 1.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:27:03 PM findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Diwani Simple Outline 2' (DWNSH2.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
06/15/2023 07:27:03 PM findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'DecoType Naskh' (DTNASKH0.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Pyunji R' (HMFMPYUN.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Diwani Simple Outline' (DWNSPOUT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
06/15/2023 07:27:03 PM findfont: score(<Font 'Diwani Simple Striped' (DWNSPSTR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:27:03 PM findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
06/15/2023 07:27:03 PM findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'DecoType Naskh Special' (DTNASKH1.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Akhbar MT' (AKHBRBD.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:27:03 PM findfont: score(<Font 'DecoType Naskh Swashes' (DTNASKH4.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:27:03 PM findfont: score(<Font 'PT Bold Broken' (PTBLDBRK.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:27:03 PM findfont: score(<Font 'FZShuTi' (FZSTK.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'STXingkai' (STXINGKA.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
06/15/2023 07:27:03 PM findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'HYPost-Light' (H2PORL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'HYGothic-Medium' (H2GTRM.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Kufi Extended Outline' (KFEXTOUT.TTF) normal normal 400 expanded>) = 10.25
06/15/2023 07:27:03 PM findfont: score(<Font 'Old Antic Outline Shaded' (OLDOUTSH.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:27:03 PM findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
06/15/2023 07:27:03 PM findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Led Italic Font' (LEDITFNT.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:27:03 PM findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Yet R' (HMFMOLD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
06/15/2023 07:27:03 PM findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
06/15/2023 07:27:03 PM findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:27:03 PM findfont: score(<Font 'LiSu' (SIMLI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Simple Bold Jut Out' (SPBLDJUT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
06/15/2023 07:27:03 PM findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'FZYaoTi' (FZYTK.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:27:03 PM findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
06/15/2023 07:27:03 PM findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
06/15/2023 07:27:03 PM findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 1.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Simple Indust Outline' (SPINDOUT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
06/15/2023 07:27:03 PM findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Bold Italic Art' (BLDITLAR.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:27:03 PM findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
06/15/2023 07:27:03 PM findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 1.25
06/15/2023 07:27:03 PM findfont: score(<Font 'STSong' (STSONG.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Old Antic Decorative' (OLDANDEC.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Old Antic Decorative' (OLDANDEC.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:27:03 PM findfont: score(<Font 'DecoType Thuluth' (DTHULUTH.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:27:03 PM findfont: score(<Font 'HYPMokGak-Bold' (H2MKPB.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'HYMyeongJo-Extra' (H2MJRE.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 0.25
06/15/2023 07:27:03 PM findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'HYGothic-Extra' (H2GTRE.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
06/15/2023 07:27:03 PM findfont: score(<Font 'DecoType Naskh' (DTNASKH0.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
06/15/2023 07:27:03 PM findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:27:03 PM findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
06/15/2023 07:27:03 PM findfont: score(<Font 'HYPost-Medium' (H2PORM.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
06/15/2023 07:27:03 PM findfont: score(<Font 'HYSinMyeongJo-Medium' (H2MJSM.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 1.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Farsi Simple Outline' (FRSSPOUT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
06/15/2023 07:27:03 PM findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:27:03 PM findfont: score(<Font 'STFangsong' (STFANGSO.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Simple Indust Shaded' (SPINDSHD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
06/15/2023 07:27:03 PM findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 0.5349999999999999
06/15/2023 07:27:03 PM findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 0.25
06/15/2023 07:27:03 PM findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'PT Simple Bold Ruled' (SPBLDRUL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Yet R' (HMFMOLD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:27:03 PM findfont: score(<Font 'STZhongsong' (STZHONGS.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
06/15/2023 07:27:03 PM findfont: score(<Font 'PT Bold Broken' (PTBLDBRK.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'PT Bold Dusky' (PTBLDDSK.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
06/15/2023 07:27:03 PM findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
06/15/2023 07:27:03 PM findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
06/15/2023 07:27:03 PM findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:27:03 PM findfont: score(<Font 'HYGraphic-Medium' (H2GPRM.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
06/15/2023 07:27:03 PM findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
06/15/2023 07:27:03 PM findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:27:03 PM findfont: score(<Font 'STXingkai' (STXINGKA.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
06/15/2023 07:27:03 PM findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Old Antic Outline' (OLDANOUT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
06/15/2023 07:27:03 PM findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Led Italic Font' (LEDITFNT.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
06/15/2023 07:27:03 PM findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:27:03 PM findfont: score(<Font 'STHupo' (STHUPO.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'HYPMokGak-Bold' (H2MKPB.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:27:03 PM findfont: score(<Font 'HYGraphic-Medium' (H2GPRM.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
06/15/2023 07:27:03 PM findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:27:03 PM findfont: score(<Font 'HYShortSamul-Medium' (H2SA1M.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
06/15/2023 07:27:03 PM findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'DecoType Naskh Swashes' (DTNASKH4.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
06/15/2023 07:27:03 PM findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Simple Indust Shaded' (SPINDSHD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'STHupo' (STHUPO.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'PT Bold Arch' (PTBLDARC.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
06/15/2023 07:27:03 PM findfont: score(<Font 'Ami R' (HMKMAMI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'HYPost-Light' (H2PORL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
06/15/2023 07:27:03 PM findfont: score(<Font 'PT Bold Dusky' (PTBLDDSK.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
06/15/2023 07:27:03 PM findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:27:03 PM findfont: score(<Font 'Diwani Bent' (DIWANBNT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:27:03 PM findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
06/15/2023 07:27:03 PM findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to Arial ('C:\\Windows\\Fonts\\arial.ttf') with score of 0.050000.
06/15/2023 07:29:04 PM init
06/15/2023 07:50:33 PM findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
06/15/2023 07:50:33 PM findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
06/15/2023 07:50:33 PM findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:50:33 PM findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
06/15/2023 07:50:33 PM findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:33 PM findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:33 PM findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
06/15/2023 07:50:33 PM findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:50:33 PM findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:33 PM findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:33 PM findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:33 PM findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:50:33 PM findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
06/15/2023 07:50:33 PM findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
06/15/2023 07:50:33 PM findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
06/15/2023 07:50:33 PM findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:50:33 PM findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:50:33 PM findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:50:33 PM findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:33 PM findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:33 PM findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:50:33 PM findfont: score(<Font 'FZShuTi' (FZSTK.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
06/15/2023 07:50:33 PM findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
06/15/2023 07:50:33 PM findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
06/15/2023 07:50:33 PM findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
06/15/2023 07:50:33 PM findfont: score(<Font 'Ami R' (HMKMAMI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Kufi Extended Outline' (KFEXTOUT.TTF) normal normal 400 expanded>) = 10.25
06/15/2023 07:50:33 PM findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'MoeumT R' (HMFMMUEX.TTC) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'DecoType Naskh Variants' (DTNASKH2.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
06/15/2023 07:50:33 PM findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:50:33 PM findfont: score(<Font 'HYMyeongJo-Extra' (H2MJRE.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
06/15/2023 07:50:33 PM findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'AGA Arabesque Desktop' (ARBSQDTP.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Farsi Simple Outline' (FRSSPOUT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:33 PM findfont: score(<Font 'HYGothic-Extra' (H2GTRE.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:50:33 PM findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:33 PM findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:50:33 PM findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
06/15/2023 07:50:33 PM findfont: score(<Font 'Bold Italic Art' (BLDITLAR.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
06/15/2023 07:50:33 PM findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'YouYuan' (SIMYOU.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
06/15/2023 07:50:33 PM findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
06/15/2023 07:50:33 PM findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
06/15/2023 07:50:33 PM findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:50:33 PM findfont: score(<Font 'Mudir MT' (MUDIR.TTF) normal normal 600 normal>) = 10.24
06/15/2023 07:50:33 PM findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'HYGungSo-Bold' (H2GSRB.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:50:33 PM findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
06/15/2023 07:50:33 PM findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
06/15/2023 07:50:33 PM findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'STXinwei' (STXINWEI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'New Gulim' (NGULIM.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Old Antic Bold' (OLDANBLD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
06/15/2023 07:50:33 PM findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:33 PM findfont: score(<Font 'PT Bold Heading' (PTBLDHAD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
06/15/2023 07:50:33 PM findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
06/15/2023 07:50:33 PM findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Simple Indust Outline' (SPINDOUT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Simple Outline Pat' (SPOUTPAT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'HYShortSamul-Medium' (H2SA1M.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
06/15/2023 07:50:33 PM findfont: score(<Font 'Akhbar MT' (AKHBRBD.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
06/15/2023 07:50:33 PM findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:50:33 PM findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
06/15/2023 07:50:33 PM findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Italic Outline Art' (ITLOUTAR.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:33 PM findfont: score(<Font 'DecoType Naskh Extensions' (DTNASKH3.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
06/15/2023 07:50:33 PM findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
06/15/2023 07:50:33 PM findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Headline R' (HMKMRHD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Akhbar MT' (AKHBR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'PT Bold Mirror' (PTBLDMRR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'PT Bold Mirror' (PTBLDMRR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Farsi Simple Bold' (FRSSPBL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:50:33 PM findfont: score(<Font 'PT Bold Stars' (PTBLSSTR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Old Antic Outline' (OLDANOUT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:33 PM findfont: score(<Font 'PT Simple Bold Ruled' (SPBLDRUL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
06/15/2023 07:50:33 PM findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:33 PM findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
06/15/2023 07:50:33 PM findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
06/15/2023 07:50:33 PM findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Monotype Koufi' (KOUFIBD.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
06/15/2023 07:50:33 PM findfont: score(<Font 'HYGothic-Medium' (H2GTRM.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Old Antic Outline Shaded' (OLDOUTSH.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
06/15/2023 07:50:33 PM findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Headline R' (HMKMRHD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'HYSinMyeongJo-Medium' (H2MJSM.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'STLiti' (STLITI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
06/15/2023 07:50:33 PM findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Diwani Outline Shaded' (DWNOUTSH.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'PT Bold Arch' (PTBLDARC.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
06/15/2023 07:50:33 PM findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
06/15/2023 07:50:33 PM findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
06/15/2023 07:50:33 PM findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:33 PM findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:33 PM findfont: score(<Font 'MoeumT R' (HMFMMUEX.TTC) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
06/15/2023 07:50:33 PM findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:33 PM findfont: score(<Font 'STKaiti' (STKAITI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
06/15/2023 07:50:33 PM findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
06/15/2023 07:50:33 PM findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Diwani Bent' (DIWANBNT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
06/15/2023 07:50:33 PM findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
06/15/2023 07:50:33 PM findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Diwani Outline Shaded' (DWNOUTSH.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
06/15/2023 07:50:33 PM findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
06/15/2023 07:50:33 PM findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:50:33 PM findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Akhbar MT' (AKHBR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Diwani Simple Outline 2' (DWNSH2.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
06/15/2023 07:50:33 PM findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
06/15/2023 07:50:33 PM findfont: score(<Font 'STCaiyun' (STCAIYUN.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'STXihei' (STXIHEI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'STLiti' (STLITI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'FZYaoTi' (FZYTK.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Old Antic Bold' (OLDANBLD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Diwani Letter' (DIWANLTR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'New Gulim' (NGULIM.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
06/15/2023 07:50:33 PM findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
06/15/2023 07:50:33 PM findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'AGA Arabesque' (ARABSQ.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:33 PM findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
06/15/2023 07:50:33 PM findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
06/15/2023 07:50:33 PM findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
06/15/2023 07:50:33 PM findfont: score(<Font 'DecoType Naskh Special' (DTNASKH1.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'AGA Arabesque' (ARABSQ.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'STCaiyun' (STCAIYUN.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'PT Separated Baloon' (PTSEPBAL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
06/15/2023 07:50:33 PM findfont: score(<Font 'HYPost-Medium' (H2PORM.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
06/15/2023 07:50:33 PM findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:50:33 PM findfont: score(<Font 'STKaiti' (STKAITI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
06/15/2023 07:50:33 PM findfont: score(<Font 'Simple Bold Jut Out' (SPBLDJUT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
06/15/2023 07:50:33 PM findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Diwani Simple Outline' (DWNSPOUT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
06/15/2023 07:50:33 PM findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:50:33 PM findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
06/15/2023 07:50:33 PM findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
06/15/2023 07:50:33 PM findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:50:33 PM findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:50:33 PM findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
06/15/2023 07:50:33 PM findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
06/15/2023 07:50:33 PM findfont: score(<Font 'DecoType Naskh Extensions' (DTNASKH3.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
06/15/2023 07:50:33 PM findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:50:33 PM findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
06/15/2023 07:50:33 PM findfont: score(<Font 'Kufi Outline Shaded' (KFOUTSHD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
06/15/2023 07:50:33 PM findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:50:33 PM findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Monotype Koufi' (KOUFIBD.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:50:33 PM findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
06/15/2023 07:50:33 PM findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
06/15/2023 07:50:33 PM findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'PT Separated Baloon' (PTSEPBAL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
06/15/2023 07:50:33 PM findfont: score(<Font 'HYGungSo-Bold' (H2GSRB.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
06/15/2023 07:50:33 PM findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
06/15/2023 07:50:33 PM findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'YouYuan' (SIMYOU.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'STXinwei' (STXINWEI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Simple Outline Pat' (SPOUTPAT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:50:33 PM findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'STFangsong' (STFANGSO.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:50:33 PM findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'HYHeadLine-Medium' (H2HDRM.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:50:33 PM findfont: score(<Font 'STXihei' (STXIHEI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:50:33 PM findfont: score(<Font 'STSong' (STSONG.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
06/15/2023 07:50:33 PM findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Mudir MT' (MUDIR.TTF) normal normal 600 normal>) = 10.24
06/15/2023 07:50:33 PM findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:50:33 PM findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
06/15/2023 07:50:33 PM findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
06/15/2023 07:50:33 PM findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
06/15/2023 07:50:33 PM findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Italic Outline Art' (ITLOUTAR.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Pyunji R' (HMFMPYUN.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Magic R' (HMKMMAG.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'STZhongsong' (STZHONGS.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
06/15/2023 07:50:33 PM findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 500 normal>) = 10.145
06/15/2023 07:50:33 PM findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
06/15/2023 07:50:33 PM findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Kufi Outline Shaded' (KFOUTSHD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'AGA Arabesque Desktop' (ARBSQDTP.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Magic R' (HMKMMAG.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
06/15/2023 07:50:33 PM findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
06/15/2023 07:50:33 PM findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Diwani Simple Striped' (DWNSPSTR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'LiSu' (SIMLI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
06/15/2023 07:50:33 PM findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:50:33 PM findfont: score(<Font 'DecoType Thuluth' (DTHULUTH.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
06/15/2023 07:50:33 PM findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:50:33 PM findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
06/15/2023 07:50:33 PM findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Farsi Simple Bold' (FRSSPBL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Diwani Letter' (DIWANLTR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
06/15/2023 07:50:33 PM findfont: score(<Font 'PT Bold Stars' (PTBLSSTR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'HYHeadLine-Medium' (H2HDRM.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:50:33 PM findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
06/15/2023 07:50:33 PM findfont: score(<Font 'PT Bold Heading' (PTBLDHAD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
06/15/2023 07:50:33 PM findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'DecoType Naskh Variants' (DTNASKH2.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
06/15/2023 07:50:33 PM findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
06/15/2023 07:50:33 PM findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:50:33 PM findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Diwani Simple Outline 2' (DWNSH2.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
06/15/2023 07:50:33 PM findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'DecoType Naskh' (DTNASKH0.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Pyunji R' (HMFMPYUN.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Diwani Simple Outline' (DWNSPOUT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
06/15/2023 07:50:33 PM findfont: score(<Font 'Diwani Simple Striped' (DWNSPSTR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:50:33 PM findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
06/15/2023 07:50:33 PM findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'DecoType Naskh Special' (DTNASKH1.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Akhbar MT' (AKHBRBD.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:33 PM findfont: score(<Font 'DecoType Naskh Swashes' (DTNASKH4.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:33 PM findfont: score(<Font 'PT Bold Broken' (PTBLDBRK.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:33 PM findfont: score(<Font 'FZShuTi' (FZSTK.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'STXingkai' (STXINGKA.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
06/15/2023 07:50:33 PM findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'HYPost-Light' (H2PORL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'HYGothic-Medium' (H2GTRM.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Kufi Extended Outline' (KFEXTOUT.TTF) normal normal 400 expanded>) = 10.25
06/15/2023 07:50:33 PM findfont: score(<Font 'Old Antic Outline Shaded' (OLDOUTSH.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:50:33 PM findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
06/15/2023 07:50:33 PM findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Led Italic Font' (LEDITFNT.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:50:33 PM findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Yet R' (HMFMOLD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
06/15/2023 07:50:33 PM findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
06/15/2023 07:50:33 PM findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:50:33 PM findfont: score(<Font 'LiSu' (SIMLI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Simple Bold Jut Out' (SPBLDJUT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
06/15/2023 07:50:33 PM findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
06/15/2023 07:50:33 PM findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'FZYaoTi' (FZYTK.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:50:33 PM findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
06/15/2023 07:50:33 PM findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
06/15/2023 07:50:33 PM findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
06/15/2023 07:50:33 PM findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
06/15/2023 07:50:33 PM findfont: score(<Font 'Simple Indust Outline' (SPINDOUT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
06/15/2023 07:50:33 PM findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Bold Italic Art' (BLDITLAR.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:50:33 PM findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
06/15/2023 07:50:33 PM findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
06/15/2023 07:50:33 PM findfont: score(<Font 'STSong' (STSONG.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Old Antic Decorative' (OLDANDEC.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Old Antic Decorative' (OLDANDEC.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:33 PM findfont: score(<Font 'DecoType Thuluth' (DTHULUTH.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:33 PM findfont: score(<Font 'HYPMokGak-Bold' (H2MKPB.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'HYMyeongJo-Extra' (H2MJRE.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
06/15/2023 07:50:33 PM findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'HYGothic-Extra' (H2GTRE.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
06/15/2023 07:50:33 PM findfont: score(<Font 'DecoType Naskh' (DTNASKH0.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
06/15/2023 07:50:33 PM findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
06/15/2023 07:50:33 PM findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:50:33 PM findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
06/15/2023 07:50:33 PM findfont: score(<Font 'HYPost-Medium' (H2PORM.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
06/15/2023 07:50:33 PM findfont: score(<Font 'HYSinMyeongJo-Medium' (H2MJSM.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
06/15/2023 07:50:33 PM findfont: score(<Font 'Farsi Simple Outline' (FRSSPOUT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
06/15/2023 07:50:33 PM findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:50:33 PM findfont: score(<Font 'STFangsong' (STFANGSO.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Simple Indust Shaded' (SPINDSHD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
06/15/2023 07:50:33 PM findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
06/15/2023 07:50:33 PM findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
06/15/2023 07:50:33 PM findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'PT Simple Bold Ruled' (SPBLDRUL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Yet R' (HMFMOLD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:50:33 PM findfont: score(<Font 'STZhongsong' (STZHONGS.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
06/15/2023 07:50:33 PM findfont: score(<Font 'PT Bold Broken' (PTBLDBRK.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
06/15/2023 07:50:33 PM findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'PT Bold Dusky' (PTBLDDSK.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
06/15/2023 07:50:33 PM findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
06/15/2023 07:50:33 PM findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
06/15/2023 07:50:33 PM findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:33 PM findfont: score(<Font 'HYGraphic-Medium' (H2GPRM.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
06/15/2023 07:50:33 PM findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
06/15/2023 07:50:33 PM findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:50:33 PM findfont: score(<Font 'STXingkai' (STXINGKA.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
06/15/2023 07:50:33 PM findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Old Antic Outline' (OLDANOUT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
06/15/2023 07:50:33 PM findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Led Italic Font' (LEDITFNT.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
06/15/2023 07:50:33 PM findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:50:33 PM findfont: score(<Font 'STHupo' (STHUPO.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'HYPMokGak-Bold' (H2MKPB.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:50:33 PM findfont: score(<Font 'HYGraphic-Medium' (H2GPRM.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
06/15/2023 07:50:33 PM findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:50:33 PM findfont: score(<Font 'HYShortSamul-Medium' (H2SA1M.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
06/15/2023 07:50:33 PM findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'DecoType Naskh Swashes' (DTNASKH4.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
06/15/2023 07:50:33 PM findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Simple Indust Shaded' (SPINDSHD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'STHupo' (STHUPO.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'PT Bold Arch' (PTBLDARC.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
06/15/2023 07:50:33 PM findfont: score(<Font 'Ami R' (HMKMAMI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'HYPost-Light' (H2PORL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
06/15/2023 07:50:33 PM findfont: score(<Font 'PT Bold Dusky' (PTBLDDSK.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
06/15/2023 07:50:33 PM findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:50:33 PM findfont: score(<Font 'Diwani Bent' (DIWANBNT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:33 PM findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
06/15/2023 07:50:33 PM findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('c:\\Users\\timko\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
06/15/2023 07:50:40 PM init
06/15/2023 07:50:42 PM init
06/15/2023 07:50:50 PM findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=11.0.
06/15/2023 07:50:50 PM findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 2.335
06/15/2023 07:50:50 PM findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:50:50 PM findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 2.05
06/15/2023 07:50:50 PM findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:50 PM findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:50 PM findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
06/15/2023 07:50:50 PM findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:50:50 PM findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:50 PM findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:50 PM findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:50 PM findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:50:50 PM findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 3.05
06/15/2023 07:50:50 PM findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 3.335
06/15/2023 07:50:50 PM findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
06/15/2023 07:50:50 PM findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:50:50 PM findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:50:50 PM findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:50:50 PM findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:50 PM findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:50 PM findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:50:50 PM findfont: score(<Font 'FZShuTi' (FZSTK.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
06/15/2023 07:50:50 PM findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
06/15/2023 07:50:50 PM findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
06/15/2023 07:50:50 PM findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
06/15/2023 07:50:50 PM findfont: score(<Font 'Ami R' (HMKMAMI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Kufi Extended Outline' (KFEXTOUT.TTF) normal normal 400 expanded>) = 10.25
06/15/2023 07:50:50 PM findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'MoeumT R' (HMFMMUEX.TTC) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'DecoType Naskh Variants' (DTNASKH2.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
06/15/2023 07:50:50 PM findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:50:50 PM findfont: score(<Font 'HYMyeongJo-Extra' (H2MJRE.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
06/15/2023 07:50:50 PM findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'AGA Arabesque Desktop' (ARBSQDTP.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Farsi Simple Outline' (FRSSPOUT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:50 PM findfont: score(<Font 'HYGothic-Extra' (H2GTRE.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:50:50 PM findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:50 PM findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:50:50 PM findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
06/15/2023 07:50:50 PM findfont: score(<Font 'Bold Italic Art' (BLDITLAR.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
06/15/2023 07:50:50 PM findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'YouYuan' (SIMYOU.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
06/15/2023 07:50:50 PM findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
06/15/2023 07:50:50 PM findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
06/15/2023 07:50:50 PM findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:50:50 PM findfont: score(<Font 'Mudir MT' (MUDIR.TTF) normal normal 600 normal>) = 10.24
06/15/2023 07:50:50 PM findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'HYGungSo-Bold' (H2GSRB.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:50:50 PM findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
06/15/2023 07:50:50 PM findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
06/15/2023 07:50:50 PM findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'STXinwei' (STXINWEI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'New Gulim' (NGULIM.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Old Antic Bold' (OLDANBLD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
06/15/2023 07:50:50 PM findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:50 PM findfont: score(<Font 'PT Bold Heading' (PTBLDHAD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
06/15/2023 07:50:50 PM findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
06/15/2023 07:50:50 PM findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Simple Indust Outline' (SPINDOUT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Simple Outline Pat' (SPOUTPAT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'HYShortSamul-Medium' (H2SA1M.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
06/15/2023 07:50:50 PM findfont: score(<Font 'Akhbar MT' (AKHBRBD.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
06/15/2023 07:50:50 PM findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:50:50 PM findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
06/15/2023 07:50:50 PM findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Italic Outline Art' (ITLOUTAR.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:50 PM findfont: score(<Font 'DecoType Naskh Extensions' (DTNASKH3.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
06/15/2023 07:50:50 PM findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 1.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Headline R' (HMKMRHD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Akhbar MT' (AKHBR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'PT Bold Mirror' (PTBLDMRR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'PT Bold Mirror' (PTBLDMRR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Farsi Simple Bold' (FRSSPBL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:50:50 PM findfont: score(<Font 'PT Bold Stars' (PTBLSSTR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Old Antic Outline' (OLDANOUT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:50 PM findfont: score(<Font 'PT Simple Bold Ruled' (SPBLDRUL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
06/15/2023 07:50:50 PM findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:50 PM findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
06/15/2023 07:50:50 PM findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
06/15/2023 07:50:50 PM findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Monotype Koufi' (KOUFIBD.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
06/15/2023 07:50:50 PM findfont: score(<Font 'HYGothic-Medium' (H2GTRM.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Old Antic Outline Shaded' (OLDOUTSH.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
06/15/2023 07:50:50 PM findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Headline R' (HMKMRHD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'HYSinMyeongJo-Medium' (H2MJSM.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'STLiti' (STLITI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Diwani Outline Shaded' (DWNOUTSH.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'PT Bold Arch' (PTBLDARC.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
06/15/2023 07:50:50 PM findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
06/15/2023 07:50:50 PM findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 0.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:50 PM findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:50 PM findfont: score(<Font 'MoeumT R' (HMFMMUEX.TTC) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
06/15/2023 07:50:50 PM findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:50 PM findfont: score(<Font 'STKaiti' (STKAITI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 0.525
06/15/2023 07:50:50 PM findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
06/15/2023 07:50:50 PM findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Diwani Bent' (DIWANBNT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
06/15/2023 07:50:50 PM findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 0.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Diwani Outline Shaded' (DWNOUTSH.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
06/15/2023 07:50:50 PM findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
06/15/2023 07:50:50 PM findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:50:50 PM findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Akhbar MT' (AKHBR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Diwani Simple Outline 2' (DWNSH2.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 0.33499999999999996
06/15/2023 07:50:50 PM findfont: score(<Font 'STCaiyun' (STCAIYUN.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'STXihei' (STXIHEI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'STLiti' (STLITI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'FZYaoTi' (FZYTK.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Old Antic Bold' (OLDANBLD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Diwani Letter' (DIWANLTR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'New Gulim' (NGULIM.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 0.525
06/15/2023 07:50:50 PM findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
06/15/2023 07:50:50 PM findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'AGA Arabesque' (ARABSQ.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:50 PM findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
06/15/2023 07:50:50 PM findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 0.33499999999999996
06/15/2023 07:50:50 PM findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
06/15/2023 07:50:50 PM findfont: score(<Font 'DecoType Naskh Special' (DTNASKH1.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'AGA Arabesque' (ARABSQ.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'STCaiyun' (STCAIYUN.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'PT Separated Baloon' (PTSEPBAL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
06/15/2023 07:50:50 PM findfont: score(<Font 'HYPost-Medium' (H2PORM.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
06/15/2023 07:50:50 PM findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:50:50 PM findfont: score(<Font 'STKaiti' (STKAITI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
06/15/2023 07:50:50 PM findfont: score(<Font 'Simple Bold Jut Out' (SPBLDJUT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 1.25
06/15/2023 07:50:50 PM findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Diwani Simple Outline' (DWNSPOUT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
06/15/2023 07:50:50 PM findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:50:50 PM findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
06/15/2023 07:50:50 PM findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
06/15/2023 07:50:50 PM findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:50:50 PM findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:50:50 PM findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
06/15/2023 07:50:50 PM findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
06/15/2023 07:50:50 PM findfont: score(<Font 'DecoType Naskh Extensions' (DTNASKH3.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
06/15/2023 07:50:50 PM findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:50:50 PM findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
06/15/2023 07:50:50 PM findfont: score(<Font 'Kufi Outline Shaded' (KFOUTSHD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
06/15/2023 07:50:50 PM findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:50:50 PM findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Monotype Koufi' (KOUFIBD.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:50:50 PM findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
06/15/2023 07:50:50 PM findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
06/15/2023 07:50:50 PM findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'PT Separated Baloon' (PTSEPBAL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 1.535
06/15/2023 07:50:50 PM findfont: score(<Font 'HYGungSo-Bold' (H2GSRB.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
06/15/2023 07:50:50 PM findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
06/15/2023 07:50:50 PM findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'YouYuan' (SIMYOU.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'STXinwei' (STXINWEI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Simple Outline Pat' (SPOUTPAT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:50:50 PM findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'STFangsong' (STFANGSO.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:50:50 PM findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'HYHeadLine-Medium' (H2HDRM.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:50:50 PM findfont: score(<Font 'STXihei' (STXIHEI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:50:50 PM findfont: score(<Font 'STSong' (STSONG.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
06/15/2023 07:50:50 PM findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Mudir MT' (MUDIR.TTF) normal normal 600 normal>) = 10.24
06/15/2023 07:50:50 PM findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:50:50 PM findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 0.5349999999999999
06/15/2023 07:50:50 PM findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
06/15/2023 07:50:50 PM findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
06/15/2023 07:50:50 PM findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Italic Outline Art' (ITLOUTAR.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Pyunji R' (HMFMPYUN.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Magic R' (HMKMMAG.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'STZhongsong' (STZHONGS.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 1.535
06/15/2023 07:50:50 PM findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 500 normal>) = 10.145
06/15/2023 07:50:50 PM findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
06/15/2023 07:50:50 PM findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Kufi Outline Shaded' (KFOUTSHD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'AGA Arabesque Desktop' (ARBSQDTP.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Magic R' (HMKMMAG.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
06/15/2023 07:50:50 PM findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Diwani Simple Striped' (DWNSPSTR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'LiSu' (SIMLI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
06/15/2023 07:50:50 PM findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:50:50 PM findfont: score(<Font 'DecoType Thuluth' (DTHULUTH.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
06/15/2023 07:50:50 PM findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:50:50 PM findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
06/15/2023 07:50:50 PM findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Farsi Simple Bold' (FRSSPBL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Diwani Letter' (DIWANLTR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
06/15/2023 07:50:50 PM findfont: score(<Font 'PT Bold Stars' (PTBLSSTR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'HYHeadLine-Medium' (H2HDRM.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:50:50 PM findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:50 PM findfont: score(<Font 'PT Bold Heading' (PTBLDHAD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
06/15/2023 07:50:50 PM findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'DecoType Naskh Variants' (DTNASKH2.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
06/15/2023 07:50:50 PM findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 1.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:50:50 PM findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Diwani Simple Outline 2' (DWNSH2.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
06/15/2023 07:50:50 PM findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'DecoType Naskh' (DTNASKH0.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Pyunji R' (HMFMPYUN.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Diwani Simple Outline' (DWNSPOUT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
06/15/2023 07:50:50 PM findfont: score(<Font 'Diwani Simple Striped' (DWNSPSTR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:50:50 PM findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
06/15/2023 07:50:50 PM findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'DecoType Naskh Special' (DTNASKH1.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Akhbar MT' (AKHBRBD.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:50 PM findfont: score(<Font 'DecoType Naskh Swashes' (DTNASKH4.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:50 PM findfont: score(<Font 'PT Bold Broken' (PTBLDBRK.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:50 PM findfont: score(<Font 'FZShuTi' (FZSTK.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'STXingkai' (STXINGKA.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
06/15/2023 07:50:50 PM findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'HYPost-Light' (H2PORL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'HYGothic-Medium' (H2GTRM.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Kufi Extended Outline' (KFEXTOUT.TTF) normal normal 400 expanded>) = 10.25
06/15/2023 07:50:50 PM findfont: score(<Font 'Old Antic Outline Shaded' (OLDOUTSH.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:50:50 PM findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
06/15/2023 07:50:50 PM findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Led Italic Font' (LEDITFNT.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:50:50 PM findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Yet R' (HMFMOLD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
06/15/2023 07:50:50 PM findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
06/15/2023 07:50:50 PM findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:50:50 PM findfont: score(<Font 'LiSu' (SIMLI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Simple Bold Jut Out' (SPBLDJUT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
06/15/2023 07:50:50 PM findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'FZYaoTi' (FZYTK.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:50:50 PM findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
06/15/2023 07:50:50 PM findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
06/15/2023 07:50:50 PM findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 1.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Simple Indust Outline' (SPINDOUT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
06/15/2023 07:50:50 PM findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Bold Italic Art' (BLDITLAR.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:50:50 PM findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
06/15/2023 07:50:50 PM findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 1.25
06/15/2023 07:50:50 PM findfont: score(<Font 'STSong' (STSONG.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Old Antic Decorative' (OLDANDEC.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Old Antic Decorative' (OLDANDEC.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:50 PM findfont: score(<Font 'DecoType Thuluth' (DTHULUTH.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:50 PM findfont: score(<Font 'HYPMokGak-Bold' (H2MKPB.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'HYMyeongJo-Extra' (H2MJRE.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 0.25
06/15/2023 07:50:50 PM findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'HYGothic-Extra' (H2GTRE.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
06/15/2023 07:50:50 PM findfont: score(<Font 'DecoType Naskh' (DTNASKH0.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
06/15/2023 07:50:50 PM findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:50:50 PM findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
06/15/2023 07:50:50 PM findfont: score(<Font 'HYPost-Medium' (H2PORM.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
06/15/2023 07:50:50 PM findfont: score(<Font 'HYSinMyeongJo-Medium' (H2MJSM.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 1.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Farsi Simple Outline' (FRSSPOUT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
06/15/2023 07:50:50 PM findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:50:50 PM findfont: score(<Font 'STFangsong' (STFANGSO.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Simple Indust Shaded' (SPINDSHD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
06/15/2023 07:50:50 PM findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 0.5349999999999999
06/15/2023 07:50:50 PM findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 0.25
06/15/2023 07:50:50 PM findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'PT Simple Bold Ruled' (SPBLDRUL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Yet R' (HMFMOLD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:50:50 PM findfont: score(<Font 'STZhongsong' (STZHONGS.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
06/15/2023 07:50:50 PM findfont: score(<Font 'PT Bold Broken' (PTBLDBRK.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'PT Bold Dusky' (PTBLDDSK.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
06/15/2023 07:50:50 PM findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
06/15/2023 07:50:50 PM findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
06/15/2023 07:50:50 PM findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:50 PM findfont: score(<Font 'HYGraphic-Medium' (H2GPRM.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
06/15/2023 07:50:50 PM findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
06/15/2023 07:50:50 PM findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:50:50 PM findfont: score(<Font 'STXingkai' (STXINGKA.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
06/15/2023 07:50:50 PM findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Old Antic Outline' (OLDANOUT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
06/15/2023 07:50:50 PM findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Led Italic Font' (LEDITFNT.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
06/15/2023 07:50:50 PM findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:50:50 PM findfont: score(<Font 'STHupo' (STHUPO.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'HYPMokGak-Bold' (H2MKPB.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:50:50 PM findfont: score(<Font 'HYGraphic-Medium' (H2GPRM.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
06/15/2023 07:50:50 PM findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:50:50 PM findfont: score(<Font 'HYShortSamul-Medium' (H2SA1M.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
06/15/2023 07:50:50 PM findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'DecoType Naskh Swashes' (DTNASKH4.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
06/15/2023 07:50:50 PM findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Simple Indust Shaded' (SPINDSHD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'STHupo' (STHUPO.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'PT Bold Arch' (PTBLDARC.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
06/15/2023 07:50:50 PM findfont: score(<Font 'Ami R' (HMKMAMI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'HYPost-Light' (H2PORL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
06/15/2023 07:50:50 PM findfont: score(<Font 'PT Bold Dusky' (PTBLDDSK.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
06/15/2023 07:50:50 PM findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:50:50 PM findfont: score(<Font 'Diwani Bent' (DIWANBNT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:50:50 PM findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
06/15/2023 07:50:50 PM findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=11.0 to Arial ('C:\\Windows\\Fonts\\arial.ttf') with score of 0.050000.
06/15/2023 07:51:33 PM findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
06/15/2023 07:51:33 PM findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 2.335
06/15/2023 07:51:33 PM findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:51:33 PM findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 2.05
06/15/2023 07:51:33 PM findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:51:33 PM findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:51:33 PM findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
06/15/2023 07:51:33 PM findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:51:33 PM findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:51:33 PM findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:51:33 PM findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:51:33 PM findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:51:33 PM findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 3.05
06/15/2023 07:51:33 PM findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 3.335
06/15/2023 07:51:33 PM findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
06/15/2023 07:51:33 PM findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:51:33 PM findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:51:33 PM findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:51:33 PM findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:51:33 PM findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:51:33 PM findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:51:33 PM findfont: score(<Font 'FZShuTi' (FZSTK.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
06/15/2023 07:51:33 PM findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
06/15/2023 07:51:33 PM findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
06/15/2023 07:51:33 PM findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
06/15/2023 07:51:33 PM findfont: score(<Font 'Ami R' (HMKMAMI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Kufi Extended Outline' (KFEXTOUT.TTF) normal normal 400 expanded>) = 10.25
06/15/2023 07:51:33 PM findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'MoeumT R' (HMFMMUEX.TTC) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'DecoType Naskh Variants' (DTNASKH2.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
06/15/2023 07:51:33 PM findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:51:33 PM findfont: score(<Font 'HYMyeongJo-Extra' (H2MJRE.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
06/15/2023 07:51:33 PM findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'AGA Arabesque Desktop' (ARBSQDTP.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Farsi Simple Outline' (FRSSPOUT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:51:33 PM findfont: score(<Font 'HYGothic-Extra' (H2GTRE.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:51:33 PM findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:51:33 PM findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:51:33 PM findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
06/15/2023 07:51:33 PM findfont: score(<Font 'Bold Italic Art' (BLDITLAR.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
06/15/2023 07:51:33 PM findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'YouYuan' (SIMYOU.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
06/15/2023 07:51:33 PM findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
06/15/2023 07:51:33 PM findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
06/15/2023 07:51:33 PM findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:51:33 PM findfont: score(<Font 'Mudir MT' (MUDIR.TTF) normal normal 600 normal>) = 10.24
06/15/2023 07:51:33 PM findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'HYGungSo-Bold' (H2GSRB.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:51:33 PM findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
06/15/2023 07:51:33 PM findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
06/15/2023 07:51:33 PM findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'STXinwei' (STXINWEI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'New Gulim' (NGULIM.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Old Antic Bold' (OLDANBLD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
06/15/2023 07:51:33 PM findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:51:33 PM findfont: score(<Font 'PT Bold Heading' (PTBLDHAD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
06/15/2023 07:51:33 PM findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
06/15/2023 07:51:33 PM findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Simple Indust Outline' (SPINDOUT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Simple Outline Pat' (SPOUTPAT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'HYShortSamul-Medium' (H2SA1M.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
06/15/2023 07:51:33 PM findfont: score(<Font 'Akhbar MT' (AKHBRBD.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
06/15/2023 07:51:33 PM findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:51:33 PM findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
06/15/2023 07:51:33 PM findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Italic Outline Art' (ITLOUTAR.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:51:33 PM findfont: score(<Font 'DecoType Naskh Extensions' (DTNASKH3.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
06/15/2023 07:51:33 PM findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 1.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Headline R' (HMKMRHD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Akhbar MT' (AKHBR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'PT Bold Mirror' (PTBLDMRR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'PT Bold Mirror' (PTBLDMRR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Farsi Simple Bold' (FRSSPBL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:51:33 PM findfont: score(<Font 'PT Bold Stars' (PTBLSSTR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Old Antic Outline' (OLDANOUT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:51:33 PM findfont: score(<Font 'PT Simple Bold Ruled' (SPBLDRUL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
06/15/2023 07:51:33 PM findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:51:33 PM findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
06/15/2023 07:51:33 PM findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
06/15/2023 07:51:33 PM findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Monotype Koufi' (KOUFIBD.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
06/15/2023 07:51:33 PM findfont: score(<Font 'HYGothic-Medium' (H2GTRM.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Old Antic Outline Shaded' (OLDOUTSH.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
06/15/2023 07:51:33 PM findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Headline R' (HMKMRHD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'HYSinMyeongJo-Medium' (H2MJSM.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'STLiti' (STLITI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Diwani Outline Shaded' (DWNOUTSH.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'PT Bold Arch' (PTBLDARC.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
06/15/2023 07:51:33 PM findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
06/15/2023 07:51:33 PM findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 0.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:51:33 PM findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:51:33 PM findfont: score(<Font 'MoeumT R' (HMFMMUEX.TTC) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
06/15/2023 07:51:33 PM findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:51:33 PM findfont: score(<Font 'STKaiti' (STKAITI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 0.525
06/15/2023 07:51:33 PM findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
06/15/2023 07:51:33 PM findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Diwani Bent' (DIWANBNT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
06/15/2023 07:51:33 PM findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 0.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Diwani Outline Shaded' (DWNOUTSH.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
06/15/2023 07:51:33 PM findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
06/15/2023 07:51:33 PM findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:51:33 PM findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Akhbar MT' (AKHBR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Diwani Simple Outline 2' (DWNSH2.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 0.33499999999999996
06/15/2023 07:51:33 PM findfont: score(<Font 'STCaiyun' (STCAIYUN.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'STXihei' (STXIHEI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'STLiti' (STLITI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'FZYaoTi' (FZYTK.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Old Antic Bold' (OLDANBLD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Diwani Letter' (DIWANLTR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'New Gulim' (NGULIM.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 0.525
06/15/2023 07:51:33 PM findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
06/15/2023 07:51:33 PM findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'AGA Arabesque' (ARABSQ.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:51:33 PM findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
06/15/2023 07:51:33 PM findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 0.33499999999999996
06/15/2023 07:51:33 PM findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
06/15/2023 07:51:33 PM findfont: score(<Font 'DecoType Naskh Special' (DTNASKH1.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'AGA Arabesque' (ARABSQ.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'STCaiyun' (STCAIYUN.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'PT Separated Baloon' (PTSEPBAL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
06/15/2023 07:51:33 PM findfont: score(<Font 'HYPost-Medium' (H2PORM.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
06/15/2023 07:51:33 PM findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:51:33 PM findfont: score(<Font 'STKaiti' (STKAITI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
06/15/2023 07:51:33 PM findfont: score(<Font 'Simple Bold Jut Out' (SPBLDJUT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 1.25
06/15/2023 07:51:33 PM findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Diwani Simple Outline' (DWNSPOUT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
06/15/2023 07:51:33 PM findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:51:33 PM findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
06/15/2023 07:51:33 PM findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
06/15/2023 07:51:33 PM findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:51:33 PM findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:51:33 PM findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
06/15/2023 07:51:33 PM findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
06/15/2023 07:51:33 PM findfont: score(<Font 'DecoType Naskh Extensions' (DTNASKH3.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
06/15/2023 07:51:33 PM findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:51:33 PM findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
06/15/2023 07:51:33 PM findfont: score(<Font 'Kufi Outline Shaded' (KFOUTSHD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
06/15/2023 07:51:33 PM findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:51:33 PM findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Monotype Koufi' (KOUFIBD.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:51:33 PM findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
06/15/2023 07:51:33 PM findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
06/15/2023 07:51:33 PM findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'PT Separated Baloon' (PTSEPBAL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 1.535
06/15/2023 07:51:33 PM findfont: score(<Font 'HYGungSo-Bold' (H2GSRB.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
06/15/2023 07:51:33 PM findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
06/15/2023 07:51:33 PM findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'YouYuan' (SIMYOU.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'STXinwei' (STXINWEI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Simple Outline Pat' (SPOUTPAT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:51:33 PM findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'STFangsong' (STFANGSO.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:51:33 PM findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'HYHeadLine-Medium' (H2HDRM.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:51:33 PM findfont: score(<Font 'STXihei' (STXIHEI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:51:33 PM findfont: score(<Font 'STSong' (STSONG.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
06/15/2023 07:51:33 PM findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Mudir MT' (MUDIR.TTF) normal normal 600 normal>) = 10.24
06/15/2023 07:51:33 PM findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:51:33 PM findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 0.5349999999999999
06/15/2023 07:51:33 PM findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
06/15/2023 07:51:33 PM findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
06/15/2023 07:51:33 PM findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Italic Outline Art' (ITLOUTAR.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Pyunji R' (HMFMPYUN.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Magic R' (HMKMMAG.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'STZhongsong' (STZHONGS.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 1.535
06/15/2023 07:51:33 PM findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 500 normal>) = 10.145
06/15/2023 07:51:33 PM findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
06/15/2023 07:51:33 PM findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Kufi Outline Shaded' (KFOUTSHD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'AGA Arabesque Desktop' (ARBSQDTP.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Magic R' (HMKMMAG.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
06/15/2023 07:51:33 PM findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Diwani Simple Striped' (DWNSPSTR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'LiSu' (SIMLI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
06/15/2023 07:51:33 PM findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:51:33 PM findfont: score(<Font 'DecoType Thuluth' (DTHULUTH.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
06/15/2023 07:51:33 PM findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:51:33 PM findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
06/15/2023 07:51:33 PM findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Farsi Simple Bold' (FRSSPBL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Diwani Letter' (DIWANLTR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
06/15/2023 07:51:33 PM findfont: score(<Font 'PT Bold Stars' (PTBLSSTR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'HYHeadLine-Medium' (H2HDRM.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:51:33 PM findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:51:33 PM findfont: score(<Font 'PT Bold Heading' (PTBLDHAD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
06/15/2023 07:51:33 PM findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'DecoType Naskh Variants' (DTNASKH2.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
06/15/2023 07:51:33 PM findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 1.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:51:33 PM findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Diwani Simple Outline 2' (DWNSH2.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
06/15/2023 07:51:33 PM findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'DecoType Naskh' (DTNASKH0.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Pyunji R' (HMFMPYUN.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Diwani Simple Outline' (DWNSPOUT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
06/15/2023 07:51:33 PM findfont: score(<Font 'Diwani Simple Striped' (DWNSPSTR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:51:33 PM findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
06/15/2023 07:51:33 PM findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'DecoType Naskh Special' (DTNASKH1.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Akhbar MT' (AKHBRBD.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:51:33 PM findfont: score(<Font 'DecoType Naskh Swashes' (DTNASKH4.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:51:33 PM findfont: score(<Font 'PT Bold Broken' (PTBLDBRK.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:51:33 PM findfont: score(<Font 'FZShuTi' (FZSTK.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'STXingkai' (STXINGKA.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
06/15/2023 07:51:33 PM findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'HYPost-Light' (H2PORL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'HYGothic-Medium' (H2GTRM.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Kufi Extended Outline' (KFEXTOUT.TTF) normal normal 400 expanded>) = 10.25
06/15/2023 07:51:33 PM findfont: score(<Font 'Old Antic Outline Shaded' (OLDOUTSH.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:51:33 PM findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
06/15/2023 07:51:33 PM findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Led Italic Font' (LEDITFNT.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:51:33 PM findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Yet R' (HMFMOLD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
06/15/2023 07:51:33 PM findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
06/15/2023 07:51:33 PM findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:51:33 PM findfont: score(<Font 'LiSu' (SIMLI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Simple Bold Jut Out' (SPBLDJUT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
06/15/2023 07:51:33 PM findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'FZYaoTi' (FZYTK.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:51:33 PM findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
06/15/2023 07:51:33 PM findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
06/15/2023 07:51:33 PM findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 1.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Simple Indust Outline' (SPINDOUT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
06/15/2023 07:51:33 PM findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Bold Italic Art' (BLDITLAR.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:51:33 PM findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
06/15/2023 07:51:33 PM findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 1.25
06/15/2023 07:51:33 PM findfont: score(<Font 'STSong' (STSONG.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Old Antic Decorative' (OLDANDEC.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Old Antic Decorative' (OLDANDEC.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:51:33 PM findfont: score(<Font 'DecoType Thuluth' (DTHULUTH.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:51:33 PM findfont: score(<Font 'HYPMokGak-Bold' (H2MKPB.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'HYMyeongJo-Extra' (H2MJRE.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 0.25
06/15/2023 07:51:33 PM findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'HYGothic-Extra' (H2GTRE.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
06/15/2023 07:51:33 PM findfont: score(<Font 'DecoType Naskh' (DTNASKH0.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
06/15/2023 07:51:33 PM findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:51:33 PM findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
06/15/2023 07:51:33 PM findfont: score(<Font 'HYPost-Medium' (H2PORM.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
06/15/2023 07:51:33 PM findfont: score(<Font 'HYSinMyeongJo-Medium' (H2MJSM.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 1.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Farsi Simple Outline' (FRSSPOUT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
06/15/2023 07:51:33 PM findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:51:33 PM findfont: score(<Font 'STFangsong' (STFANGSO.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Simple Indust Shaded' (SPINDSHD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
06/15/2023 07:51:33 PM findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 0.5349999999999999
06/15/2023 07:51:33 PM findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 0.25
06/15/2023 07:51:33 PM findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'PT Simple Bold Ruled' (SPBLDRUL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Yet R' (HMFMOLD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:51:33 PM findfont: score(<Font 'STZhongsong' (STZHONGS.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
06/15/2023 07:51:33 PM findfont: score(<Font 'PT Bold Broken' (PTBLDBRK.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'PT Bold Dusky' (PTBLDDSK.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
06/15/2023 07:51:33 PM findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
06/15/2023 07:51:33 PM findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
06/15/2023 07:51:33 PM findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:51:33 PM findfont: score(<Font 'HYGraphic-Medium' (H2GPRM.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
06/15/2023 07:51:33 PM findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
06/15/2023 07:51:33 PM findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:51:33 PM findfont: score(<Font 'STXingkai' (STXINGKA.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
06/15/2023 07:51:33 PM findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Old Antic Outline' (OLDANOUT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
06/15/2023 07:51:33 PM findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Led Italic Font' (LEDITFNT.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
06/15/2023 07:51:33 PM findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:51:33 PM findfont: score(<Font 'STHupo' (STHUPO.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'HYPMokGak-Bold' (H2MKPB.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:51:33 PM findfont: score(<Font 'HYGraphic-Medium' (H2GPRM.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
06/15/2023 07:51:33 PM findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:51:33 PM findfont: score(<Font 'HYShortSamul-Medium' (H2SA1M.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
06/15/2023 07:51:33 PM findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'DecoType Naskh Swashes' (DTNASKH4.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
06/15/2023 07:51:33 PM findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Simple Indust Shaded' (SPINDSHD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'STHupo' (STHUPO.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'PT Bold Arch' (PTBLDARC.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
06/15/2023 07:51:33 PM findfont: score(<Font 'Ami R' (HMKMAMI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'HYPost-Light' (H2PORL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
06/15/2023 07:51:33 PM findfont: score(<Font 'PT Bold Dusky' (PTBLDDSK.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
06/15/2023 07:51:33 PM findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:51:33 PM findfont: score(<Font 'Diwani Bent' (DIWANBNT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:51:33 PM findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
06/15/2023 07:51:33 PM findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to Arial ('C:\\Windows\\Fonts\\arial.ttf') with score of 0.050000.
06/15/2023 07:56:51 PM findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=13.0.
06/15/2023 07:56:51 PM findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 2.335
06/15/2023 07:56:51 PM findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:56:51 PM findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 2.05
06/15/2023 07:56:51 PM findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:56:51 PM findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:56:51 PM findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
06/15/2023 07:56:51 PM findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:56:51 PM findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:56:51 PM findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:56:51 PM findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:56:51 PM findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:56:51 PM findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 3.05
06/15/2023 07:56:51 PM findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 3.335
06/15/2023 07:56:51 PM findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
06/15/2023 07:56:51 PM findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:56:51 PM findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:56:51 PM findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:56:51 PM findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:56:51 PM findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:56:51 PM findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:56:51 PM findfont: score(<Font 'FZShuTi' (FZSTK.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
06/15/2023 07:56:51 PM findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
06/15/2023 07:56:51 PM findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
06/15/2023 07:56:51 PM findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
06/15/2023 07:56:51 PM findfont: score(<Font 'Ami R' (HMKMAMI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Kufi Extended Outline' (KFEXTOUT.TTF) normal normal 400 expanded>) = 10.25
06/15/2023 07:56:51 PM findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'MoeumT R' (HMFMMUEX.TTC) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'DecoType Naskh Variants' (DTNASKH2.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
06/15/2023 07:56:51 PM findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:56:51 PM findfont: score(<Font 'HYMyeongJo-Extra' (H2MJRE.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
06/15/2023 07:56:51 PM findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'AGA Arabesque Desktop' (ARBSQDTP.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Farsi Simple Outline' (FRSSPOUT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:56:51 PM findfont: score(<Font 'HYGothic-Extra' (H2GTRE.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:56:51 PM findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:56:51 PM findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:56:51 PM findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
06/15/2023 07:56:51 PM findfont: score(<Font 'Bold Italic Art' (BLDITLAR.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
06/15/2023 07:56:51 PM findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'YouYuan' (SIMYOU.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
06/15/2023 07:56:51 PM findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
06/15/2023 07:56:51 PM findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
06/15/2023 07:56:51 PM findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:56:51 PM findfont: score(<Font 'Mudir MT' (MUDIR.TTF) normal normal 600 normal>) = 10.24
06/15/2023 07:56:51 PM findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'HYGungSo-Bold' (H2GSRB.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:56:51 PM findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
06/15/2023 07:56:51 PM findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
06/15/2023 07:56:51 PM findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'STXinwei' (STXINWEI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'New Gulim' (NGULIM.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Old Antic Bold' (OLDANBLD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
06/15/2023 07:56:51 PM findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:56:51 PM findfont: score(<Font 'PT Bold Heading' (PTBLDHAD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
06/15/2023 07:56:51 PM findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
06/15/2023 07:56:51 PM findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Simple Indust Outline' (SPINDOUT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Simple Outline Pat' (SPOUTPAT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'HYShortSamul-Medium' (H2SA1M.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
06/15/2023 07:56:51 PM findfont: score(<Font 'Akhbar MT' (AKHBRBD.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
06/15/2023 07:56:51 PM findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:56:51 PM findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
06/15/2023 07:56:51 PM findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Italic Outline Art' (ITLOUTAR.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:56:51 PM findfont: score(<Font 'DecoType Naskh Extensions' (DTNASKH3.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
06/15/2023 07:56:51 PM findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 1.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Headline R' (HMKMRHD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Akhbar MT' (AKHBR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'PT Bold Mirror' (PTBLDMRR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'PT Bold Mirror' (PTBLDMRR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Farsi Simple Bold' (FRSSPBL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:56:51 PM findfont: score(<Font 'PT Bold Stars' (PTBLSSTR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Old Antic Outline' (OLDANOUT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:56:51 PM findfont: score(<Font 'PT Simple Bold Ruled' (SPBLDRUL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
06/15/2023 07:56:51 PM findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:56:51 PM findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
06/15/2023 07:56:51 PM findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
06/15/2023 07:56:51 PM findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Monotype Koufi' (KOUFIBD.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
06/15/2023 07:56:51 PM findfont: score(<Font 'HYGothic-Medium' (H2GTRM.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Old Antic Outline Shaded' (OLDOUTSH.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
06/15/2023 07:56:51 PM findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Headline R' (HMKMRHD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'HYSinMyeongJo-Medium' (H2MJSM.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'STLiti' (STLITI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Diwani Outline Shaded' (DWNOUTSH.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'PT Bold Arch' (PTBLDARC.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
06/15/2023 07:56:51 PM findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
06/15/2023 07:56:51 PM findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 0.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:56:51 PM findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:56:51 PM findfont: score(<Font 'MoeumT R' (HMFMMUEX.TTC) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
06/15/2023 07:56:51 PM findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:56:51 PM findfont: score(<Font 'STKaiti' (STKAITI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 0.525
06/15/2023 07:56:51 PM findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
06/15/2023 07:56:51 PM findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Diwani Bent' (DIWANBNT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
06/15/2023 07:56:51 PM findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 0.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Diwani Outline Shaded' (DWNOUTSH.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
06/15/2023 07:56:51 PM findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
06/15/2023 07:56:51 PM findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:56:51 PM findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Akhbar MT' (AKHBR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Diwani Simple Outline 2' (DWNSH2.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 0.33499999999999996
06/15/2023 07:56:51 PM findfont: score(<Font 'STCaiyun' (STCAIYUN.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'STXihei' (STXIHEI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'STLiti' (STLITI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'FZYaoTi' (FZYTK.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Old Antic Bold' (OLDANBLD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Diwani Letter' (DIWANLTR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'New Gulim' (NGULIM.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 0.525
06/15/2023 07:56:51 PM findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
06/15/2023 07:56:51 PM findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'AGA Arabesque' (ARABSQ.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:56:51 PM findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
06/15/2023 07:56:51 PM findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 0.33499999999999996
06/15/2023 07:56:51 PM findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
06/15/2023 07:56:51 PM findfont: score(<Font 'DecoType Naskh Special' (DTNASKH1.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'AGA Arabesque' (ARABSQ.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'STCaiyun' (STCAIYUN.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'PT Separated Baloon' (PTSEPBAL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
06/15/2023 07:56:51 PM findfont: score(<Font 'HYPost-Medium' (H2PORM.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
06/15/2023 07:56:51 PM findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:56:51 PM findfont: score(<Font 'STKaiti' (STKAITI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
06/15/2023 07:56:51 PM findfont: score(<Font 'Simple Bold Jut Out' (SPBLDJUT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 1.25
06/15/2023 07:56:51 PM findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Diwani Simple Outline' (DWNSPOUT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
06/15/2023 07:56:51 PM findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:56:51 PM findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
06/15/2023 07:56:51 PM findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
06/15/2023 07:56:51 PM findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:56:51 PM findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:56:51 PM findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
06/15/2023 07:56:51 PM findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
06/15/2023 07:56:51 PM findfont: score(<Font 'DecoType Naskh Extensions' (DTNASKH3.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
06/15/2023 07:56:51 PM findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:56:51 PM findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
06/15/2023 07:56:51 PM findfont: score(<Font 'Kufi Outline Shaded' (KFOUTSHD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
06/15/2023 07:56:51 PM findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:56:51 PM findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Monotype Koufi' (KOUFIBD.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:56:51 PM findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
06/15/2023 07:56:51 PM findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
06/15/2023 07:56:51 PM findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'PT Separated Baloon' (PTSEPBAL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 1.535
06/15/2023 07:56:51 PM findfont: score(<Font 'HYGungSo-Bold' (H2GSRB.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
06/15/2023 07:56:51 PM findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
06/15/2023 07:56:51 PM findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'YouYuan' (SIMYOU.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'STXinwei' (STXINWEI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Simple Outline Pat' (SPOUTPAT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:56:51 PM findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'STFangsong' (STFANGSO.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:56:51 PM findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'HYHeadLine-Medium' (H2HDRM.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:56:51 PM findfont: score(<Font 'STXihei' (STXIHEI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:56:51 PM findfont: score(<Font 'STSong' (STSONG.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
06/15/2023 07:56:51 PM findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Mudir MT' (MUDIR.TTF) normal normal 600 normal>) = 10.24
06/15/2023 07:56:51 PM findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:56:51 PM findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 0.5349999999999999
06/15/2023 07:56:51 PM findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
06/15/2023 07:56:51 PM findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
06/15/2023 07:56:51 PM findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Italic Outline Art' (ITLOUTAR.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Pyunji R' (HMFMPYUN.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Magic R' (HMKMMAG.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'STZhongsong' (STZHONGS.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 1.535
06/15/2023 07:56:51 PM findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 500 normal>) = 10.145
06/15/2023 07:56:51 PM findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
06/15/2023 07:56:51 PM findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Kufi Outline Shaded' (KFOUTSHD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'AGA Arabesque Desktop' (ARBSQDTP.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Magic R' (HMKMMAG.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
06/15/2023 07:56:51 PM findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Diwani Simple Striped' (DWNSPSTR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'LiSu' (SIMLI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
06/15/2023 07:56:51 PM findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:56:51 PM findfont: score(<Font 'DecoType Thuluth' (DTHULUTH.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
06/15/2023 07:56:51 PM findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:56:51 PM findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
06/15/2023 07:56:51 PM findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Farsi Simple Bold' (FRSSPBL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Diwani Letter' (DIWANLTR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
06/15/2023 07:56:51 PM findfont: score(<Font 'PT Bold Stars' (PTBLSSTR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'HYHeadLine-Medium' (H2HDRM.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:56:51 PM findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:56:51 PM findfont: score(<Font 'PT Bold Heading' (PTBLDHAD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
06/15/2023 07:56:51 PM findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'DecoType Naskh Variants' (DTNASKH2.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
06/15/2023 07:56:51 PM findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 1.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:56:51 PM findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Diwani Simple Outline 2' (DWNSH2.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
06/15/2023 07:56:51 PM findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'DecoType Naskh' (DTNASKH0.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Pyunji R' (HMFMPYUN.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Diwani Simple Outline' (DWNSPOUT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
06/15/2023 07:56:51 PM findfont: score(<Font 'Diwani Simple Striped' (DWNSPSTR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:56:51 PM findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
06/15/2023 07:56:51 PM findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'DecoType Naskh Special' (DTNASKH1.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Akhbar MT' (AKHBRBD.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:56:51 PM findfont: score(<Font 'DecoType Naskh Swashes' (DTNASKH4.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:56:51 PM findfont: score(<Font 'PT Bold Broken' (PTBLDBRK.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:56:51 PM findfont: score(<Font 'FZShuTi' (FZSTK.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'STXingkai' (STXINGKA.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
06/15/2023 07:56:51 PM findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'HYPost-Light' (H2PORL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'HYGothic-Medium' (H2GTRM.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Kufi Extended Outline' (KFEXTOUT.TTF) normal normal 400 expanded>) = 10.25
06/15/2023 07:56:51 PM findfont: score(<Font 'Old Antic Outline Shaded' (OLDOUTSH.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:56:51 PM findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
06/15/2023 07:56:51 PM findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Led Italic Font' (LEDITFNT.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:56:51 PM findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Yet R' (HMFMOLD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
06/15/2023 07:56:51 PM findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
06/15/2023 07:56:51 PM findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:56:51 PM findfont: score(<Font 'LiSu' (SIMLI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Simple Bold Jut Out' (SPBLDJUT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
06/15/2023 07:56:51 PM findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'FZYaoTi' (FZYTK.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:56:51 PM findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
06/15/2023 07:56:51 PM findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
06/15/2023 07:56:51 PM findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 1.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Simple Indust Outline' (SPINDOUT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
06/15/2023 07:56:51 PM findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Bold Italic Art' (BLDITLAR.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:56:51 PM findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
06/15/2023 07:56:51 PM findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 1.25
06/15/2023 07:56:51 PM findfont: score(<Font 'STSong' (STSONG.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Old Antic Decorative' (OLDANDEC.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Old Antic Decorative' (OLDANDEC.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:56:51 PM findfont: score(<Font 'DecoType Thuluth' (DTHULUTH.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:56:51 PM findfont: score(<Font 'HYPMokGak-Bold' (H2MKPB.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'HYMyeongJo-Extra' (H2MJRE.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 0.25
06/15/2023 07:56:51 PM findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'HYGothic-Extra' (H2GTRE.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
06/15/2023 07:56:51 PM findfont: score(<Font 'DecoType Naskh' (DTNASKH0.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
06/15/2023 07:56:51 PM findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:56:51 PM findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
06/15/2023 07:56:51 PM findfont: score(<Font 'HYPost-Medium' (H2PORM.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
06/15/2023 07:56:51 PM findfont: score(<Font 'HYSinMyeongJo-Medium' (H2MJSM.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 1.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Farsi Simple Outline' (FRSSPOUT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
06/15/2023 07:56:51 PM findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:56:51 PM findfont: score(<Font 'STFangsong' (STFANGSO.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Simple Indust Shaded' (SPINDSHD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
06/15/2023 07:56:51 PM findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 0.5349999999999999
06/15/2023 07:56:51 PM findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 0.25
06/15/2023 07:56:51 PM findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'PT Simple Bold Ruled' (SPBLDRUL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Yet R' (HMFMOLD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:56:51 PM findfont: score(<Font 'STZhongsong' (STZHONGS.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
06/15/2023 07:56:51 PM findfont: score(<Font 'PT Bold Broken' (PTBLDBRK.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'PT Bold Dusky' (PTBLDDSK.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
06/15/2023 07:56:51 PM findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
06/15/2023 07:56:51 PM findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
06/15/2023 07:56:51 PM findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:56:51 PM findfont: score(<Font 'HYGraphic-Medium' (H2GPRM.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
06/15/2023 07:56:51 PM findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
06/15/2023 07:56:51 PM findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:56:51 PM findfont: score(<Font 'STXingkai' (STXINGKA.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
06/15/2023 07:56:51 PM findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Old Antic Outline' (OLDANOUT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
06/15/2023 07:56:51 PM findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Led Italic Font' (LEDITFNT.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
06/15/2023 07:56:51 PM findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:56:51 PM findfont: score(<Font 'STHupo' (STHUPO.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'HYPMokGak-Bold' (H2MKPB.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
06/15/2023 07:56:51 PM findfont: score(<Font 'HYGraphic-Medium' (H2GPRM.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
06/15/2023 07:56:51 PM findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
06/15/2023 07:56:51 PM findfont: score(<Font 'HYShortSamul-Medium' (H2SA1M.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
06/15/2023 07:56:51 PM findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'DecoType Naskh Swashes' (DTNASKH4.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
06/15/2023 07:56:51 PM findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Simple Indust Shaded' (SPINDSHD.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'STHupo' (STHUPO.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'PT Bold Arch' (PTBLDARC.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
06/15/2023 07:56:51 PM findfont: score(<Font 'Ami R' (HMKMAMI.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'HYPost-Light' (H2PORL.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
06/15/2023 07:56:51 PM findfont: score(<Font 'PT Bold Dusky' (PTBLDDSK.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
06/15/2023 07:56:51 PM findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
06/15/2023 07:56:51 PM findfont: score(<Font 'Diwani Bent' (DIWANBNT.TTF) normal normal 400 normal>) = 10.05
06/15/2023 07:56:51 PM findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
06/15/2023 07:56:51 PM findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=13.0 to Arial ('C:\\Windows\\Fonts\\arial.ttf') with score of 0.050000.
06/15/2023 08:00:37 PM locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x000001915C058310>
06/15/2023 08:00:37 PM Using auto colorbar locator <matplotlib.colorbar._ColorbarAutoLocator object at 0x000001915C058310> on colorbar
06/15/2023 08:00:37 PM Setting pcolormesh
06/15/2023 08:00:37 PM top of axes not in the figure, so title not moved
06/15/2023 08:00:38 PM top of axes not in the figure, so title not moved
06/15/2023 08:00:38 PM top of axes not in the figure, so title not moved
06/15/2023 08:00:38 PM top of axes not in the figure, so title not moved
06/15/2023 08:00:38 PM top of axes not in the figure, so title not moved
06/15/2023 08:01:35 PM Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
06/15/2023 08:01:35 PM NumExpr defaulting to 8 threads.
